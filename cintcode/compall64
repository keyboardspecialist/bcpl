.k arg

echo "Compile the 64 bigender versions"
c bsb64 bootsys "<arg>"
c bsb64 blib "<arg>"
c bsb64 dlibsys "<arg>"
c bsb64 clisys "<arg>"
c bcb64 abort "<arg>"
c bcb64 echo "<arg>"
c bcb64 bcpl "<arg>"
c bcb64 c "<arg>"

echo "Compiling the 64 little ender versions"
c bsl64 bootsys "<arg>"
c bsl64 blib "<arg>"
c bsl64 dlibsys "<arg>"
c bsl64 clisys "<arg>"
c bcl64 abort "<arg>"
c bcl64 echo "<arg>"
c bcl64 bcpl "<arg>"
c bcl64 c "<arg>"

echo "Compiling the system files"
c bs64 bootsys "<arg>"
c bs64 blib "<arg>"
c bs64 dlibsys "<arg>"
c bs64 clisys "<arg>"

echo "Compiling all the standard commands"
c bc64 abort "<arg>"
c bc64 adjclock "<arg>"
c bc64 append "<arg>"
c bc64 barcodelines "<arg>"
c bc64 bardecode "<arg>"
c bc64 bcpl "<arg>"
c bc64 bbcbcpl "<arg>"
c bc64 bbc2bcpl "<arg>"
c bc64 bcplint "<arg>"
c bc64 bcpl2sial "<arg>"
c bc64 bcplcgsial "<arg>"
c bc64 bcplxref "<arg>"
c bc64 bench100 "<arg>"
c bc64 bgpm "<arg>"
c bc64 bin-hex "<arg>"
c bc64 bin2n "<arg>"
c bc64 bin-x8 "<arg>"
c bc64 bits2wav "<arg>"
c bc64 bmake "<arg>"
c bc64 bucket "<arg>"
c bc64 bucketnew "<arg>"
# c bc64 break "<arg>"
c bc64 c "<arg>"
c bc64 casech "<arg>"
c bc64 cg-intcode "<arg>"
c bc64 checksum "<arg>"
c bc64 cmpltest "<arg>"
c bc64 cobench "<arg>"
c bc64 cobounce "<arg>"
c bc64 compare "<arg>"
c bc64 cosim "<arg>"
c bc64 cotest "<arg>"
c bc64 dat "<arg>"
c bc64 date "<arg>"
c bc64 dcounts "<arg>"
c bc64 delete "<arg>"
c bc64 detab "<arg>"
c bc64 dnaplot "<arg>"
c bc64 dumpmem "<arg>"
c bc64 dumppos "<arg>"
c bc64 dumpsys "<arg>"
c bc64 easter "<arg>"
c bc64 echo "<arg>"
c bc64 edit "<arg>"
c bc64 engine "<arg>"
c bc64 enlarge "<arg>"
c bc64 fast "<arg>"
# c bc64 fcmpltest "<arg>"
# c bc64 fltcmpltest "<arg>"
c bc64 fail "<arg>"
c bc64 failat "<arg>"
c bc64 fbcpl "<arg>"
c bc64 getbuild"<arg>"
c bc64 getlogname "<arg>"
c bc64 gltst "<arg>"
c bc64 graphdemo "<arg>"
c bc64 hello "<arg>"
# c bc64 help "<arg>"
c bc64 hex-bin "<arg>"
c bc64 hexdump "<arg>"
c bc64 idvec "<arg>"
c bc64 if "<arg>"
c bc64 input "<arg>"
c bc64 interp "<arg>"
c bc64 interpreter "<arg>"
c bc64 join "<arg>"
c bc64 joytest "<arg>"
c bc64 lab "<arg>"
c bc64 library "<arg>"
c bc64 life "<arg>"
c bc64 logout "<arg>"
c bc64 makeinit "<arg>"
c bc64 map "<arg>"
c bc64 mapcode "<arg>"
c bc64 mcpl "<arg>"
# c bc64 mcarm "<arg>"
# c bc64 mci386 "<arg>"
c bc64 mcpl2mial "<arg>"
c bc64 mial-386 "<arg>"
c bc64 mial-masm "<arg>"
c bc64 nlconv "<arg>"
c bc64 n2bin "<arg>"
c bc64 origbcpl "<arg>"
# c bc64 pal70 "<arg>"
c bc64 pidigs "<arg>"
# c bc64 pal75 "<arg>"
c bc64 playgraph "<arg>"
# c bc64 playmus "<arg>"
c bc64 polltest "<arg>"
c bc64 posdebug "<arg>"
c bc64 prefix "<arg>"
c bc64 preload "<arg>"
c bc64 prmcode "<arg>"
c bc64 prmidi "<arg>"
c bc64 procode "<arg>"
c bc64 prompt "<arg>"
c bc64 qr "<arg>"
c bc64 quit "<arg>"
c bc64 rast2ps "<arg>"
c bc64 rast2wav "<arg>"
c bc64 raster "<arg>"
c bc64 rdbarcode "<arg>"
c bc64 rename "<arg>"
c bc64 repeat "<arg>"
c bc64 rl-decode "<arg>"
c bc64 rl-encode "<arg>"
c bc64 safebcpl "<arg>"
c bc64 sbcpl "<arg>"
c bc64 setlogname "<arg>"
c bc64 setroot "<arg>"
c bc64 shellcom "<arg>"
c bc64 sial-386 "<arg>"
c bc64 sial-686 "<arg>"
# c bc64 sial-alpha "<arg>"
# c bc64 sial-arm "<arg>"
# c bc64 sial-armvfpv2 "<arg>"
c bc64 sial-sasm "<arg>"
# c bc64 sial-vax "<arg>"
c bc64 skip "<arg>"
c bc64 slow "<arg>"
c bc64 sortlines "<arg>"
c bc64 sortxref "<arg>"
c bc64 stack "<arg>"
c bc64 stats "<arg>"
c bc64 sudoku "<arg>"
# c bc64 swtest "<arg>"
c bc64 sysdebug "<arg>"
c bc64 system "<arg>"
c bc64 sysinfo "<arg>"
c bc64 testext "<arg>"
c bc64 testtr "<arg>"
c bc64 testtime "<arg>"
c bc64 time "<arg>"
c bc64 tst "<arg>"
# c bc64 tstfloat "<arg>"
c bc64 tstmuldivbits "<arg>"
c bc64 type "<arg>"
c bc64 typeflush "<arg>"
c bc64 typehex "<arg>"
c bc64 unpreload "<arg>"
c bc64 vecstats "<arg>"
c bc64 vspl "<arg>"
c bc64 wait "<arg>"
c bc64 why "<arg>"
c bc64 wrbarcode "<arg>"
c bc64 x8-bin "<arg>"
# c bc64 xcmpltest "<arg>"
c bc64 xcdecode "<arg>"
c bc64 xcencode "<arg>"
c bc64 xdecode "<arg>"
c bc64 xencode "<arg>"
c bc64 xpal70 "<arg>"
c bc64 z80asm "<arg>"
c bc64 z80bcpl "<arg>"
