Ass_dev M:4 DEF libhdr.h[713] Ass_dev=4
Ass_dir M:2 DEF libhdr.h[711] Ass_dir=2
Ass_link M:0 DEF libhdr.h[709] Ass_link=0
Ass_name M:5 DEF libhdr.h[714] Ass_name=5
Ass_task M:1 DEF libhdr.h[710] Ass_task=1
Ass_type M:3 DEF libhdr.h[712] Ass_type=3
B2Wsh M:2 DEF libhdr.h[26] B2Wsh=1+32/32
B2Wsh M:2 MAN libhdr.h[240] bytesperword=1<<B2Wsh
CloseObj M:1 DEF libhdr.h[289] CloseObj=1
Dcb_arg M:4 DEF libhdr.h[653] Dcb_arg=4
Dcb_cvp M:16 DEF libhdr.h[667] Dcb_cvp=16
Dcb_devid M:1 DEF libhdr.h[650] Dcb_devid=1
Dcb_flag M:7 DEF libhdr.h[656] Dcb_flag=7
Dcb_intson M:6 DEF libhdr.h[655] Dcb_intson=6
Dcb_irq M:5 DEF libhdr.h[654] Dcb_irq=5
Dcb_op M:3 DEF libhdr.h[652] Dcb_op=3
Dcb_threadp M:14 DEF libhdr.h[666] Dcb_threadp=14
Dcb_type M:0 DEF libhdr.h[649] Dcb_type=0
Dcb_upb M:17 DEF libhdr.h[671] Dcb_upb=17
Dcb_var0 M:8 DEF libhdr.h[660] Dcb_var0=8
Dcb_var1 M:9 DEF libhdr.h[661] Dcb_var1=9
Dcb_var2 M:10 DEF libhdr.h[662] Dcb_var2=10
Dcb_var3 M:11 DEF libhdr.h[663] Dcb_var3=11
Dcb_var4 M:12 DEF libhdr.h[664] Dcb_var4=12
Dcb_wkq M:2 DEF libhdr.h[651] Dcb_wkq=2
Devc_create M:1 DEF libhdr.h[681] Devc_create=1
Devc_destroy M:2 DEF libhdr.h[682] Devc_destroy=2
Devc_setintson M:5 DEF libhdr.h[685] Devc_setintson=5
Devc_start M:3 DEF libhdr.h[683] Devc_start=3
Devc_stop M:4 DEF libhdr.h[684] Devc_stop=4
Devt_clk M:1 DEF libhdr.h[674] Devt_clk=1
Devt_fileop M:4 DEF libhdr.h[677] Devt_fileop=4
Devt_tcpdev M:5 DEF libhdr.h[678] Devt_tcpdev=5
Devt_ttyin M:2 DEF libhdr.h[675] Devt_ttyin=2
Devt_ttyout M:3 DEF libhdr.h[676] Devt_ttyout=3
GB2312 M:-2 DEF libhdr.h[582] GB2312=-2
InitObj M:0 DEF libhdr.h[288] InitObj=0
ON64 M:0 DEF libhdr.h[28] ON64=32=64
State_dead M:12 DEF libhdr.h[700] State_dead=12
State_hold M:2 DEF libhdr.h[697] State_hold=2
State_int M:8 DEF libhdr.h[699] State_int=8
State_pkt M:1 DEF libhdr.h[696] State_pkt=1
State_wait M:4 DEF libhdr.h[698] State_wait=4
Sys_buttons M:56 DEF libhdr.h[460] Sys_buttons=56
Sys_callc M:59 DEF libhdr.h[463] Sys_callc=59
Sys_callnative M:53 DEF libhdr.h[457] Sys_callnative=53
Sys_close M:16 DEF libhdr.h[423] Sys_close=16
Sys_cputime M:30 DEF libhdr.h[436] Sys_cputime=30
Sys_datstamp M:44 DEF libhdr.h[448] Sys_datstamp=44
Sys_delay M:57 DEF libhdr.h[461] Sys_delay=57
Sys_deletefile M:17 DEF libhdr.h[424] Sys_deletefile=17
Sys_devcom M:43 DEF libhdr.h[447] Sys_devcom=43
Sys_dumpmem M:52 DEF libhdr.h[456] Sys_dumpmem=52
Sys_ext M:68 DEF libhdr.h[474] Sys_ext=68
Sys_filemodtime M:31 DEF libhdr.h[437] Sys_filemodtime=31
Sys_filesize M:46 DEF libhdr.h[450] Sys_filesize=46
Sys_flt M:63 DEF libhdr.h[468] Sys_flt=63
Sys_freevec M:22 DEF libhdr.h[429] Sys_freevec=22
Sys_getpid M:51 DEF libhdr.h[455] Sys_getpid=51
Sys_getprefix M:33 DEF libhdr.h[439] Sys_getprefix=33
Sys_getsysval M:48 DEF libhdr.h[452] Sys_getsysval=48
Sys_gettrval M:62 DEF libhdr.h[467] Sys_gettrval=62
Sys_getvec M:21 DEF libhdr.h[428] Sys_getvec=21
Sys_gl M:67 DEF libhdr.h[473] Sys_gl=67
Sys_globin M:24 DEF libhdr.h[431] Sys_globin=24
Sys_graphics M:34 DEF libhdr.h[440] Sys_graphics=34
Sys_inc M:55 DEF libhdr.h[459] Sys_inc=55
Sys_incdcount M:65 DEF libhdr.h[470] Sys_incdcount=65
Sys_interpret M:7 DEF libhdr.h[415] Sys_interpret=7
Sys_intflag M:28 DEF libhdr.h[434] Sys_intflag=28
Sys_joy M:69 DEF libhdr.h[475] Sys_joy=69
Sys_loadseg M:23 DEF libhdr.h[430] Sys_loadseg=23
Sys_lockirq M:41 DEF libhdr.h[445] Sys_lockirq=41
Sys_muldiv M:26 DEF libhdr.h[433] Sys_muldiv=26
Sys_openappend M:19 DEF libhdr.h[426] Sys_openappend=19
Sys_openread M:14 DEF libhdr.h[421] Sys_openread=14
Sys_openreadwrite M:47 DEF libhdr.h[451] Sys_openreadwrite=47
Sys_openwrite M:15 DEF libhdr.h[422] Sys_openwrite=15
Sys_platform M:54 DEF libhdr.h[458] Sys_platform=54
Sys_pollsardch M:64 DEF libhdr.h[469] Sys_pollsardch=64
Sys_putsysval M:49 DEF libhdr.h[453] Sys_putsysval=49
Sys_quit M:0 DEF libhdr.h[408] Sys_quit=0
Sys_read M:12 DEF libhdr.h[419] Sys_read=12
Sys_renamefile M:18 DEF libhdr.h[425] Sys_renamefile=18
Sys_rti M:1 DEF libhdr.h[409] Sys_rti=1
Sys_sardch M:10 DEF libhdr.h[417] Sys_sardch=10
Sys_saveregs M:2 DEF libhdr.h[410] Sys_saveregs=2
Sys_sawrch M:11 DEF libhdr.h[418] Sys_sawrch=11
Sys_sdl M:66 DEF libhdr.h[472] Sys_sdl=66
Sys_seek M:38 DEF libhdr.h[442] Sys_seek=38
Sys_setcount M:-1 DEF libhdr.h[407] Sys_setcount=-1
Sys_setprefix M:32 DEF libhdr.h[438] Sys_setprefix=32
Sys_setraster M:29 DEF libhdr.h[435] Sys_setraster=29
Sys_setst M:3 DEF libhdr.h[411] Sys_setst=3
Sys_settracing M:70 DEF libhdr.h[476] Sys_settracing=70
Sys_settrcount M:61 DEF libhdr.h[466] Sys_settrcount=61
Sys_shellcom M:50 DEF libhdr.h[454] Sys_shellcom=50
Sys_sound M:58 DEF libhdr.h[462] Sys_sound=58
Sys_tally M:6 DEF libhdr.h[414] Sys_tally=6
Sys_tell M:39 DEF libhdr.h[443] Sys_tell=39
Sys_tracing M:4 DEF libhdr.h[412] Sys_tracing=4
Sys_trpush M:60 DEF libhdr.h[465] Sys_trpush=60
Sys_unloadseg M:25 DEF libhdr.h[432] Sys_unloadseg=25
Sys_unlockirq M:42 DEF libhdr.h[446] Sys_unlockirq=42
Sys_waitirq M:40 DEF libhdr.h[444] Sys_waitirq=40
Sys_watch M:5 DEF libhdr.h[413] Sys_watch=5
Sys_write M:13 DEF libhdr.h[420] Sys_write=13
Task_cli M:1 DEF libhdr.h[688] Task_cli=1
Task_consolehandler M:3 DEF libhdr.h[690] Task_consolehandler=3
Task_debug M:2 DEF libhdr.h[689] Task_debug=2
Task_filehandler M:4 DEF libhdr.h[691] Task_filehandler=4
Task_mbxhandler M:5 DEF libhdr.h[692] Task_mbxhandler=5
Task_tcphandler M:6 DEF libhdr.h[693] Task_tcphandler=6
UTF8 M:-1 DEF libhdr.h[581] UTF8=-1
abort G:28 DEF libhdr.h[64] abort=28
absolute M:1 DEF com/z80asm.b[317] absolute=1
absolute M:1 MAN com/z80asm.b[4378] mode:=absolute
absolute M:1 MAN com/z80asm.b[4379]
    code.gen(cd.module,mode=absolute,modulename)
absolute M:1 MAN com/z80asm.b[4556] mode:=absolute
absolute M:1 MAN com/z80asm.b[4559]
    putlab(lab,pc,(mode=absolute->type.lab,type.rellab)|(def.count>0->flag.def,0))
absolute M:1 MAN com/z80asm.b[4612] mode:=absolute
absolute M:1 MAN com/z80asm.b[4613] UNLESS mode=absolute DO ..
absolute M:1 MAN com/z80asm.b[4777] mode:=absolute
absolute M:1 MAN com/z80asm.b[4812] mode:=absolute
absolute M:1 MAN com/z80asm.b[5034] mode:=absolute
absproc G:308 DEF com/z80asm.b[138] absproc=ug+108
absproc G:308 LG com/z80asm.b[6929] code.put("ABS",absproc,0)
absproc G:308 RT com/z80asm.b[5031] LET absproc(lab)BE..
add.local.text G:250 DEF com/z80asm.b[72] add.local.text=ug+50
add.macro.parm F:607 LF com/z80asm.b[3223]
    add.macro.parm(macro,item.info)
add.macro.parm F:607 LF com/z80asm.b[3227]
    add.macro.parm(macro,item.info)
add.macro.parm F:607 RT com/z80asm.b[3432]
    LET add.macro.parm(macro,parm)BE..
adde F:1036 FN com/z80asm.b[4690] LET adde(ansvec)=..
adde F:1036 LF com/z80asm.b[4674] adde(ansvec)
adde F:1036 LF com/z80asm.b[4680] ansvec!0:=ansvec!0>>adde(a)
adde F:1036 LF com/z80asm.b[4681] ansvec!0:=ansvec!0<<adde(a)
allsyms G:386 DEF com/z80asm.b[228] allsyms=ug+186
allsyms G:386 LG com/z80asm.b[1252]
    IF allsyms|file.number(@line.no)=0|(t.type!entry&flag.double)~=0 DO ..
allsyms G:386 LG com/z80asm.b[1289]
    IF allsyms|file.no=0|(typecode&flag.double)~=0 DO ..
allsyms G:386 LG com/z80asm.b[2918] IF allsyms DO ..
allsyms G:386 LG com/z80asm.b[4412] IF list>0|allsyms|badlabs>0 DO ..
allsyms G:386 SG com/z80asm.b[5297] allsyms:=TRUE
allsyms G:386 SG com/z80asm.b[5454] allsyms:=FALSE
alpharec F:294 LF com/z80asm.b[1842] alpharec(arg,type,arg1)
alpharec F:294 LF com/z80asm.b[1860] alpharec(arg1,cd.module,arg->0,1)
alpharec F:294 LF com/z80asm.b[1872] alpharec(arg,cd.code,arg1)
alpharec F:294 RT com/z80asm.b[1726] LET alpharec(str,type,info)BE..
ande F:1034 FN com/z80asm.b[4660] LET ande(ansvec)=..
ande F:1034 LF com/z80asm.b[4649] ande(ansvec)
ande F:1034 LF com/z80asm.b[4652] ansvec!0:=ansvec!0|ande(a)
appendstream G:66 DEF libhdr.h[102] appendstream=66
b.bcde M:128 DEF com/z80asm.b[473] b.bcde=bit7
b.bcde M:128 MAN com/z80asm.b[483] r.bc=b.dd|b.qq|b.pp|b.rr|b.bcde|0
b.bcde M:128 MAN com/z80asm.b[484] r.de=b.dd|b.qq|b.pp|b.rr|b.bcde|1
b.bcde M:128 MAN com/z80asm.b[6021] r:=getrset(b.bcde)
b.bcde M:128 MAN com/z80asm.b[6083] r:=getrset(b.ixyhl|b.bcde)
b.bcde M:128 MAN com/z80asm.b[6106] TEST 0~=(r&b.bcde) THEN .. ELSE ..
b.cc M:1024 DEF com/z80asm.b[470] b.cc=bit10
b.cc M:1024 MAN com/z80asm.b[476] r.c=b.r|1|b.cc|3<<3
b.cc M:1024 MAN com/z80asm.b[491] cc.nz=b.cc|0<<3
b.cc M:1024 MAN com/z80asm.b[492] cc.z=b.cc|1<<3
b.cc M:1024 MAN com/z80asm.b[493] cc.nc=b.cc|2<<3
b.cc M:1024 MAN com/z80asm.b[495] cc.po=b.cc|4<<3
b.cc M:1024 MAN com/z80asm.b[496] cc.pe=b.cc|5<<3
b.cc M:1024 MAN com/z80asm.b[497] cc.p=b.cc|6<<3
b.cc M:1024 MAN com/z80asm.b[498] cc.m=b.cc|7<<3
b.cc M:1024 MAN com/z80asm.b[6353] cc:=getrset(b.cc)
b.cc M:1024 MAN com/z80asm.b[6374] cc:=getrset(b.cc)
b.cc M:1024 MAN com/z80asm.b[6390] cc:=getrset(b.cc)
b.cc M:1024 MAN com/z80asm.b[6417] cc:=getrset(b.cc)
b.dd M:16384 DEF com/z80asm.b[466] b.dd=bit14
b.dd M:16384 MAN com/z80asm.b[481] r.hl=b.dd|b.qq|b.ixyhl|6
b.dd M:16384 MAN com/z80asm.b[483] r.bc=b.dd|b.qq|b.pp|b.rr|b.bcde|0
b.dd M:16384 MAN com/z80asm.b[484] r.de=b.dd|b.qq|b.pp|b.rr|b.bcde|1
b.dd M:16384 MAN com/z80asm.b[487] r.sp=b.dd|b.pp|b.rr|3
b.dd M:16384 MAN com/z80asm.b[6013] r:=getrset(b.r|b.rori|b.dd|b.ixyhl)
b.dd M:16384 MAN com/z80asm.b[6092] r:=getrset(b.ixyhl|b.dd)
b.dd M:16384 MAN com/z80asm.b[6150] b.dd
b.dd M:16384 MAN com/z80asm.b[6463] getrset(b.dd|b.ixiy)
b.dd M:16384 MAN com/z80asm.b[6471] UNLESS 0=(b.dd&r) DO ..
b.ixiy M:64 DEF com/z80asm.b[474] b.ixiy=bit6
b.ixiy M:64 MAN com/z80asm.b[485] r.ix=b.pp|b.ixyhl|b.ixiy|6
b.ixiy M:64 MAN com/z80asm.b[486] r.iy=b.rr|b.ixyhl|b.ixiy|6
b.ixiy M:64 MAN com/z80asm.b[6463] getrset(b.dd|b.ixiy)
b.ixiy M:64 MAN com/z80asm.b[6517] dd:=getrset(b.qq|b.ixiy)
b.ixyhl M:512 DEF com/z80asm.b[471] b.ixyhl=bit9
b.ixyhl M:512 MAN com/z80asm.b[481] r.hl=b.dd|b.qq|b.ixyhl|6
b.ixyhl M:512 MAN com/z80asm.b[485] r.ix=b.pp|b.ixyhl|b.ixiy|6
b.ixyhl M:512 MAN com/z80asm.b[486] r.iy=b.rr|b.ixyhl|b.ixiy|6
b.ixyhl M:512 MAN com/z80asm.b[5795] getrset(b.ixyhl)
b.ixyhl M:512 MAN com/z80asm.b[6013] r:=getrset(b.r|b.rori|b.dd|b.ixyhl)
b.ixyhl M:512 MAN com/z80asm.b[6061] r=r.sp->getrset(b.ixyhl),r.bad
b.ixyhl M:512 MAN com/z80asm.b[6070] TEST 0=(r&b.ixyhl) THEN .. ELSE ..
b.ixyhl M:512 MAN com/z80asm.b[6074] UNLESS 0~=(r&b.ixyhl) DO ..
b.ixyhl M:512 MAN com/z80asm.b[6083] r:=getrset(b.ixyhl|b.bcde)
b.ixyhl M:512 MAN com/z80asm.b[6092] r:=getrset(b.ixyhl|b.dd)
b.ixyhl M:512 MAN com/z80asm.b[6097] TEST 0~=(r&b.ixyhl) THEN .. ELSE ..
b.ixyhl M:512 MAN com/z80asm.b[6154] addopreg:=getrset(b.ixyhl)
b.nextmod M:1 DEF com/z80asm.b[304] b.nextmod=1
b.nextmod M:1 MAN com/z80asm.b[1625]
    IF binbuf!b.nextmod=binbuf!b.top DO ..
b.nextmod M:1 MAN com/z80asm.b[1626]
    IF binbuf!b.top>=binbufsize+b.nextmod DO ..
b.nextmod M:1 MAN com/z80asm.b[1629]
    binbuf!b.nextmod:=binbuf!b.nextmod+1
b.nextmod M:1 MAN com/z80asm.b[1630] binbuf!binbuf!b.nextmod:=n&m
b.nextmod M:1 MAN com/z80asm.b[1656]
    TEST b.nextmod<binbuf!b.nextmod+places&binbuf!b.nextmod+places<=binbuf!b.top THEN .. ELSE ..
b.nextmod M:1 MAN com/z80asm.b[1657]
    binbuf!b.nextmod:=binbuf!b.nextmod+places
b.nextmod M:1 MAN com/z80asm.b[2473] b.nextmod+1
b.nextmod M:1 MAN com/z80asm.b[2510]
    UNLESS no.output|binbuf!b.top<=b.nextmod&control.line DO ..
b.nextmod M:1 MAN com/z80asm.b[2521] startpc:=pc+bufpos-b.nextmod+1
b.nextmod M:1 MAN com/z80asm.b[2529]
    TEST linbuf%1=comntch|pc=startpc+binbuf!b.top-b.nextmod THEN .. ELSE ..
b.nextmod M:1 MAN com/z80asm.b[2563] IF binbuf!b.top>b.nextmod DO ..
b.nextmod M:1 MAN com/z80asm.b[2565]
    FOR i=1+b.nextmod TO binbuf!b.top DO..
b.nextmod M:1 MAN com/z80asm.b[2577] pc:=pc+binbuf!b.top-b.nextmod
b.nextmod M:1 MAN com/z80asm.b[2579] binbuf!b.top:=b.nextmod
b.nextmod M:1 MAN com/z80asm.b[2580] binbuf!b.nextmod:=binbuf!b.top
b.nextmod M:1 MAN com/z80asm.b[4290]
    binbuf:=simplegetvec(binbufsize+b.nextmod)
b.nextmod M:1 MAN com/z80asm.b[4291] binbuf!b.top:=b.nextmod
b.nextmod M:1 MAN com/z80asm.b[4292] binbuf!b.nextmod:=binbuf!b.top
b.pp M:4096 DEF com/z80asm.b[468] b.pp=bit12
b.pp M:4096 MAN com/z80asm.b[483] r.bc=b.dd|b.qq|b.pp|b.rr|b.bcde|0
b.pp M:4096 MAN com/z80asm.b[484] r.de=b.dd|b.qq|b.pp|b.rr|b.bcde|1
b.pp M:4096 MAN com/z80asm.b[485] r.ix=b.pp|b.ixyhl|b.ixiy|6
b.pp M:4096 MAN com/z80asm.b[487] r.sp=b.dd|b.pp|b.rr|3
b.pp M:4096 MAN com/z80asm.b[6171] regset:=b.pp
b.pp M:4096 MAN com/z80asm.b[6185]
    error(regset=b.pp->e.pp,regset=b.rr->e.rr,e.dd)
b.qq M:8192 DEF com/z80asm.b[467] b.qq=bit13
b.qq M:8192 MAN com/z80asm.b[481] r.hl=b.dd|b.qq|b.ixyhl|6
b.qq M:8192 MAN com/z80asm.b[483] r.bc=b.dd|b.qq|b.pp|b.rr|b.bcde|0
b.qq M:8192 MAN com/z80asm.b[484] r.de=b.dd|b.qq|b.pp|b.rr|b.bcde|1
b.qq M:8192 MAN com/z80asm.b[488] r.af=b.qq|3
b.qq M:8192 MAN com/z80asm.b[6517] dd:=getrset(b.qq|b.ixiy)
b.qq M:8192 MAN com/z80asm.b[6523] UNLESS 0=(dd&b.qq) DO ..
b.r M:32768 DEF com/z80asm.b[465] b.r=bit15
b.r M:32768 MAN com/z80asm.b[475] r.b=b.r|0
b.r M:32768 MAN com/z80asm.b[476] r.c=b.r|1|b.cc|3<<3
b.r M:32768 MAN com/z80asm.b[477] r.d=b.r|2
b.r M:32768 MAN com/z80asm.b[478] r.e=b.r|3
b.r M:32768 MAN com/z80asm.b[479] r.h=b.r|4
b.r M:32768 MAN com/z80asm.b[480] r.l=b.r|5
b.r M:32768 MAN com/z80asm.b[482] r.a=b.r|7
b.r M:32768 MAN com/z80asm.b[5833] getrset(b.r)
b.r M:32768 MAN com/z80asm.b[6013] r:=getrset(b.r|b.rori|b.dd|b.ixyhl)
b.r M:32768 MAN com/z80asm.b[6029] r:=getrset(b.rori|b.r)
b.r M:32768 MAN com/z80asm.b[6034] TEST 0=(r&b.r) THEN .. ELSE ..
b.r M:32768 MAN com/z80asm.b[6122] getrset(b.r)
b.r M:32768 MAN com/z80asm.b[6665] reg:=getrset(b.r)
b.r M:32768 MAN com/z80asm.b[6695] r:=getrset(b.r)
b.rori M:256 DEF com/z80asm.b[472] b.rori=bit8
b.rori M:256 MAN com/z80asm.b[489] r.r=b.rori|1
b.rori M:256 MAN com/z80asm.b[490] r.i=b.rori|0
b.rori M:256 MAN com/z80asm.b[6013] r:=getrset(b.r|b.rori|b.dd|b.ixyhl)
b.rori M:256 MAN com/z80asm.b[6029] r:=getrset(b.rori|b.r)
b.rr M:2048 DEF com/z80asm.b[469] b.rr=bit11
b.rr M:2048 MAN com/z80asm.b[483] r.bc=b.dd|b.qq|b.pp|b.rr|b.bcde|0
b.rr M:2048 MAN com/z80asm.b[484] r.de=b.dd|b.qq|b.pp|b.rr|b.bcde|1
b.rr M:2048 MAN com/z80asm.b[486] r.iy=b.rr|b.ixyhl|b.ixiy|6
b.rr M:2048 MAN com/z80asm.b[487] r.sp=b.dd|b.pp|b.rr|3
b.rr M:2048 MAN com/z80asm.b[6175] regset:=b.rr
b.rr M:2048 MAN com/z80asm.b[6185]
    error(regset=b.pp->e.pp,regset=b.rr->e.rr,e.dd)
b.top M:0 DEF com/z80asm.b[303] b.top=0
b.top M:0 MAN com/z80asm.b[1625] IF binbuf!b.nextmod=binbuf!b.top DO ..
b.top M:0 MAN com/z80asm.b[1626]
    IF binbuf!b.top>=binbufsize+b.nextmod DO ..
b.top M:0 MAN com/z80asm.b[1627] binbuf!b.top:=binbuf!b.top+1
b.top M:0 MAN com/z80asm.b[1656]
    TEST b.nextmod<binbuf!b.nextmod+places&binbuf!b.nextmod+places<=binbuf!b.top THEN .. ELSE ..
b.top M:0 MAN com/z80asm.b[2510]
    UNLESS no.output|binbuf!b.top<=b.nextmod&control.line DO ..
b.top M:0 MAN com/z80asm.b[2529]
    TEST linbuf%1=comntch|pc=startpc+binbuf!b.top-b.nextmod THEN .. ELSE ..
b.top M:0 MAN com/z80asm.b[2536] TEST i<=binbuf!b.top THEN .. ELSE ..
b.top M:0 MAN com/z80asm.b[2560]
    .. REPEATUNTIL bufpos>binbuf!b.top|no.output
b.top M:0 MAN com/z80asm.b[2563] IF binbuf!b.top>b.nextmod DO ..
b.top M:0 MAN com/z80asm.b[2565] FOR i=1+b.nextmod TO binbuf!b.top DO..
b.top M:0 MAN com/z80asm.b[2577] pc:=pc+binbuf!b.top-b.nextmod
b.top M:0 MAN com/z80asm.b[2579] binbuf!b.top:=b.nextmod
b.top M:0 MAN com/z80asm.b[2580] binbuf!b.nextmod:=binbuf!b.top
b.top M:0 MAN com/z80asm.b[3004] TEST binbuf!b.top<1 THEN .. ELSE ..
b.top M:0 MAN com/z80asm.b[3006]
    binbuf!binbuf!b.top:=putf(no,field,binbuf!...)
b.top M:0 MAN com/z80asm.b[4291] binbuf!b.top:=b.nextmod
b.top M:0 MAN com/z80asm.b[4292] binbuf!b.nextmod:=binbuf!b.top
bad.rc M:20 DEF com/z80asm.b[5337] bad.rc=20
bad.rc M:20 MAN com/z80asm.b[5524] stop(bad.rc)
badlabs G:213 DEF com/z80asm.b[29] badlabs=ug+13
badlabs G:213 LG com/z80asm.b[1271]
    neads(...+...+1+3+(badlabs>0->1,0)+1+1)
badlabs G:213 LG com/z80asm.b[1315] IF badlabs>0 DO ..
badlabs G:213 LG com/z80asm.b[1413] badlabs:=badlabs+1
badlabs G:213 LG com/z80asm.b[4412] IF list>0|allsyms|badlabs>0 DO ..
badlabs G:213 LG com/z80asm.b[5497]
    TEST badlabs=0&errcount=0 THEN .. ELSE ..
badlabs G:213 LG com/z80asm.b[5503] UNLESS errcount=0|badlabs=0 DO ..
badlabs G:213 LG com/z80asm.b[5504] UNLESS badlabs=0 DO ..
badlabs G:213 LG com/z80asm.b[5505]
    writef("%N ba'label%S ",badlabs,badlabs=1->"","s")
badlabs G:213 SG com/z80asm.b[1413] badlabs:=badlabs+1
badlabs G:213 SG com/z80asm.b[4308] badlabs:=0
beginblock S:289 DEF com/z80asm.b[1720] beginblock=0
binbuf G:215 DEF com/z80asm.b[33] binbuf=ug+15
binbuf G:215 LG com/z80asm.b[1625]
    IF binbuf!b.nextmod=binbuf!b.top DO ..
binbuf G:215 LG com/z80asm.b[1626]
    IF binbuf!b.top>=binbufsize+b.nextmod DO ..
binbuf G:215 LG com/z80asm.b[1627] binbuf!b.top:=binbuf!b.top+1
binbuf G:215 LG com/z80asm.b[1629] binbuf!b.nextmod:=binbuf!b.nextmod+1
binbuf G:215 LG com/z80asm.b[1630] binbuf!binbuf!b.nextmod:=n&m
binbuf G:215 LG com/z80asm.b[1656]
    TEST b.nextmod<binbuf!b.nextmod+places&binbuf!b.nextmod+places<=binbuf!b.top THEN .. ELSE ..
binbuf G:215 LG com/z80asm.b[1657]
    binbuf!b.nextmod:=binbuf!b.nextmod+places
binbuf G:215 LG com/z80asm.b[2510]
    UNLESS no.output|binbuf!b.top<=b.nextmod&control.line DO ..
binbuf G:215 LG com/z80asm.b[2529]
    TEST linbuf%1=comntch|pc=startpc+binbuf!b.top-b.nextmod THEN .. ELSE ..
binbuf G:215 LG com/z80asm.b[2536] TEST i<=binbuf!b.top THEN .. ELSE ..
binbuf G:215 LG com/z80asm.b[2537] outhex(binbuf!i)
binbuf G:215 LG com/z80asm.b[2560]
    .. REPEATUNTIL bufpos>binbuf!b.top|no.output
binbuf G:215 LG com/z80asm.b[2563] IF binbuf!b.top>b.nextmod DO ..
binbuf G:215 LG com/z80asm.b[2565]
    FOR i=1+b.nextmod TO binbuf!b.top DO..
binbuf G:215 LG com/z80asm.b[2565] code.gen(cd.data,binbuf!i)
binbuf G:215 LG com/z80asm.b[2577] pc:=pc+binbuf!b.top-b.nextmod
binbuf G:215 LG com/z80asm.b[2579] binbuf!b.top:=b.nextmod
binbuf G:215 LG com/z80asm.b[2580] binbuf!b.nextmod:=binbuf!b.top
binbuf G:215 LG com/z80asm.b[3004] TEST binbuf!b.top<1 THEN .. ELSE ..
binbuf G:215 LG com/z80asm.b[3006]
    binbuf!binbuf!b.top:=putf(no,field,binbuf!...)
binbuf G:215 LG com/z80asm.b[4291] binbuf!b.top:=b.nextmod
binbuf G:215 LG com/z80asm.b[4292] binbuf!b.nextmod:=binbuf!b.top
binbuf G:215 SG com/z80asm.b[4290]
    binbuf:=simplegetvec(binbufsize+b.nextmod)
binbufsize M:128 DEF com/z80asm.b[302] binbufsize=128
binbufsize M:128 MAN com/z80asm.b[1626]
    IF binbuf!b.top>=binbufsize+b.nextmod DO ..
binbufsize M:128 MAN com/z80asm.b[4290]
    binbuf:=simplegetvec(binbufsize+b.nextmod)
binbufwidth G:374 DEF com/z80asm.b[214] binbufwidth=ug+174
binbufwidth G:374 LG com/z80asm.b[2412]
    FOR i=1 TO binbufwidth*charsperasmword+2+pos DO..
binbufwidth G:374 LG com/z80asm.b[2417]
    FOR i=1 TO binbufwidth*charsperasmword+2 DO..
binbufwidth G:374 LG com/z80asm.b[2535]
    FOR i=bufpos TO bufpos+binbufwidth-1 DO..
binbufwidth G:374 LG com/z80asm.b[2542] bufpos:=bufpos+binbufwidth
binbufwidth G:374 LG com/z80asm.b[4284]
    linbufsize:=pw+1-15+...*binbufwidth+2
binbufwidth G:374 SG com/z80asm.b[5429] binbufwidth:=4
binfile G:381 DEF com/z80asm.b[223] binfile=ug+181
binfile G:381 LG com/z80asm.b[1713] UNLESS binfile=0|pass=first DO ..
binfile G:381 LG com/z80asm.b[1732] selectoutput(binfile)
binfile G:381 LG com/z80asm.b[1757] selectoutput(binfile)
binfile G:381 LG com/z80asm.b[1879] selectoutput(binfile)
binfile G:381 LG com/z80asm.b[1889] selectoutput(binfile)
binfile G:381 LG com/z80asm.b[5515] UNLESS binfile=0 DO ..
binfile G:381 LG com/z80asm.b[5516] selectoutput(binfile)
binfile G:381 SG com/z80asm.b[5468] binfile:=findoutput(args!1)
binrdch G:39 DEF libhdr.h[75] binrdch=39
binwrch G:42 DEF libhdr.h[78] binwrch=42
bit0 M:1 DEF com/z80asm.b[281] bit0=1
bit0 M:1 MAN com/z80asm.b[3531] (test.spec&bit0)~=0
bit1 M:2 DEF com/z80asm.b[282] bit1=2
bit1 M:2 MAN com/z80asm.b[3532] (test.spec&bit1)~=0
bit10 M:1024 DEF com/z80asm.b[291] bit10=1024
bit10 M:1024 MAN com/z80asm.b[378] flag.def=bit10
bit10 M:1024 MAN com/z80asm.b[470] b.cc=bit10
bit11 M:2048 DEF com/z80asm.b[292] bit11=2048
bit11 M:2048 MAN com/z80asm.b[379] flag.fwd=bit11
bit11 M:2048 MAN com/z80asm.b[469] b.rr=bit11
bit12 M:4096 DEF com/z80asm.b[293] bit12=4096
bit12 M:4096 MAN com/z80asm.b[380] flag.needs=bit12
bit12 M:4096 MAN com/z80asm.b[468] b.pp=bit12
bit13 M:8192 DEF com/z80asm.b[294] bit13=8192
bit13 M:8192 MAN com/z80asm.b[381] flag.weak=bit13
bit13 M:8192 MAN com/z80asm.b[467] b.qq=bit13
bit14 M:16384 DEF com/z80asm.b[295] bit14=16384
bit14 M:16384 MAN com/z80asm.b[382] flag.temp=bit14
bit14 M:16384 MAN com/z80asm.b[466] b.dd=bit14
bit15 M:32768 DEF com/z80asm.b[296] bit15=32768
bit15 M:32768 MAN com/z80asm.b[465] b.r=bit15
bit2 M:4 DEF com/z80asm.b[283] bit2=4
bit2 M:4 MAN com/z80asm.b[3533] (test.spec&bit2)~=0
bit3 M:8 DEF com/z80asm.b[284] bit3=8
bit3 M:8 MAN com/z80asm.b[3534] (test.spec&bit3)~=0
bit4 M:16 DEF com/z80asm.b[285] bit4=16
bit5 M:32 DEF com/z80asm.b[286] bit5=32
bit6 M:64 DEF com/z80asm.b[287] bit6=64
bit6 M:64 MAN com/z80asm.b[474] b.ixiy=bit6
bit7 M:128 DEF com/z80asm.b[288] bit7=128
bit7 M:128 MAN com/z80asm.b[3535] (test.spec&bit7)~=0
bit7 M:128 MAN com/z80asm.b[473] b.bcde=bit7
bit8 M:256 DEF com/z80asm.b[289] bit8=256
bit8 M:256 MAN com/z80asm.b[376] flag.double=bit8
bit8 M:256 MAN com/z80asm.b[472] b.rori=bit8
bit9 M:512 DEF com/z80asm.b[290] bit9=512
bit9 M:512 MAN com/z80asm.b[377] flag.rel=bit9
bit9 M:512 MAN com/z80asm.b[471] b.ixyhl=bit9
bitsperbyte M:8 DEF libhdr.h[241] bitsperbyte=8
bitsperbyte M:8 MAN libhdr.h[242] bitsperword=bitsperbyte*bytesperword
bitsperword M:32 DEF libhdr.h[242] bitsperword=bitsperbyte*bytesperword
bitsperword M:32 MAN libhdr.h[244] minint=1<<bitsperword-1
bootregs M:11 DEF libhdr.h[479] bootregs=11
bracketed G:283 DEF com/z80asm.b[111] bracketed=ug+83
bracketed G:283 LG com/z80asm.b[6069] TEST bracketed THEN .. ELSE ..
bracketed G:283 SG com/z80asm.b[4654] bracketed:=FALSE
bracketed G:283 SG com/z80asm.b[4666] bracketed:=FALSE
bracketed G:283 SG com/z80asm.b[4683] bracketed:=FALSE
bracketed G:283 SG com/z80asm.b[4704] bracketed:=FALSE
bracketed G:283 SG com/z80asm.b[4724] bracketed:=FALSE
bracketed G:283 SG com/z80asm.b[4759] bracketed:=FALSE
bracketed G:283 SG com/z80asm.b[4818] bracketed:=sign=1
breakmacroproc G:260 DEF com/z80asm.b[85] breakmacroproc=ug+60
breakmacroproc G:260 FN com/z80asm.b[3313] LET breakmacroproc(label)=..
breakmacroproc G:260 LG com/z80asm.b[6942]
    code.put("EXITM",breakmacroproc,0)
byte1 M:255 DEF com/z80asm.b[279] byte1=255
byte1 M:255 MAN com/z80asm.b[1663] writehex(n>>i*8&byte1,2)
byte1 M:255 MAN com/z80asm.b[1731] type+(info&byte1)+((info&byte2)>>8)
byte1 M:255 MAN com/z80asm.b[1831]
    outhex(-1+(arg&byte1)+((arg&byte2)>>8))
byte1 M:255 MAN com/z80asm.b[1849] rel!rel!0:=arg&byte1
byte1 M:255 MAN com/z80asm.b[2623] IF (outpos&byte1)>pl DO ..
byte1 M:255 MAN com/z80asm.b[2653] IF lines+(outpos&byte1)>pl DO ..
byte1 M:255 MAN com/z80asm.b[2968] f.shift=byte1
byte1 M:255 MAN com/z80asm.b[2999] pos&byte1|(len&byte1)<<partsize
byte1 M:255 MAN com/z80asm.b[375] type.mask=byte1
byte2 M:65280 DEF com/z80asm.b[280] byte2=65280
byte2 M:65280 MAN com/z80asm.b[1731] type+(info&byte1)+((info&byte2)>>8)
byte2 M:65280 MAN com/z80asm.b[1831]
    outhex(-1+(arg&byte1)+((arg&byte2)>>8))
byte2 M:65280 MAN com/z80asm.b[1848] rel!(rel!0-1):=(arg&byte2)>>8
byte2 M:65280 MAN com/z80asm.b[2642]
    writef("Page %I3*n*n*n",(outpos&byte2)>>8)
byte2 M:65280 MAN com/z80asm.b[2643] outpos:=(outpos&byte2)+(1<<8)
byte2 M:65280 MAN com/z80asm.b[2969] f.len=byte2
bytesperasmword G:377 DEF com/z80asm.b[217] bytesperasmword=ug+177
bytesperasmword G:377 LG com/z80asm.b[1624] (1<<bytesperasmword*8)-1
bytesperasmword G:377 LG com/z80asm.b[1637] (1<<8*bytesperasmword)-1
bytesperasmword G:377 LG com/z80asm.b[1638]
    n&~(1<<8*wordsperaddress*bytesperasmword)-1
bytesperasmword G:377 LG com/z80asm.b[1644]
    putword(n>>8*bytesperasmword*(wordsperaddress-i)&m)
bytesperasmword G:377 LG com/z80asm.b[1645]
    UNLESS sign=0|sign=(-1&(1<<...*bytesperasmword)-1) DO ..
bytesperasmword G:377 LG com/z80asm.b[1662]
    FOR i=bytesperasmword-1 TO 0 BY -1 DO..
bytesperasmword G:377 LG com/z80asm.b[1742] 8*bytesperasmword
bytesperasmword G:377 LG com/z80asm.b[2399] 2*bytesperasmword+1
bytesperasmword G:377 LG com/z80asm.b[2540]
    FOR j=1 TO bytesperasmword*2+1 DO..
bytesperasmword G:377 LG com/z80asm.b[4284]
    linbufsize:=pw+1-15+...*binbufwidth+2
bytesperasmword G:377 LG com/z80asm.b[4380]
    code.gen(cd.code,name,(bytesperasmword&15)<<12|(...&15)<<8|(msbytefirst->1,0))
bytesperasmword G:377 LG com/z80asm.b[4893]
    FOR i=offset TO offset+(item.info%0-offset)/bytesperasmword DO..
bytesperasmword G:377 LG com/z80asm.b[4895]
    FOR j=0 TO bytesperasmword-1 DO..
bytesperasmword G:377 LG com/z80asm.b[4896]
    i*bytesperasmword+j>item.info%0->32,cvtchar(item.info%(i*bytesperasmword+j))
bytesperasmword G:377 LG com/z80asm.b[5326]
    hexoutwidth:=hexoutwidth/bytesperasmword
bytesperasmword G:377 SG com/z80asm.b[5439] bytesperasmword:=1
bytesperword M:4 DEF libhdr.h[240] bytesperword=1<<B2Wsh
bytesperword M:4 MAN com/z80asm.b[1024] string%0/bytesperword
bytesperword M:4 MAN com/z80asm.b[2833] 1+parm.symbol%0/bytesperword
bytesperword M:4 MAN com/z80asm.b[3423]
    size:=(macro!macro.chars+bytesperword-1)/bytesperword
bytesperword M:4 MAN com/z80asm.b[3433]
    simplegetvec(1+parm%0/bytesperword)
bytesperword M:4 MAN com/z80asm.b[3435]
    FOR i=0 TO parm%0/bytesperword DO..
bytesperword M:4 MAN com/z80asm.b[3485] chno/bytesperword
bytesperword M:4 MAN com/z80asm.b[3486] chno MOD bytesperword
bytesperword M:4 MAN com/z80asm.b[3656]
    buffer:=tempgetvec(256/bytesperword)
bytesperword M:4 MAN com/z80asm.b[4076] UNTIL p MOD bytesperword=0 DO ..
bytesperword M:4 MAN com/z80asm.b[4285]
    linbuf:=simplegetvec(linbufsize/bytesperword+1)
bytesperword M:4 MAN com/z80asm.b[4288]
    lex.space:=simplegetvec(256/bytesperword-1)
bytesperword M:4 MAN com/z80asm.b[4289]
    lab.space:=simplegetvec(256/bytesperword-1)
bytesperword M:4 MAN com/z80asm.b[4513]
    FOR i=0 TO item.info%0/bytesperword DO..
bytesperword M:4 MAN com/z80asm.b[4899]
    pack:=pack>>8|char<<8*(bytesperword-1)
bytesperword M:4 MAN com/z80asm.b[5338] startargsize=100/bytesperword
bytesperword M:4 MAN com/z80asm.b[784] string%0/bytesperword
bytesperword M:4 MAN com/z80asm.b[928]
    FOR i=0 TO string%0/bytesperword DO..
bytesperword M:4 MAN com/z80asm.b[956]
    FOR i=1 TO string%0/bytesperword DO..
bytesperword M:4 MAN libhdr.h[242] bitsperword=bitsperbyte*bytesperword
bytesperword M:4 MAN libhdr.h[243] mcaddrinc=bytesperword
bytesperword M:4 MAN libhdr.h[531]
    scb_nameeend=scb_name+scb_maxnamelen/bytesperword
bytesperword M:4 MAN libhdr.h[646]
    tcb_upb=tcb_namebase+15/bytesperword+1
c.fn M:1 DEF com/z80asm.b[306] c.fn=1
c.fn M:1 DEF com/z80asm.b[3078] c.fn=1
c.fn M:1 MAN com/z80asm.b[3087] c!c.fn:=proc
c.fn M:1 MAN com/z80asm.b[3464] WHILE i<n&@proc1!i~=mnem!c.fn DO ..
c.fn M:1 MAN com/z80asm.b[3472] RESULTIS i=n|mnem=null->null,mnem!c.fn
c.fn M:1 MAN com/z80asm.b[4466] (mnem!c.fn)(lab,(mnem+c.opstr)!1)
c.fn M:1 MAN com/z80asm.b[4539] mnem!c.fn:=callmacroproc
c.opstr M:2 DEF com/z80asm.b[3079] c.opstr=2
c.opstr M:2 DEF com/z80asm.b[307] c.opstr=2
c.opstr M:2 MAN com/z80asm.b[3088] c!(c.opstr+0):=len
c.opstr M:2 MAN com/z80asm.b[3089] FOR i=c.opstr+1 TO l-1 DO..
c.opstr M:2 MAN com/z80asm.b[3089] c!i:=@wd1!(i-c.opstr+1)
c.opstr M:2 MAN com/z80asm.b[4463] FOR i=1 TO (mnem+c.opstr)!0 DO..
c.opstr M:2 MAN com/z80asm.b[4463] putword((mnem+c.opstr)!i)
c.opstr M:2 MAN com/z80asm.b[4466] (mnem!c.fn)(lab,(mnem+c.opstr)!1)
c.opstr M:2 MAN com/z80asm.b[4537] mnem!c.opstr:=0
c.opstr M:2 MAN com/z80asm.b[4538] mnem!(c.opstr+1):=macro
c.size M:0 DEF com/z80asm.b[3076] c.size=0
c.str M:0 DEF com/z80asm.b[305] c.str=0
c.str M:0 DEF com/z80asm.b[3077] c.str=0
c.str M:0 MAN com/z80asm.b[3086] c!c.str:=name
c.str M:0 MAN com/z80asm.b[3100] 0=compstring(s,c!c.str)
c.str M:0 MAN com/z80asm.b[4540] mnem!c.str:=item.type
call.macro G:248 DEF com/z80asm.b[70] call.macro=ug+48
call.macro G:248 LG com/z80asm.b[3203]
    call.macro(macro.activation,macro!macro.text,macro!macro.chars,10)
call.macro G:248 LG com/z80asm.b[3300]
    call.macro(macro.var(0,rpt.factor),macro!macro.text,macro!macro.chars,10)
call.macro G:248 LG com/z80asm.b[4089]
    call.macro(macro.var(1,1),macro,macro%0+1,endstreamch)
call.macro G:248 RT com/z80asm.b[2730]
    LET call.macro(activation,text.area,charlen,ch1)BE..
callco G:19 DEF libhdr.h[55] callco=19
callmacroproc G:256 DEF com/z80asm.b[81] callmacroproc=ug+56
callmacroproc G:256 LG com/z80asm.b[4539] mnem!c.fn:=callmacroproc
callmacroproc G:256 RT com/z80asm.b[3173]
    LET callmacroproc(lab,macro)BE..
callseg G:107 DEF libhdr.h[144] callseg=107
capitalch G:326 DEF com/z80asm.b[159] capitalch=ug+126
capitalch G:326 FN com/z80asm.b[763] LET capitalch(ch)=..
capitalch G:326 LG com/z80asm.b[3751] format:=capitalch(item.info%1)
capitalch G:326 LG com/z80asm.b[4063] ch:=capitalch(ch)
capitalch G:326 LG com/z80asm.b[4072] ch:=capitalch(ch)
capitalch G:326 LG com/z80asm.b[4157] SWITCHON capitalch(ch) INTO..
capitalch G:326 LG com/z80asm.b[4187] SWITCHON capitalch(ch) INTO..
capitalch G:326 LG com/z80asm.b[5266] SWITCHON capitalch(s%p) INTO..
capitalch G:96 DEF libhdr.h[133] capitalch=96
cc.c M:33817 DEF com/z80asm.b[494] cc.c=r.c
cc.m M:1080 DEF com/z80asm.b[498] cc.m=b.cc|7<<3
cc.m M:1080 MAN com/z80asm.b[500] cc.nv=cc.m
cc.m M:1080 MAN com/z80asm.b[5696] reg.put("M",cc.m)
cc.nc M:1040 DEF com/z80asm.b[493] cc.nc=b.cc|2<<3
cc.nc M:1040 MAN com/z80asm.b[5694] reg.put("NC",cc.nc)
cc.nv M:1080 DEF com/z80asm.b[500] cc.nv=cc.m
cc.nv M:1080 MAN com/z80asm.b[5697] reg.put("NV",cc.nv)
cc.nz M:1024 DEF com/z80asm.b[491] cc.nz=b.cc|0<<3
cc.nz M:1024 MAN com/z80asm.b[5698] reg.put("NZ",cc.nz)
cc.p M:1072 DEF com/z80asm.b[497] cc.p=b.cc|6<<3
cc.p M:1072 MAN com/z80asm.b[499] cc.v=cc.p
cc.p M:1072 MAN com/z80asm.b[5690] reg.put("P",cc.p)
cc.pe M:1064 DEF com/z80asm.b[496] cc.pe=b.cc|5<<3
cc.pe M:1064 MAN com/z80asm.b[5688] reg.put("PE",cc.pe)
cc.po M:1056 DEF com/z80asm.b[495] cc.po=b.cc|4<<3
cc.po M:1056 MAN com/z80asm.b[5691] reg.put("PO",cc.po)
cc.v M:1072 DEF com/z80asm.b[499] cc.v=cc.p
cc.v M:1072 MAN com/z80asm.b[5689] reg.put("V",cc.v)
cc.z M:1032 DEF com/z80asm.b[492] cc.z=b.cc|1<<3
cc.z M:1032 MAN com/z80asm.b[5693] reg.put("Z",cc.z)
cd.absint M:18 DEF com/z80asm.b[433] cd.absint=18
cd.absint M:18 MAN com/z80asm.b[1423] code.gen(cd.absint,string,value)
cd.absint M:18 MAN com/z80asm.b[1836] CASE cd.absint:.. 
cd.clear M:-2 DEF com/z80asm.b[423] cd.clear=-2
cd.clear M:-2 MAN com/z80asm.b[1405] code.gen(cd.clear)
cd.clear M:-2 MAN com/z80asm.b[1783] CASE cd.clear:.. 
cd.clear M:-2 MAN com/z80asm.b[4376] code.gen(cd.clear)
cd.code M:16 DEF com/z80asm.b[431] cd.code=16
cd.code M:16 MAN com/z80asm.b[1740] TEST type=cd.code THEN .. ELSE ..
cd.code M:16 MAN com/z80asm.b[1864] CASE cd.code:.. 
cd.code M:16 MAN com/z80asm.b[1872] alpharec(arg,cd.code,arg1)
cd.code M:16 MAN com/z80asm.b[4380]
    code.gen(cd.code,name,(bytesperasmword&15)<<12|(...&15)<<8|(msbytefirst->1,0))
cd.data M:0 DEF com/z80asm.b[425] cd.data=0
cd.data M:0 MAN com/z80asm.b[1756] type=cd.data->hex!0,hex!0/2
cd.data M:0 MAN com/z80asm.b[1759] IF blocklen~=0|type=cd.data DO ..
cd.data M:0 MAN com/z80asm.b[1760] type=cd.data->oldpc-blocklen,0
cd.data M:0 MAN com/z80asm.b[1762] wrch(type=cd.data->58,36)
cd.data M:0 MAN com/z80asm.b[1785] clearbuf(hex,cd.data)
cd.data M:0 MAN com/z80asm.b[1796] clearbuf(hex,cd.data)
cd.data M:0 MAN com/z80asm.b[1810] CASE cd.data:.. 
cd.data M:0 MAN com/z80asm.b[1828] clearbuf(hex,cd.data)
cd.data M:0 MAN com/z80asm.b[1858] clearbuf(hex,cd.data)
cd.data M:0 MAN com/z80asm.b[2565] code.gen(cd.data,binbuf!i)
cd.eof M:1 DEF com/z80asm.b[426] cd.eof=1
cd.eof M:1 MAN com/z80asm.b[1825] CASE cd.eof:.. 
cd.eof M:1 MAN com/z80asm.b[4349] code.gen(cd.eof,entrypoint)
cd.ext M:3 DEF com/z80asm.b[428] cd.ext=3
cd.ext M:3 MAN com/z80asm.b[1417]
    code.gen((typecode&flag.weak)=0->cd.ext,cd.wext,string,value)
cd.ext M:3 MAN com/z80asm.b[1838] CASE cd.ext:.. 
cd.int M:2 DEF com/z80asm.b[427] cd.int=2
cd.int M:2 MAN com/z80asm.b[1424] code.gen(cd.int,string,value)
cd.int M:2 MAN com/z80asm.b[1835] CASE cd.int:.. 
cd.module M:5 DEF com/z80asm.b[430] cd.module=5
cd.module M:5 MAN com/z80asm.b[1741] TEST type=cd.module THEN .. ELSE ..
cd.module M:5 MAN com/z80asm.b[1855] CASE cd.module:.. 
cd.module M:5 MAN com/z80asm.b[1860] alpharec(arg1,cd.module,arg->0,1)
cd.module M:5 MAN com/z80asm.b[4333] code.gen(cd.module,TRUE,"")
cd.module M:5 MAN com/z80asm.b[4379]
    code.gen(cd.module,mode=absolute,modulename)
cd.module M:5 MAN com/z80asm.b[4407] code.gen(cd.module,TRUE,"")
cd.newpc M:-1 DEF com/z80asm.b[424] cd.newpc=-1
cd.newpc M:-1 MAN com/z80asm.b[1789] CASE cd.newpc:.. 
cd.newpc M:-1 MAN com/z80asm.b[2563] code.gen(cd.newpc,pc)
cd.newpc M:-1 MAN com/z80asm.b[5023] code.gen(cd.newpc,pc)
cd.newpc M:-1 MAN com/z80asm.b[5025] code.gen(cd.newpc,pc)
cd.opt M:17 DEF com/z80asm.b[432] cd.opt=17
cd.opt M:17 MAN com/z80asm.b[1875] CASE cd.opt:.. 
cd.opt M:17 MAN com/z80asm.b[5088] code.gen(cd.opt,item.info,level)
cd.prag M:21 DEF com/z80asm.b[435] cd.prag=21
cd.prag M:21 MAN com/z80asm.b[1885] CASE cd.prag:.. 
cd.prag M:21 MAN com/z80asm.b[4384]
    code.gen(cd.prag,get.time(stamp,15),"DAT-A")
cd.prag M:21 MAN com/z80asm.b[4940] code.gen(cd.prag,str,"TITLE")
cd.prag M:21 MAN com/z80asm.b[5118] code.gen(cd.prag,str,lab)
cd.rel M:4 DEF com/z80asm.b[429] cd.rel=4
cd.rel M:4 MAN com/z80asm.b[1786] clearbuf(rel,cd.rel)
cd.rel M:4 MAN com/z80asm.b[1829] clearbuf(rel,cd.rel)
cd.rel M:4 MAN com/z80asm.b[1845] CASE cd.rel:.. 
cd.rel M:4 MAN com/z80asm.b[1851] clearbuf(rel,cd.rel)
cd.rel M:4 MAN com/z80asm.b[1859] clearbuf(rel,cd.rel)
cd.rel M:4 MAN com/z80asm.b[1871] clearbuf(rel,cd.rel)
cd.undef M:-3 DEF com/z80asm.b[422] cd.undef=-3
cd.undef M:-3 MAN com/z80asm.b[1780] CASE cd.undef:.. 
cd.wext M:19 DEF com/z80asm.b[434] cd.wext=19
cd.wext M:19 MAN com/z80asm.b[1417]
    code.gen((typecode&flag.weak)=0->cd.ext,cd.wext,string,value)
cd.wext M:19 MAN com/z80asm.b[1837] CASE cd.wext:.. 
ch G:224 DEF com/z80asm.b[44] ch=ug+24
ch G:224 LG com/z80asm.b[2284] WHILE ch=32&n>0 DO ..
ch G:224 LG com/z80asm.b[2290]
    TEST ch~=32&linbuf.top>savepos THEN .. ELSE ..
ch G:224 LG com/z80asm.b[2292] linbuf%linbuf.top:=ch
ch G:224 LG com/z80asm.b[2335] IF ch=9 DO ..
ch G:224 LG com/z80asm.b[2346] linbuf%linbuf.top:=ch
ch G:224 LG com/z80asm.b[2348] macro.wrch(filling.macro,ch)
ch G:224 LG com/z80asm.b[2468] WHILE 10~=ch&ch~=endstreamch DO ..
ch G:224 LG com/z80asm.b[2595] UNLESS ch=endstreamch DO ..
ch G:224 LG com/z80asm.b[2755]
    activation!text.savch:=(print.expansions->32768,0)|(ch1=endstreamch->ch,0)
ch G:224 LG com/z80asm.b[4063] ch:=capitalch(ch)
ch G:224 LG com/z80asm.b[4064] TEST 65<=ch&ch<=90 THEN .. ELSE ..
ch G:224 LG com/z80asm.b[4070] lex.space%p:=ch
ch G:224 LG com/z80asm.b[4072] ch:=capitalch(ch)
ch G:224 LG com/z80asm.b[4073]
    .. REPEATWHILE 65<=ch&ch<=90|ch=sepch|48<=ch&ch<=57
ch G:224 LG com/z80asm.b[4093] TEST ch=comntch THEN .. ELSE ..
ch G:224 LG com/z80asm.b[4098] item.info:=ch
ch G:224 LG com/z80asm.b[4102] SWITCHON ch INTO..
ch G:224 LG com/z80asm.b[4133] item.type:=ch=62->i.gt,i.lt
ch G:224 LG com/z80asm.b[4134] item.info:=ch
ch G:224 LG com/z80asm.b[4136] IF ch=item.info DO ..
ch G:224 LG com/z80asm.b[4137] item.type:=ch=62->i.shr,i.shl
ch G:224 LG com/z80asm.b[4145] ch
ch G:224 LG com/z80asm.b[4146] item.type:=ch=34->i.string,i.sstring
ch G:224 LG com/z80asm.b[4149] UNTIL ch=del DO ..
ch G:224 LG com/z80asm.b[4151] IF ch=10|ch=endstreamch DO ..
ch G:224 LG com/z80asm.b[4153] c:=ch
ch G:224 LG com/z80asm.b[4157] SWITCHON capitalch(ch) INTO..
ch G:224 LG com/z80asm.b[4169] .. REPEATUNTIL ch~=32
ch G:224 LG com/z80asm.b[4170] UNLESS ch=c DO ..
ch G:224 LG com/z80asm.b[4173] RESULTIS ch
ch G:224 LG com/z80asm.b[4186] TEST 48<=ch&ch<=55 THEN .. ELSE ..
ch G:224 LG com/z80asm.b[4187] SWITCHON capitalch(ch) INTO..
ch G:224 LG com/z80asm.b[4192] error(e.badbase,ch)
ch G:224 LG com/z80asm.b[4203]
    48<=ch&ch<=57->ch-48,65<=ch&ch<=70->ch+uletter,97<=ch&ch<=102->ch+lletter,999
ch G:224 LG com/z80asm.b[4215] error(e.badbase,ch)
ch G:224 LG com/z80asm.b[4222] WHILE ch=32 DO ..
ch G:224 LG com/z80asm.b[6497] TEST ch=39 THEN .. ELSE ..
ch G:224 LG com/z80asm.b[6498] .. REPEATUNTIL ch~=32
ch G:224 SG com/z80asm.b[2334] ch:=rdch()
ch G:224 SG com/z80asm.b[2337] ch:=32
ch G:224 SG com/z80asm.b[2581] ch:=10
ch G:224 SG com/z80asm.b[2757] ch:=ch1
ch G:224 SG com/z80asm.b[4063] ch:=capitalch(ch)
ch G:224 SG com/z80asm.b[4072] ch:=capitalch(ch)
ch G:224 SG com/z80asm.b[4317] ch:=32
ch G:224 SG com/z80asm.b[4432] ch:=10
ch G:224 SG com/z80asm.b[5185] ch:=10
changeco G:6 DEF libhdr.h[41] changeco=6
changepri G:155 DEF libhdr.h[206] changepri=155
checkandskip G:282 DEF com/z80asm.b[110] checkandskip=ug+82
checkandskip G:282 LG com/z80asm.b[4817] checkandskip(i.erbkt,41)
checkandskip G:282 LG com/z80asm.b[5818] checkandskip(i.rbkt,41)
checkandskip G:282 LG com/z80asm.b[6015] checkandskip(i.comma,44)
checkandskip G:282 LG com/z80asm.b[6027] checkandskip(i.rbkt,41)
checkandskip G:282 LG com/z80asm.b[6082] checkandskip(i.lbkt,40)
checkandskip G:282 LG com/z80asm.b[6086] checkandskip(i.rbkt,41)
checkandskip G:282 LG com/z80asm.b[6087] checkandskip(i.comma,44)
checkandskip G:282 LG com/z80asm.b[6109] checkandskip(i.rbkt,41)
checkandskip G:282 LG com/z80asm.b[6110] checkandskip(i.comma,44)
checkandskip G:282 LG com/z80asm.b[6120] checkandskip(i.rbkt,41)
checkandskip G:282 LG com/z80asm.b[6121] checkandskip(i.comma,44)
checkandskip G:282 LG com/z80asm.b[6157] checkandskip(i.comma,44)
checkandskip G:282 LG com/z80asm.b[6213] checkandskip(i.comma,44)
checkandskip G:282 LG com/z80asm.b[6350] checkandskip(i.rbkt,41)
checkandskip G:282 LG com/z80asm.b[6360] checkandskip(i.comma,44)
checkandskip G:282 LG com/z80asm.b[6379] checkandskip(i.comma,44)
checkandskip G:282 LG com/z80asm.b[6482] checkandskip(i.rbkt,41)
checkandskip G:282 LG com/z80asm.b[6483] checkandskip(i.comma,44)
checkandskip G:282 LG com/z80asm.b[6488] checkandskip(i.comma,44)
checkandskip G:282 LG com/z80asm.b[6493] checkandskip(i.comma,44)
checkandskip G:282 LG com/z80asm.b[6667] checkandskip(i.comma,44)
checkandskip G:282 LG com/z80asm.b[6668] checkandskip(i.lbkt,40)
checkandskip G:282 LG com/z80asm.b[6680] checkandskip(i.rbkt,41)
checkandskip G:282 LG com/z80asm.b[6691] checkandskip(i.lbkt,40)
checkandskip G:282 LG com/z80asm.b[6693] checkandskip(i.rbkt,41)
checkandskip G:282 LG com/z80asm.b[6694] checkandskip(i.comma,44)
checkandskip G:282 LG com/z80asm.b[6703] checkandskip(i.rbkt,41)
checkandskip G:282 LG com/z80asm.b[6704] checkandskip(i.comma,44)
checkandskip G:282 RT com/z80asm.b[4235]
    LET checkandskip(item,errparm)BE..
checkrange F:1498 FN com/z80asm.b[6429] LET checkrange(range)=..
checkrange F:1498 LF com/z80asm.b[6407]
    putword(checkrange(expression()-2))
checkrange F:1498 LF com/z80asm.b[6420]
    putword(checkrange(expression()-2))
checktype G:209 DEF com/z80asm.b[25] checktype=ug+9
checktype G:209 FN com/z80asm.b[1152] LET checktype(ty,s)=..
checktype G:209 LG com/z80asm.b[4840] ans:=checktype(ty,item.info)
cis G:12 DEF libhdr.h[48] cis=12
clear_words G:115 DEF libhdr.h[152] clear_words=115
clearbuf F:306 LF com/z80asm.b[1785] clearbuf(hex,cd.data)
clearbuf F:306 LF com/z80asm.b[1786] clearbuf(rel,cd.rel)
clearbuf F:306 LF com/z80asm.b[1796] clearbuf(hex,cd.data)
clearbuf F:306 LF com/z80asm.b[1820] clearbuf(hex,type)
clearbuf F:306 LF com/z80asm.b[1828] clearbuf(hex,cd.data)
clearbuf F:306 LF com/z80asm.b[1829] clearbuf(rel,cd.rel)
clearbuf F:306 LF com/z80asm.b[1851] clearbuf(rel,cd.rel)
clearbuf F:306 LF com/z80asm.b[1858] clearbuf(hex,cd.data)
clearbuf F:306 LF com/z80asm.b[1859] clearbuf(rel,cd.rel)
clearbuf F:306 LF com/z80asm.b[1870] clearbuf(hex)
clearbuf F:306 LF com/z80asm.b[1871] clearbuf(rel,cd.rel)
clearbuf F:306 RT com/z80asm.b[1751] LET clearbuf(hex,type)BE..
cli_commanddir G:136 DEF libhdr.h[176] cli_commanddir=136
cli_commandfile G:143 DEF libhdr.h[187] cli_commandfile=143
cli_commandname G:138 DEF libhdr.h[182] cli_commandname=138
cli_currentinput G:142 DEF libhdr.h[186] cli_currentinput=142
cli_currentoutput G:146 DEF libhdr.h[193] cli_currentoutput=146
cli_data G:135 DEF libhdr.h[175] cli_data=135
cli_defaultstack G:147 DEF libhdr.h[194] cli_defaultstack=147
cli_faillevel G:139 DEF libhdr.h[183] cli_faillevel=139
cli_init G:133 DEF libhdr.h[173] cli_init=133
cli_initialfaillevel M:10 DEF libhdr.h[590]
    cli_initialfaillevel=return_hard
cli_initialstack M:50000 DEF libhdr.h[589] cli_initialstack=50000
cli_module G:149 DEF libhdr.h[196] cli_module=149
cli_module_gn M:149 DEF libhdr.h[588] cli_module_gn=149
cli_preloadlist G:145 DEF libhdr.h[192] cli_preloadlist=145
cli_prompt G:140 DEF libhdr.h[184] cli_prompt=140
cli_result2 G:134 DEF libhdr.h[174] cli_result2=134
cli_returncode G:137 DEF libhdr.h[177] cli_returncode=137
cli_standardinput G:141 DEF libhdr.h[185] cli_standardinput=141
cli_standardoutput G:148 DEF libhdr.h[195] cli_standardoutput=148
cli_status G:144 DEF libhdr.h[189] cli_status=144
cli_tallyflag G:132 DEF libhdr.h[172] cli_tallyflag=132
clibit_comcom M:4 DEF libhdr.h[595] clibit_comcom=4
clibit_endcli M:256 DEF libhdr.h[601] clibit_endcli=256
clibit_eofdel M:2 DEF libhdr.h[594] clibit_eofdel=2
clibit_maincli M:8 DEF libhdr.h[596] clibit_maincli=8
clibit_mbxcli M:64 DEF libhdr.h[599] clibit_mbxcli=64
clibit_newcli M:16 DEF libhdr.h[597] clibit_newcli=16
clibit_noprompt M:1 DEF libhdr.h[593] clibit_noprompt=1
clibit_runcli M:32 DEF libhdr.h[598] clibit_runcli=32
clibit_tcpcli M:128 DEF libhdr.h[600] clibit_tcpcli=128
clihook G:4 DEF libhdr.h[39] clihook=4
cliregs M:21 DEF libhdr.h[480] cliregs=21
co_c M:5 DEF libhdr.h[286] co_c=
co_fn M:3 DEF libhdr.h[284] co_fn=
co_list M:2 DEF libhdr.h[283] co_list=
co_parent M:1 DEF libhdr.h[282] co_parent=
co_pptr M:0 DEF libhdr.h[281] co_pptr=0
co_size M:4 DEF libhdr.h[285] co_size=
code.gen G:222 DEF com/z80asm.b[40] code.gen=ug+22
code.gen G:222 FN com/z80asm.b[1669] LET code.gen(type,a1,a2)=..
code.gen G:222 LG com/z80asm.b[1405] code.gen(cd.clear)
code.gen G:222 LG com/z80asm.b[1417]
    code.gen((typecode&flag.weak)=0->cd.ext,cd.wext,string,value)
code.gen G:222 LG com/z80asm.b[1423] code.gen(cd.absint,string,value)
code.gen G:222 LG com/z80asm.b[1424] code.gen(cd.int,string,value)
code.gen G:222 LG com/z80asm.b[2563] code.gen(cd.newpc,pc)
code.gen G:222 LG com/z80asm.b[2565] code.gen(cd.data,binbuf!i)
code.gen G:222 LG com/z80asm.b[4333] code.gen(cd.module,TRUE,"")
code.gen G:222 LG com/z80asm.b[4349] code.gen(cd.eof,entrypoint)
code.gen G:222 LG com/z80asm.b[4376] code.gen(cd.clear)
code.gen G:222 LG com/z80asm.b[4379]
    code.gen(cd.module,mode=absolute,modulename)
code.gen G:222 LG com/z80asm.b[4380]
    code.gen(cd.code,name,(bytesperasmword&15)<<12|(...&15)<<8|(msbytefirst->1,0))
code.gen G:222 LG com/z80asm.b[4384]
    code.gen(cd.prag,get.time(stamp,15),"DAT-A")
code.gen G:222 LG com/z80asm.b[4407] code.gen(cd.module,TRUE,"")
code.gen G:222 LG com/z80asm.b[4940] code.gen(cd.prag,str,"TITLE")
code.gen G:222 LG com/z80asm.b[5023] code.gen(cd.newpc,pc)
code.gen G:222 LG com/z80asm.b[5025] code.gen(cd.newpc,pc)
code.gen G:222 LG com/z80asm.b[5088] code.gen(cd.opt,item.info,level)
code.gen G:222 LG com/z80asm.b[5118] code.gen(cd.prag,str,lab)
code.put G:328 DEF com/z80asm.b[161] code.put=ug+128
code.put G:328 LG com/z80asm.b[6912] code.put("DB",dataproc,0)
code.put G:328 LG com/z80asm.b[6913] code.put("DEFB",dataproc,0)
code.put G:328 LG com/z80asm.b[6914] code.put("DW",dwproc,0)
code.put G:328 LG com/z80asm.b[6915] code.put("DEFW",dwproc,0)
code.put G:328 LG com/z80asm.b[6916] code.put("DEFM",dataproc,0)
code.put G:328 LG com/z80asm.b[6917] code.put("DS",storeproc,0)
code.put G:328 LG com/z80asm.b[6918] code.put("DEFS",storeproc,0)
code.put G:328 LG com/z80asm.b[6919] code.put("EQU",equproc,0)
code.put G:328 LG com/z80asm.b[6920] code.put("DEF",defproc,0)
code.put G:328 LG com/z80asm.b[6921] code.put("REF",refproc,0)
code.put G:328 LG com/z80asm.b[6922] code.put("WREF",wrefproc,0)
code.put G:328 LG com/z80asm.b[6923] code.put("NEEDS",needsproc,0)
code.put G:328 LG com/z80asm.b[6924] code.put("PRAG",pragproc,0)
code.put G:328 LG com/z80asm.b[6925] code.put("DEFL",setproc,0)
code.put G:328 LG com/z80asm.b[6926] code.put("TEXT",textproc,0)
code.put G:328 LG com/z80asm.b[6927] code.put("TITLE",titlproc,0)
code.put G:328 LG com/z80asm.b[6928] code.put("ORG",orgproc,0)
code.put G:328 LG com/z80asm.b[6929] code.put("ABS",absproc,0)
code.put G:328 LG com/z80asm.b[6930] code.put("REL",relproc,0)
code.put G:328 LG com/z80asm.b[6931] code.put("GET",getproc,0)
code.put G:328 LG com/z80asm.b[6932] code.put("LIST",listproc,0)
code.put G:328 LG com/z80asm.b[6933] code.put("NOLIST",nolistproc,0)
code.put G:328 LG com/z80asm.b[6934] code.put("END",endproc,0)
code.put G:328 LG com/z80asm.b[6935] code.put("PAGE",ejectproc,0)
code.put G:328 LG com/z80asm.b[6936] code.put("SPACE",spaceproc,0)
code.put G:328 LG com/z80asm.b[6939] code.put("MACRO",macroproc,0)
code.put G:328 LG com/z80asm.b[6940] code.put("REPT",rptmacroproc,0)
code.put G:328 LG com/z80asm.b[6941] code.put("ENDM",endmacroproc,0)
code.put G:328 LG com/z80asm.b[6942] code.put("EXITM",breakmacroproc,0)
code.put G:328 LG com/z80asm.b[6943] code.put("IF",ifproc,-1,1)
code.put G:328 LG com/z80asm.b[6944] code.put("IFT",ifproc,-1,1)
code.put G:328 LG com/z80asm.b[6945] code.put("IFE",ifproc,-1,0)
code.put G:328 LG com/z80asm.b[6946] code.put("IFF",ifproc,-1,0)
code.put G:328 LG com/z80asm.b[6947] code.put("IFDEF",ifproc,-1,128)
code.put G:328 LG com/z80asm.b[6948] code.put("IFNDEF",ifproc,-1,129)
code.put G:328 LG com/z80asm.b[6949] code.put("IFB",ifproc,-1,8)
code.put G:328 LG com/z80asm.b[6950] code.put("IFNB",ifproc,-1,9)
code.put G:328 LG com/z80asm.b[6951] code.put("IFIDN",ifproc,-1,10)
code.put G:328 LG com/z80asm.b[6952] code.put("IFDIF",ifproc,-1,11)
code.put G:328 LG com/z80asm.b[6953] code.put("ELSE",elseproc,0)
code.put G:328 LG com/z80asm.b[6954] code.put("ENDIF",fiproc,0)
code.put G:328 LG com/z80asm.b[6955] code.put("LOCAL",localproc,0)
code.put G:328 LG com/z80asm.b[6956] code.put("OPT",optproc,0)
code.put G:328 LG com/z80asm.b[6957] code.put("PRINTX",printproc,0)
code.put G:328 LG com/z80asm.b[6960] code.put("EXX",fmt0,1,217)
code.put G:328 LG com/z80asm.b[6961] code.put("DAA",fmt0,1,39)
code.put G:328 LG com/z80asm.b[6962] code.put("CPL",fmt0,1,47)
code.put G:328 LG com/z80asm.b[6963] code.put("CCF",fmt0,1,63)
code.put G:328 LG com/z80asm.b[6964] code.put("SCF",fmt0,1,55)
code.put G:328 LG com/z80asm.b[6965] code.put("NOP",fmt0,1,0)
code.put G:328 LG com/z80asm.b[6966] code.put("HALT",fmt0,1,118)
code.put G:328 LG com/z80asm.b[6967] code.put("DI",fmt0,1,243)
code.put G:328 LG com/z80asm.b[6968] code.put("EI",fmt0,1,251)
code.put G:328 LG com/z80asm.b[6969] code.put("RLA",fmt0,1,23)
code.put G:328 LG com/z80asm.b[6970] code.put("RLCA",fmt0,1,7)
code.put G:328 LG com/z80asm.b[6971] code.put("RRA",fmt0,1,31)
code.put G:328 LG com/z80asm.b[6972] code.put("RRCA",fmt0,1,15)
code.put G:328 LG com/z80asm.b[6973] code.put("LDI",fmt0,2,237,160)
code.put G:328 LG com/z80asm.b[6974] code.put("LDIR",fmt0,2,237,176)
code.put G:328 LG com/z80asm.b[6975] code.put("LDD",fmt0,2,237,168)
code.put G:328 LG com/z80asm.b[6976] code.put("LDDR",fmt0,2,237,184)
code.put G:328 LG com/z80asm.b[6977] code.put("CPI",fmt0,2,237,161)
code.put G:328 LG com/z80asm.b[6978] code.put("CPIR",fmt0,2,237,177)
code.put G:328 LG com/z80asm.b[6979] code.put("CPD",fmt0,2,237,169)
code.put G:328 LG com/z80asm.b[6980] code.put("CPDR",fmt0,2,237,185)
code.put G:328 LG com/z80asm.b[6981] code.put("NEG",fmt0,2,237,68)
code.put G:328 LG com/z80asm.b[6982] code.put("INI",fmt0,2,237,162)
code.put G:328 LG com/z80asm.b[6983] code.put("INIR",fmt0,2,237,178)
code.put G:328 LG com/z80asm.b[6984] code.put("IND",fmt0,2,237,170)
code.put G:328 LG com/z80asm.b[6985] code.put("INDR",fmt0,2,237,186)
code.put G:328 LG com/z80asm.b[6986] code.put("OUTI",fmt0,2,237,163)
code.put G:328 LG com/z80asm.b[6987] code.put("OTIR",fmt0,2,237,179)
code.put G:328 LG com/z80asm.b[6988] code.put("OUTD",fmt0,2,237,171)
code.put G:328 LG com/z80asm.b[6989] code.put("OTDR",fmt0,2,237,187)
code.put G:328 LG com/z80asm.b[6990] code.put("RETI",fmt0,2,237,77)
code.put G:328 LG com/z80asm.b[6991] code.put("RETN",fmt0,2,237,69)
code.put G:328 LG com/z80asm.b[6992] code.put("RLD",fmt0,2,237,111)
code.put G:328 LG com/z80asm.b[6993] code.put("RRD",fmt0,2,237,103)
code.put G:328 LG com/z80asm.b[6994] code.put("LD",fmt1,0)
code.put G:328 LG com/z80asm.b[6995] code.put("ADD",fmt2,-1,0)
code.put G:328 LG com/z80asm.b[6996] code.put("ADC",fmt2,-1,1)
code.put G:328 LG com/z80asm.b[6997] code.put("SUB",fmt2,-1,2)
code.put G:328 LG com/z80asm.b[6998] code.put("SBC",fmt2,-1,3)
code.put G:328 LG com/z80asm.b[6999] code.put("AND",fmt2,-1,4)
code.put G:328 LG com/z80asm.b[7000] code.put("XOR",fmt2,-1,5)
code.put G:328 LG com/z80asm.b[7001] code.put("OR",fmt2,-1,6)
code.put G:328 LG com/z80asm.b[7002] code.put("CP",fmt2,-1,7)
code.put G:328 LG com/z80asm.b[7003] code.put("RLC",fmt3,-1,0)
code.put G:328 LG com/z80asm.b[7004] code.put("RRC",fmt3,-1,1)
code.put G:328 LG com/z80asm.b[7005] code.put("RL",fmt3,-1,2)
code.put G:328 LG com/z80asm.b[7006] code.put("RR",fmt3,-1,3)
code.put G:328 LG com/z80asm.b[7007] code.put("SLA",fmt3,-1,4)
code.put G:328 LG com/z80asm.b[7008] code.put("SRA",fmt3,-1,5)
code.put G:328 LG com/z80asm.b[7009] code.put("SRL",fmt3,-1,7)
code.put G:328 LG com/z80asm.b[7010] code.put("BIT",fmt4,-1,1)
code.put G:328 LG com/z80asm.b[7011] code.put("SET",fmt4,-1,3)
code.put G:328 LG com/z80asm.b[7012] code.put("RES",fmt4,-1,2)
code.put G:328 LG com/z80asm.b[7013] code.put("JP",fmt5,0)
code.put G:328 LG com/z80asm.b[7014] code.put("CALL",fmt6,0)
code.put G:328 LG com/z80asm.b[7015] code.put("RET",fmt7,0)
code.put G:328 LG com/z80asm.b[7016] code.put("JR",fmt8,0)
code.put G:328 LG com/z80asm.b[7017] code.put("DJNZ",fmt9,1,16)
code.put G:328 LG com/z80asm.b[7018] code.put("RST",fmt10,1,199)
code.put G:328 LG com/z80asm.b[7019] code.put("INC",fmt11,-1,4)
code.put G:328 LG com/z80asm.b[7020] code.put("DEC",fmt11,-1,5)
code.put G:328 LG com/z80asm.b[7021] code.put("EX",fmt12,0)
code.put G:328 LG com/z80asm.b[7022] code.put("PUSH",fmt13,-1,5)
code.put G:328 LG com/z80asm.b[7023] code.put("POP",fmt13,-1,1)
code.put G:328 LG com/z80asm.b[7024] code.put("IN",fmt14,0)
code.put G:328 LG com/z80asm.b[7025] code.put("OUT",fmt15,0)
code.put G:328 LG com/z80asm.b[7026] code.put("IM",fmt16,1,237)
code.put G:328 RT com/z80asm.b[3083]
    LET code.put(name,proc,len,wd1,wd2,wd3,wd4,wd5)BE..
codes G:327 DEF com/z80asm.b[160] codes=ug+127
codes G:327 LG com/z80asm.b[3095] tree.get(codes,s)
codes G:327 LLG com/z80asm.b[3090] tree.put(@codes,name,c)
codes G:327 SG com/z80asm.b[5488] codes:=null
codewrch G:126 DEF libhdr.h[163] codewrch=126
colist G:8 DEF libhdr.h[43] colist=8
comntch G:371 DEF com/z80asm.b[211] comntch=ug+171
comntch G:371 LG com/z80asm.b[2418] writef("%C Error: ",comntch)
comntch G:371 LG com/z80asm.b[2529]
    TEST linbuf%1=comntch|pc=startpc+binbuf!b.top-b.nextmod THEN .. ELSE ..
comntch G:371 LG com/z80asm.b[3234] warn(e.nocomnt,comntch)
comntch G:371 LG com/z80asm.b[4093] TEST ch=comntch THEN .. ELSE ..
comntch G:371 LG com/z80asm.b[4469] error(e.nocomnt,comntch)
comntch G:371 SG com/z80asm.b[5433] comntch:=59
comntcheck G:372 DEF com/z80asm.b[212] comntcheck=ug+172
comntcheck G:372 LG com/z80asm.b[3232] IF comntcheck DO ..
comntcheck G:372 LG com/z80asm.b[4467] IF comntcheck DO ..
comntcheck G:372 SG com/z80asm.b[5437] comntcheck:=FALSE
comntcheck G:372 SG com/z80asm.b[7041] comntcheck:=TRUE
compare F:199 FN com/z80asm.b[1266] LET compare(elem1,elem2)=..
compare F:199 LF com/z80asm.b[1267]
    sort.list(@list,null,null,t.link,compare)
compch G:97 DEF libhdr.h[134] compch=97
compcode G:330 DEF com/z80asm.b[163] compcode=ug+130
compcode G:330 FN com/z80asm.b[3100] LET compcode(s,c)=..
compstring G:324 DEF com/z80asm.b[157] compstring=ug+124
compstring G:324 FN com/z80asm.b[767] LET compstring(s1,s2)=..
compstring G:324 LG com/z80asm.b[1266]
    compstring(elem1+t.str,elem2+t.str)
compstring G:324 LG com/z80asm.b[3045] compstring(!lvtree!t.str,name)
compstring G:324 LG com/z80asm.b[3056] compstring(tree!t.str,name)
compstring G:324 LG com/z80asm.b[3100] 0=compstring(s,c!c.str)
compstring G:324 LG com/z80asm.b[3564]
    comparison:=is.string->compstring(arg2,arg1),arg2-arg1
compstring G:98 DEF libhdr.h[135] compstring=98
concatenate.hash.list F:93 FN com/z80asm.b[1338]
    LET concatenate.hash.list()=..
concatenate.hash.list F:93 LF com/z80asm.b[1260] concatenate.hash.list()
concatenate.hash.list F:93 LF com/z80asm.b[1326] concatenate.hash.list()
consoletask G:171 DEF libhdr.h[219] consoletask=171
copy_bytes G:116 DEF libhdr.h[153] copy_bytes=116
copy_words G:114 DEF libhdr.h[151] copy_words=114
copydir G:79 DEF libhdr.h[115] copydir=79
copyobj G:75 DEF libhdr.h[111] copyobj=75
copystring G:99 DEF libhdr.h[136] copystring=99
cos G:13 DEF libhdr.h[49] cos=13
cowait G:20 DEF libhdr.h[56] cowait=20
createco G:17 DEF libhdr.h[53] createco=17
createdev G:172 DEF libhdr.h[220] createdev=172
createdir G:82 DEF libhdr.h[118] createdir=82
createtask G:153 DEF libhdr.h[204] createtask=153
currco G:7 DEF libhdr.h[42] currco=7
current_language G:190 DEF libhdr.h[231] current_language=190
currentdir G:14 DEF libhdr.h[50] currentdir=14
currentdir G:14 LG com/z80asm.b[5368] currentdir
currentdir G:14 SG com/z80asm.b[5375] currentdir:=newdir
currentdir G:14 SG com/z80asm.b[5378] currentdir:=savedir
cvtchar G:379 DEF com/z80asm.b[219] cvtchar=ug+179
cvtchar G:379 FN com/z80asm.b[3917] LET cvtchar(ch)=..
cvtchar G:379 LG com/z80asm.b[1738] sum:=sum+cvtchar(ch)
cvtchar G:379 LG com/z80asm.b[1880] sum:=sum-cvtchar(arg%i)
cvtchar G:379 LG com/z80asm.b[1890] sum:=sum-cvtchar(arg%i)
cvtchar G:379 LG com/z80asm.b[1894] sum:=sum-cvtchar(ch)
cvtchar G:379 LG com/z80asm.b[4806]
    ansvec!0:=(ansvec!0<<8)+cvtchar(item.info%i)
cvtchar G:379 LG com/z80asm.b[4826]
    ansvec!0:=(ansvec!0<<8)+cvtchar(str%i)
cvtchar G:379 LG com/z80asm.b[4896]
    i*bytesperasmword+j>item.info%0->32,cvtchar(item.info%(i*bytesperasmword+j))
dat_to_strings G:110 DEF libhdr.h[147] dat_to_strings=110
dataproc G:296 DEF com/z80asm.b[126] dataproc=ug+96
dataproc G:296 LG com/z80asm.b[6912] code.put("DB",dataproc,0)
dataproc G:296 LG com/z80asm.b[6913] code.put("DEFB",dataproc,0)
dataproc G:296 LG com/z80asm.b[6916] code.put("DEFM",dataproc,0)
dataproc G:296 RT com/z80asm.b[4887] LET dataproc(lab)BE..
datstamp G:109 DEF libhdr.h[146] datstamp=109
datstring G:108 DEF libhdr.h[145] datstring=108
datstring G:108 LG com/z80asm.b[5389] datstring(v)
deadcode M:#xDEADC0DE DEF libhdr.h[264] deadcode=-#x21523F22
declaration.list F:1126 LF com/z80asm.b[5062]
    declaration.list(lab,65535,type.ref)
declaration.list F:1126 LF com/z80asm.b[5066]
    declaration.list(lab,65535,type.wref)
declaration.list F:1126 RT com/z80asm.b[5051]
    LET declaration.list(lab,default.value,type)BE..
decodeopt F:1236 FN com/z80asm.b[5260] LET decodeopt(s)=..
decodeopt F:1236 LF com/z80asm.b[5463]
    TEST decodeopt(args!3) THEN .. ELSE ..
def.count G:353 DEF com/z80asm.b[190] def.count=ug+153
def.count G:353 LG com/z80asm.b[4559]
    putlab(lab,pc,(mode=absolute->type.lab,type.rellab)|(def.count>0->flag.def,0))
def.count G:353 LG com/z80asm.b[4561] UNLESS def.count=0 DO ..
def.count G:353 LG com/z80asm.b[4561] def.count:=def.count-1
def.count G:353 SG com/z80asm.b[4311] def.count:=0
def.count G:353 SG com/z80asm.b[4435] def.count:=0
def.count G:353 SG com/z80asm.b[4561] def.count:=def.count-1
def.count G:353 SG com/z80asm.b[5106] def.count:=i
defproc G:300 DEF com/z80asm.b[130] defproc=ug+100
defproc G:300 LG com/z80asm.b[6920] code.put("DEF",defproc,0)
defproc G:300 RT com/z80asm.b[5096] LET defproc(lab)BE..
delay G:128 DEF libhdr.h[165] delay=128
delayuntil G:129 DEF libhdr.h[166] delayuntil=129
deleteco G:18 DEF libhdr.h[54] deleteco=18
deletedev G:173 DEF libhdr.h[221] deletedev=173
deletefile G:76 DEF libhdr.h[112] deletefile=76
deletelab G:204 DEF com/z80asm.b[20] deletelab=ug+4
deletelab G:204 FN com/z80asm.b[1110] LET deletelab(s,ty)=..
deletelab G:204 LG com/z80asm.b[2824] deletelab(text.symbol,type.text)
deletelabs G:205 DEF com/z80asm.b[21] deletelabs=ug+5
deletelabs G:205 LG com/z80asm.b[4416] deletelabs()
deletelabs G:205 RT com/z80asm.b[1325] LET deletelabs()BE..
deleteline G:234 DEF com/z80asm.b[54] deleteline=ug+34
deleteline G:234 LG com/z80asm.b[2594] deleteline()
deleteline G:234 LG com/z80asm.b[4286] deleteline()
deleteline G:234 LG com/z80asm.b[4299] deleteline()
deleteline G:234 LG com/z80asm.b[5131] deleteline()
deleteline G:234 LG com/z80asm.b[5144] deleteline()
deleteline G:234 LG com/z80asm.b[5152] deleteline()
deleteline G:234 RT com/z80asm.b[2257] LET deleteline()BE..
deleteself G:125 DEF libhdr.h[162] deleteself=125
deletetask G:154 DEF libhdr.h[205] deletetask=154
deletetype F:87 LF com/z80asm.b[1090] deletetype(t!t.type,t!t.val)
deletetype F:87 LF com/z80asm.b[1097] deletetype(t!t.type,t!t.val)
deletetype F:87 LF com/z80asm.b[1117]
    deletetype(!entry!t.type,!entry!t.val)
deletetype F:87 LF com/z80asm.b[1328]
    deletetype(t.type!entry&type.mask,t.val!entry)
deletetype F:87 RT com/z80asm.b[1187] LET deletetype(ty,val)BE..
deplete G:43 DEF libhdr.h[79] deplete=43
dicposn G:200 DEF com/z80asm.b[16] dicposn=ug+0
dicposn G:200 LG com/z80asm.b[904] IF dicposn~=0&string=lex.space DO ..
dicposn G:200 LG com/z80asm.b[905] RESULTIS dicposn
dicposn G:200 LG com/z80asm.b[925] WHILE t.link!dicposn~=null DO ..
dicposn G:200 LG com/z80asm.b[926] t.str+t.link!dicposn
dicposn G:200 LG com/z80asm.b[937] dicposn:=t.link!dicposn
dicposn G:200 LG com/z80asm.b[939] dicposn:=dicposn+t.link
dicposn G:200 LG com/z80asm.b[940] RESULTIS dicposn
dicposn G:200 SG com/z80asm.b[4066] dicposn:=0
dicposn G:200 SG com/z80asm.b[924]
    dicposn:=hash.chain.anchor(string)-t.link
dicposn G:200 SG com/z80asm.b[937] dicposn:=t.link!dicposn
dicposn G:200 SG com/z80asm.b[939] dicposn:=dicposn+t.link
done S:1159 DEF com/z80asm.b[4923] done=-1
done S:1159 LL com/z80asm.b[4925] IF done<sectno DO ..
done S:1159 SL com/z80asm.b[4931] done:=sectno
done S:1162 DEF com/z80asm.b[4935] done=-1
done S:1162 LL com/z80asm.b[4938] UNLESS done<sectno DO ..
done S:1162 SL com/z80asm.b[4941] done:=sectno
dontknow G:284 DEF com/z80asm.b[112] dontknow=ug+84
dontknow G:284 LG com/z80asm.b[3281] TEST dontknow THEN .. ELSE ..
dontknow G:284 LG com/z80asm.b[3555] TEST dontknow THEN .. ELSE ..
dontknow G:284 LG com/z80asm.b[3683] TEST dontknow THEN .. ELSE ..
dontknow G:284 LG com/z80asm.b[3687] TEST dontknow THEN .. ELSE ..
dontknow G:284 LG com/z80asm.b[3744] TEST dontknow THEN .. ELSE ..
dontknow G:284 LG com/z80asm.b[4768] dontknow
dontknow G:284 LG com/z80asm.b[4796] dontknow:=dontknow|d
dontknow G:284 LG com/z80asm.b[4955]
    putlab(lab,spec!0,dontknow&flag.fwd|(spec!1=0->type.const,type.relconst))
dontknow G:284 LG com/z80asm.b[4968] TEST dontknow THEN .. ELSE ..
dontknow G:284 LG com/z80asm.b[5009] TEST dontknow THEN .. ELSE ..
dontknow G:284 LG com/z80asm.b[5021] TEST dontknow THEN .. ELSE ..
dontknow G:284 LG com/z80asm.b[5106] TEST dontknow THEN .. ELSE ..
dontknow G:284 LG com/z80asm.b[5129] TEST dontknow THEN .. ELSE ..
dontknow G:284 LG com/z80asm.b[5142] TEST dontknow THEN .. ELSE ..
dontknow G:284 SG com/z80asm.b[1157] dontknow:=TRUE
dontknow G:284 SG com/z80asm.b[4465] dontknow:=FALSE
dontknow G:284 SG com/z80asm.b[4498] dontknow:=FALSE
dontknow G:284 SG com/z80asm.b[4796] dontknow:=dontknow|d
dontknow G:284 SG com/z80asm.b[969] dontknow:=TRUE
dwproc G:404 DEF com/z80asm.b[263] dwproc=
dwproc G:404 LG com/z80asm.b[6914] code.put("DW",dwproc,0)
dwproc G:404 LG com/z80asm.b[6915] code.put("DEFW",dwproc,0)
dwproc G:404 RT com/z80asm.b[5864] LET dwproc(lab)BE..
e.bad16no M:64 DEF com/z80asm.b[463] e.bad16no=e.e+16
e.bad16no M:64 MAN com/z80asm.b[5615] CASE e.bad16no:.. 
e.bad16no M:64 MAN com/z80asm.b[6067] error(e.bad16no)
e.badbase M:13 DEF com/z80asm.b[331] e.badbase=13
e.badbase M:13 MAN com/z80asm.b[3748] warn(e.badbase,58)
e.badbase M:13 MAN com/z80asm.b[3750] warn(e.badbase,item.info%3)
e.badbase M:13 MAN com/z80asm.b[3755] warn(e.badbase,widthch)
e.badbase M:13 MAN com/z80asm.b[3772] error(e.badbase,format)
e.badbase M:13 MAN com/z80asm.b[4192] error(e.badbase,ch)
e.badbase M:13 MAN com/z80asm.b[4215] error(e.badbase,ch)
e.badbase M:13 MAN com/z80asm.b[667] CASE e.badbase:.. 
e.badbyte M:9 DEF com/z80asm.b[327] e.badbyte=9
e.badbyte M:9 MAN com/z80asm.b[1631] warn(e.badbyte)
e.badbyte M:9 MAN com/z80asm.b[1646] error(e.badbyte)
e.badbyte M:9 MAN com/z80asm.b[5780] error(e.badbyte)
e.badbyte M:9 MAN com/z80asm.b[663] CASE e.badbyte:.. 
e.badcc M:59 DEF com/z80asm.b[459] e.badcc=e.e+11
e.badcc M:59 MAN com/z80asm.b[5611] CASE e.badcc:.. 
e.badcc M:59 MAN com/z80asm.b[6405] error(e.badcc)
e.badcode M:7 DEF com/z80asm.b[325] e.badcode=7
e.badcode M:7 MAN com/z80asm.b[4461] error(e.badcode)
e.badcode M:7 MAN com/z80asm.b[4526] error(e.badcode)
e.badcode M:7 MAN com/z80asm.b[661] CASE e.badcode:.. 
e.baddef M:37 DEF com/z80asm.b[353] e.baddef=37
e.baddef M:37 MAN com/z80asm.b[1068] error(e.baddef)
e.baddef M:37 MAN com/z80asm.b[689] CASE e.baddef:.. 
e.badds M:62 DEF com/z80asm.b[461] e.badds=e.e+14
e.badds M:62 MAN com/z80asm.b[5613] CASE e.badds:.. 
e.badext M:35 DEF com/z80asm.b[351] e.badext=35
e.badext M:35 MAN com/z80asm.b[4703] warn(e.badext)
e.badext M:35 MAN com/z80asm.b[4788] error(e.badext)
e.badext M:35 MAN com/z80asm.b[687] CASE e.badext:.. 
e.badfile M:-12 DEF com/z80asm.b[330] e.badfile=-12
e.badfile M:-12 MAN com/z80asm.b[4321] error(e.badfile,file)
e.badfile M:-12 MAN com/z80asm.b[5164] error(e.badfile,item.info)
e.badfile M:-12 MAN com/z80asm.b[666] CASE e.badfile:.. 
e.badform M:22 DEF com/z80asm.b[339] e.badform=22
e.badform M:22 MAN com/z80asm.b[675] CASE e.badform:.. 
e.badim M:61 DEF com/z80asm.b[460] e.badim=e.e+13
e.badim M:61 MAN com/z80asm.b[5612] CASE e.badim:.. 
e.badim M:61 MAN com/z80asm.b[6720] error(e.badim)
e.badlab M:14 DEF com/z80asm.b[332] e.badlab=14
e.badlab M:14 MAN com/z80asm.b[3720] warn(e.badlab)
e.badlab M:14 MAN com/z80asm.b[4771] warn(e.badlab)
e.badlab M:14 MAN com/z80asm.b[4794] warn(e.badlab)
e.badlab M:14 MAN com/z80asm.b[668] CASE e.badlab:.. 
e.badloaddir M:40 DEF com/z80asm.b[356] e.badloaddir=40
e.badloaddir M:40 MAN com/z80asm.b[692] CASE e.badloaddir:.. 
e.badnum M:8 DEF com/z80asm.b[326] e.badnum=8
e.badnum M:8 MAN com/z80asm.b[4828] error(e.badnum)
e.badnum M:8 MAN com/z80asm.b[4905] error(e.badnum)
e.badnum M:8 MAN com/z80asm.b[4909] error(e.badnum)
e.badnum M:8 MAN com/z80asm.b[4951] warn(e.badnum)
e.badnum M:8 MAN com/z80asm.b[4965] error(e.badnum)
e.badnum M:8 MAN com/z80asm.b[662] CASE e.badnum:.. 
e.badreg M:57 DEF com/z80asm.b[457] e.badreg=e.e+9
e.badreg M:57 MAN com/z80asm.b[5609] CASE e.badreg:.. 
e.badreg M:57 MAN com/z80asm.b[6054] error(e.badreg)
e.badreg M:57 MAN com/z80asm.b[6093] error(e.badreg)
e.badreg M:57 MAN com/z80asm.b[6111] error(e.badreg)
e.badreg M:57 MAN com/z80asm.b[6155] error(e.badreg)
e.badreg M:57 MAN com/z80asm.b[6179] error(e.badreg)
e.badreg M:57 MAN com/z80asm.b[6464] error(e.badreg)
e.badreg M:57 MAN com/z80asm.b[6481] error(e.badreg)
e.badreg M:57 MAN com/z80asm.b[6489] error(e.badreg)
e.badreg M:57 MAN com/z80asm.b[6495] error(e.badreg)
e.badreg M:57 MAN com/z80asm.b[6499] error(e.badreg)
e.badreg M:57 MAN com/z80asm.b[6502] error(e.badreg)
e.badreg M:57 MAN com/z80asm.b[6518] error(e.badreg)
e.badreg M:57 MAN com/z80asm.b[6705] error(e.badreg)
e.badrel M:34 DEF com/z80asm.b[350] e.badrel=34
e.badrel M:34 MAN com/z80asm.b[4603] warn(e.badrel)
e.badrel M:34 MAN com/z80asm.b[4614] warn(e.badrel)
e.badrel M:34 MAN com/z80asm.b[4653] warn(e.badrel)
e.badrel M:34 MAN com/z80asm.b[4665] warn(e.badrel)
e.badrel M:34 MAN com/z80asm.b[4682] warn(e.badrel)
e.badrel M:34 MAN com/z80asm.b[4723] warn(e.badrel)
e.badrel M:34 MAN com/z80asm.b[4954] error(e.badrel)
e.badrel M:34 MAN com/z80asm.b[4969] error(e.badrel)
e.badrel M:34 MAN com/z80asm.b[4993] error(e.badrel)
e.badrel M:34 MAN com/z80asm.b[5008] error(e.badrel)
e.badrel M:34 MAN com/z80asm.b[686] CASE e.badrel:.. 
e.badsym M:5 DEF com/z80asm.b[323] e.badsym=5
e.badsym M:5 MAN com/z80asm.b[4217] error(e.badsym)
e.badsym M:5 MAN com/z80asm.b[659] CASE e.badsym:.. 
e.badtext M:31 DEF com/z80asm.b[347] e.badtext=31
e.badtext M:31 MAN com/z80asm.b[683] CASE e.badtext:.. 
e.badtype M:28 DEF com/z80asm.b[344] e.badtype=28
e.badtype M:28 MAN com/z80asm.b[1173] warn(e.badtype)
e.badtype M:28 MAN com/z80asm.b[3719] warn(e.badtype)
e.badtype M:28 MAN com/z80asm.b[680] CASE e.badtype:.. 
e.bigmacro M:-44 DEF com/z80asm.b[360] e.bigmacro=-44
e.bigmacro M:-44 MAN com/z80asm.b[3491] error(e.bigmacro)
e.bigmacro M:-44 MAN com/z80asm.b[696] CASE e.bigmacro:.. 
e.binfull M:33 DEF com/z80asm.b[349] e.binfull=33
e.binfull M:33 MAN com/z80asm.b[1626] error(e.binfull)
e.binfull M:33 MAN com/z80asm.b[685] CASE e.binfull:.. 
e.cc M:55 DEF com/z80asm.b[455] e.cc=e.e+7
e.cc M:55 MAN com/z80asm.b[5606] CASE e.cc:.. 
e.dd M:51 DEF com/z80asm.b[451] e.dd=e.e+3
e.dd M:51 MAN com/z80asm.b[5602] CASE e.dd:.. 
e.dd M:51 MAN com/z80asm.b[6185]
    error(regset=b.pp->e.pp,regset=b.rr->e.rr,e.dd)
e.divzero M:20 DEF com/z80asm.b[337] e.divzero=20
e.divzero M:20 MAN com/z80asm.b[4720] warn(e.divzero)
e.divzero M:20 MAN com/z80asm.b[673] CASE e.divzero:.. 
e.doublelab M:10 DEF com/z80asm.b[328] e.doublelab=10
e.doublelab M:10 MAN com/z80asm.b[1049] error(e.doublelab,string)
e.doublelab M:10 MAN com/z80asm.b[1057] warn(e.doublelab,t+t.str)
e.doublelab M:10 MAN com/z80asm.b[1100] warn(e.doublelab,string)
e.doublelab M:10 MAN com/z80asm.b[664] CASE e.doublelab:.. 
e.e M:48 DEF com/z80asm.b[363] e.e=48
e.e M:48 MAN com/z80asm.b[449] e.ixyhl=e.e+0
e.e M:48 MAN com/z80asm.b[450] e.r=e.e+1
e.e M:48 MAN com/z80asm.b[451] e.dd=e.e+3
e.e M:48 MAN com/z80asm.b[452] e.qq=e.e+4
e.e M:48 MAN com/z80asm.b[453] e.rr=e.e+5
e.e M:48 MAN com/z80asm.b[454] e.pp=e.e+6
e.e M:48 MAN com/z80asm.b[455] e.cc=e.e+7
e.e M:48 MAN com/z80asm.b[456] e.regexp=e.e+8
e.e M:48 MAN com/z80asm.b[457] e.badreg=e.e+9
e.e M:48 MAN com/z80asm.b[458] e.rhxy=e.e+10
e.e M:48 MAN com/z80asm.b[459] e.badcc=e.e+11
e.e M:48 MAN com/z80asm.b[460] e.badim=e.e+13
e.e M:48 MAN com/z80asm.b[461] e.badds=e.e+14
e.e M:48 MAN com/z80asm.b[462] e.range=e.e+15
e.e M:48 MAN com/z80asm.b[463] e.bad16no=e.e+16
e.expected M:17 DEF com/z80asm.b[335] e.expected=17
e.expected M:17 MAN com/z80asm.b[3561] error(e.expected,44)
e.expected M:17 MAN com/z80asm.b[3697] error(e.expected,41)
e.expected M:17 MAN com/z80asm.b[3737] warn(e.expected,44)
e.expected M:17 MAN com/z80asm.b[4152] error(e.expected,del)
e.expected M:17 MAN com/z80asm.b[4170] error(e.expected,c)
e.expected M:17 MAN com/z80asm.b[4238] error(e.expected,errparm)
e.expected M:17 MAN com/z80asm.b[6422] error(e.expected,44)
e.expected M:17 MAN com/z80asm.b[6676] error(e.expected,67)
e.expected M:17 MAN com/z80asm.b[671] CASE e.expected:.. 
e.filexs M:24 DEF com/z80asm.b[341] e.filexs=24
e.filexs M:24 MAN com/z80asm.b[2907] error(e.filexs)
e.filexs M:24 MAN com/z80asm.b[677] CASE e.filexs:.. 
e.forward M:32 DEF com/z80asm.b[348] e.forward=32
e.forward M:32 MAN com/z80asm.b[3281] an.error:=e.forward
e.forward M:32 MAN com/z80asm.b[3555] error(e.forward)
e.forward M:32 MAN com/z80asm.b[3683] warn(e.forward)
e.forward M:32 MAN com/z80asm.b[3687] warn(e.forward)
e.forward M:32 MAN com/z80asm.b[3744] warn(e.forward)
e.forward M:32 MAN com/z80asm.b[4968] error(e.forward)
e.forward M:32 MAN com/z80asm.b[5009] error(e.forward)
e.forward M:32 MAN com/z80asm.b[5021] error(e.forward)
e.forward M:32 MAN com/z80asm.b[5106] error(e.forward)
e.forward M:32 MAN com/z80asm.b[5129] error(e.forward)
e.forward M:32 MAN com/z80asm.b[5142] error(e.forward)
e.forward M:32 MAN com/z80asm.b[684] CASE e.forward:.. 
e.forward M:32 MAN com/z80asm.b[970] warn(e.forward)
e.ftoosmall M:19 DEF com/z80asm.b[336] e.ftoosmall=19
e.ftoosmall M:19 MAN com/z80asm.b[2987] warn(e.ftoosmall,no)
e.ftoosmall M:19 MAN com/z80asm.b[672] CASE e.ftoosmall:.. 
e.fullstring M:4 DEF com/z80asm.b[322] e.fullstring=4
e.fullstring M:4 MAN com/z80asm.b[3727] warn(e.fullstring)
e.fullstring M:4 MAN com/z80asm.b[3774] warn(e.fullstring)
e.fullstring M:4 MAN com/z80asm.b[4176] error(e.fullstring)
e.fullstring M:4 MAN com/z80asm.b[658] CASE e.fullstring:.. 
e.interror M:-11 DEF com/z80asm.b[329] e.interror=-11
e.interror M:-11 MAN com/z80asm.b[1033] error(e.interror,6)
e.interror M:-11 MAN com/z80asm.b[1038] error(e.interror,6)
e.interror M:-11 MAN com/z80asm.b[1902] error(e.interror,8)
e.interror M:-11 MAN com/z80asm.b[3046] error(e.interror,7)
e.interror M:-11 MAN com/z80asm.b[665] CASE e.interror:.. 
e.ixyhl M:48 DEF com/z80asm.b[449] e.ixyhl=e.e+0
e.ixyhl M:48 MAN com/z80asm.b[5600] CASE e.ixyhl:.. 
e.ixyhl M:48 MAN com/z80asm.b[5843] error(e.ixyhl)
e.ixyhl M:48 MAN com/z80asm.b[6349] error(e.ixyhl)
e.ixyhl M:48 MAN com/z80asm.b[6484] error(e.ixyhl)
e.macstack M:42 DEF com/z80asm.b[358] e.macstack=42
e.macstack M:42 MAN com/z80asm.b[2714] error(e.macstack,n)
e.macstack M:42 MAN com/z80asm.b[694] CASE e.macstack:.. 
e.memfull M:-1 DEF com/z80asm.b[319] e.memfull=-1
e.memfull M:-1 MAN com/z80asm.b[2836] error(e.memfull)
e.memfull M:-1 MAN com/z80asm.b[3288] error(e.memfull)
e.memfull M:-1 MAN com/z80asm.b[3657] error(e.memfull)
e.memfull M:-1 MAN com/z80asm.b[655] CASE e.memfull:.. 
e.memfull M:-1 MAN com/z80asm.b[752] error(e.memfull)
e.memfull M:-1 MAN com/z80asm.b[786] error(e.memfull)
e.modeset M:38 DEF com/z80asm.b[354] e.modeset=38
e.modeset M:38 MAN com/z80asm.b[5034] error(e.modeset)
e.modeset M:38 MAN com/z80asm.b[5044] error(e.modeset)
e.modeset M:38 MAN com/z80asm.b[690] CASE e.modeset:.. 
e.mtbuf M:-16 DEF com/z80asm.b[334] e.mtbuf=-16
e.mtbuf M:-16 MAN com/z80asm.b[1658] error(e.mtbuf)
e.mtbuf M:-16 MAN com/z80asm.b[3005] error(e.mtbuf)
e.mtbuf M:-16 MAN com/z80asm.b[670] CASE e.mtbuf:.. 
e.newentry M:39 DEF com/z80asm.b[355] e.newentry=39
e.newentry M:39 MAN com/z80asm.b[4997] error(e.newentry)
e.newentry M:39 MAN com/z80asm.b[691] CASE e.newentry:.. 
e.nobkt M:29 DEF com/z80asm.b[345] e.nobkt=29
e.nobkt M:29 MAN com/z80asm.b[681] CASE e.nobkt:.. 
e.nocodes M:-2 DEF com/z80asm.b[320] e.nocodes=-2
e.nocodes M:-2 MAN com/z80asm.b[3103] error(e.nocodes)
e.nocodes M:-2 MAN com/z80asm.b[656] CASE e.nocodes:.. 
e.nocomnt M:30 DEF com/z80asm.b[346] e.nocomnt=30
e.nocomnt M:30 MAN com/z80asm.b[3234] warn(e.nocomnt,comntch)
e.nocomnt M:30 MAN com/z80asm.b[4469] error(e.nocomnt,comntch)
e.nocomnt M:30 MAN com/z80asm.b[682] CASE e.nocomnt:.. 
e.noif M:45 DEF com/z80asm.b[361] e.noif=45
e.noif M:45 MAN com/z80asm.b[3626] error(e.noif)
e.noif M:45 MAN com/z80asm.b[697] CASE e.noif:.. 
e.nolab M:6 DEF com/z80asm.b[324] e.nolab=6
e.nolab M:6 MAN com/z80asm.b[3214] error(e.nolab)
e.nolab M:6 MAN com/z80asm.b[3228] warn(e.nolab)
e.nolab M:6 MAN com/z80asm.b[3350] error(e.nolab)
e.nolab M:6 MAN com/z80asm.b[3550] error(e.nolab)
e.nolab M:6 MAN com/z80asm.b[4517] error(e.nolab)
e.nolab M:6 MAN com/z80asm.b[4949] error(e.nolab)
e.nolab M:6 MAN com/z80asm.b[4963] error(e.nolab)
e.nolab M:6 MAN com/z80asm.b[4980] error(e.nolab)
e.nolab M:6 MAN com/z80asm.b[5054] error(e.nolab)
e.nolab M:6 MAN com/z80asm.b[5114] error(e.nolab)
e.nolab M:6 MAN com/z80asm.b[660] CASE e.nolab:.. 
e.nomacro M:46 DEF com/z80asm.b[362] e.nomacro=46
e.nomacro M:46 MAN com/z80asm.b[3315] error(e.nomacro)
e.nomacro M:46 MAN com/z80asm.b[3346] error(e.nomacro)
e.nomacro M:46 MAN com/z80asm.b[698] CASE e.nomacro:.. 
e.nomacterm M:43 DEF com/z80asm.b[359] e.nomacterm=43
e.nomacterm M:43 MAN com/z80asm.b[3258] error(e.nomacterm)
e.nomacterm M:43 MAN com/z80asm.b[3305] error(e.nomacterm)
e.nomacterm M:43 MAN com/z80asm.b[695] CASE e.nomacterm:.. 
e.noname M:27 DEF com/z80asm.b[343] e.noname=27
e.noname M:27 MAN com/z80asm.b[679] CASE e.noname:.. 
e.nospace M:-3 DEF com/z80asm.b[321] e.nospace=-3
e.nospace M:-3 MAN com/z80asm.b[2902] error(e.nospace)
e.nospace M:-3 MAN com/z80asm.b[657] CASE e.nospace:.. 
e.nostr M:23 DEF com/z80asm.b[340] e.nostr=23
e.nostr M:23 MAN com/z80asm.b[3667] warn(e.nostr)
e.nostr M:23 MAN com/z80asm.b[5088] error(e.nostr)
e.nostr M:23 MAN com/z80asm.b[5161] error(e.nostr)
e.nostr M:23 MAN com/z80asm.b[676] CASE e.nostr:.. 
e.notlab M:21 DEF com/z80asm.b[338] e.notlab=21
e.notlab M:21 MAN com/z80asm.b[1181] warn(e.notlab)
e.notlab M:21 MAN com/z80asm.b[674] CASE e.notlab:.. 
e.overflow M:-41 DEF com/z80asm.b[357] e.overflow=-41
e.overflow M:-41 MAN com/z80asm.b[1812] error(e.overflow)
e.overflow M:-41 MAN com/z80asm.b[693] CASE e.overflow:.. 
e.posnum M:25 DEF com/z80asm.b[342] e.posnum=25
e.posnum M:25 MAN com/z80asm.b[3282] an.error:=e.posnum
e.posnum M:25 MAN com/z80asm.b[3684] warn(e.posnum)
e.posnum M:25 MAN com/z80asm.b[3688] warn(e.posnum)
e.posnum M:25 MAN com/z80asm.b[5022] error(e.posnum)
e.posnum M:25 MAN com/z80asm.b[678] CASE e.posnum:.. 
e.pp M:54 DEF com/z80asm.b[454] e.pp=e.e+6
e.pp M:54 MAN com/z80asm.b[5605] CASE e.pp:.. 
e.pp M:54 MAN com/z80asm.b[6185]
    error(regset=b.pp->e.pp,regset=b.rr->e.rr,e.dd)
e.qq M:52 DEF com/z80asm.b[452] e.qq=e.e+4
e.qq M:52 MAN com/z80asm.b[5603] CASE e.qq:.. 
e.r M:49 DEF com/z80asm.b[450] e.r=e.e+1
e.r M:49 MAN com/z80asm.b[5601] CASE e.r:.. 
e.r M:49 MAN com/z80asm.b[6166] error(e.r)
e.r M:49 MAN com/z80asm.b[6666] error(e.r)
e.r M:49 MAN com/z80asm.b[6696] error(e.r)
e.range M:63 DEF com/z80asm.b[462] e.range=e.e+15
e.range M:63 MAN com/z80asm.b[5614] CASE e.range:.. 
e.range M:63 MAN com/z80asm.b[6431] warn(e.range)
e.regexp M:56 DEF com/z80asm.b[456] e.regexp=e.e+8
e.regexp M:56 MAN com/z80asm.b[5608] CASE e.regexp:.. 
e.relsection M:36 DEF com/z80asm.b[352] e.relsection=36
e.relsection M:36 MAN com/z80asm.b[688] CASE e.relsection:.. 
e.rhxy M:58 DEF com/z80asm.b[458] e.rhxy=e.e+10
e.rhxy M:58 MAN com/z80asm.b[5610] CASE e.rhxy:.. 
e.rhxy M:58 MAN com/z80asm.b[6201] error(e.rhxy)
e.rhxy M:58 MAN com/z80asm.b[6214] error(e.rhxy)
e.rr M:53 DEF com/z80asm.b[453] e.rr=e.e+5
e.rr M:53 MAN com/z80asm.b[5604] CASE e.rr:.. 
e.rr M:53 MAN com/z80asm.b[6185]
    error(regset=b.pp->e.pp,regset=b.rr->e.rr,e.dd)
e.titledone M:15 DEF com/z80asm.b[333] e.titledone=15
e.titledone M:15 MAN com/z80asm.b[4938] error(e.titledone)
e.titledone M:15 MAN com/z80asm.b[669] CASE e.titledone:.. 
ejectproc G:313 DEF com/z80asm.b[143] ejectproc=ug+113
ejectproc G:313 LG com/z80asm.b[6935] code.put("PAGE",ejectproc,0)
ejectproc G:313 RT com/z80asm.b[5137] LET ejectproc(lab)BE..
elseproc G:262 DEF com/z80asm.b[87] elseproc=ug+62
elseproc G:262 LG com/z80asm.b[3621]
    mnemproc:=find.mnem(@lab,4,endproc,...)
elseproc G:262 LG com/z80asm.b[3623]
    TEST mnemproc=elseproc THEN .. ELSE ..
elseproc G:262 LG com/z80asm.b[6953] code.put("ELSE",elseproc,0)
elseproc G:262 RT com/z80asm.b[3590] LET elseproc(lab)BE..
emergencyexit F:1307 LAB com/z80asm.b[5494]
    emergencyexit:selectoutput(out)
emergencyexit F:1307 LF com/z80asm.b[5487] errorlabel:=emergencyexit
end.macro.var G:249 DEF com/z80asm.b[71] end.macro.var=ug+49
end.macro.var G:249 FN com/z80asm.b[2813] LET end.macro.var()=..
end.macro.var G:249 LG com/z80asm.b[3315] UNLESS end.macro.var() DO ..
end.macro.var G:249 LG com/z80asm.b[4374] WHILE end.macro.var() DO ..
endasm G:361 DEF com/z80asm.b[200] endasm=ug+161
endasm G:361 LG com/z80asm.b[5522] endasm()
endasm G:361 RT com/z80asm.b[5253] LET endasm()BE..
endfile G:320 DEF com/z80asm.b[151] endfile=ug+120
endfile G:320 LG com/z80asm.b[5182] endfile(fno)
endfile G:320 RT com/z80asm.b[2913] LET endfile(fno)BE..
endline G:252 DEF com/z80asm.b[74] endline=ug+52
endline G:252 LG com/z80asm.b[3200] endline(~print.expansions)
endline G:252 LG com/z80asm.b[3244] endline(TRUE)
endline G:252 LG com/z80asm.b[3262] endline(FALSE)
endline G:252 LG com/z80asm.b[3292] endline(TRUE)
endline G:252 LG com/z80asm.b[3298] endline(TRUE)
endline G:252 LG com/z80asm.b[3404] endline(TRUE)
endline G:252 LG com/z80asm.b[3465] endline(TRUE)
endline G:252 LG com/z80asm.b[3574] endline(FALSE)
endline G:252 LG com/z80asm.b[3578] endline(FALSE)
endline G:252 LG com/z80asm.b[3579] endline(FALSE)
endline G:252 LG com/z80asm.b[3582] endline(TRUE)
endline G:252 LG com/z80asm.b[3596] endline(TRUE)
endline G:252 LG com/z80asm.b[3597] endline(FALSE)
endline G:252 LG com/z80asm.b[3600] endline(TRUE)
endline G:252 LG com/z80asm.b[3609] endline(FALSE)
endline G:252 LG com/z80asm.b[3629] endline(TRUE)
endline G:252 LG com/z80asm.b[4167] endline(TRUE)
endline G:252 LG com/z80asm.b[4472] endline(TRUE)
endline G:252 LG com/z80asm.b[5170] endline(TRUE)
endline G:252 RT com/z80asm.b[2588] LET endline(print)BE..
endmacroproc G:258 DEF com/z80asm.b[83] endmacroproc=ug+58
endmacroproc G:258 LG com/z80asm.b[3400]
    mnemproc:=find.mnem(@lab,4,macroproc,...)
endmacroproc G:258 LG com/z80asm.b[3403]
    depth:=depth+(mnemproc=endmacroproc->-1,1)
endmacroproc G:258 LG com/z80asm.b[6941] code.put("ENDM",endmacroproc,0)
endmacroproc G:258 RT com/z80asm.b[3270] LET endmacroproc(lab)BE..
endparse G:360 DEF com/z80asm.b[199] endparse=ug+160
endparse G:360 LG com/z80asm.b[4350] endparse()
endparse G:360 LG com/z80asm.b[4373] endparse()
endparse G:360 RT com/z80asm.b[4369] LET endparse()BE..
endproc G:307 DEF com/z80asm.b[137] endproc=ug+107
endproc G:307 LG com/z80asm.b[3400]
    mnemproc:=find.mnem(@lab,4,macroproc,...)
endproc G:307 LG com/z80asm.b[3402]
    TEST mnemproc=null|mnemproc=endproc THEN .. ELSE ..
endproc G:307 LG com/z80asm.b[3621]
    mnemproc:=find.mnem(@lab,4,endproc,...)
endproc G:307 LG com/z80asm.b[3622]
    TEST mnemproc=null|mnemproc=endproc THEN .. ELSE ..
endproc G:307 LG com/z80asm.b[6934] code.put("END",endproc,0)
endproc G:307 RT com/z80asm.b[4988] LET endproc(lab)BE..
endread G:60 DEF libhdr.h[96] endread=60
endread G:60 LG com/z80asm.b[4361] endread()
endread G:60 LG com/z80asm.b[4363] endread()
endread G:60 LG com/z80asm.b[5177] endread()
endsection G:359 DEF com/z80asm.b[198] endsection=ug+159
endstream G:62 DEF libhdr.h[98] endstream=62
endstreamch M:-1 DEF libhdr.h[247] endstreamch=-1
endstreamch M:-1 MAN com/z80asm.b[2468]
    WHILE 10~=ch&ch~=endstreamch DO ..
endstreamch M:-1 MAN com/z80asm.b[2595] UNLESS ch=endstreamch DO ..
endstreamch M:-1 MAN com/z80asm.b[2755]
    activation!text.savch:=(print.expansions->32768,0)|(ch1=endstreamch->ch,0)
endstreamch M:-1 MAN com/z80asm.b[2757]
    TEST ch1=endstreamch THEN .. ELSE ..
endstreamch M:-1 MAN com/z80asm.b[4089]
    call.macro(macro.var(1,1),macro,macro%0+1,endstreamch)
endstreamch M:-1 MAN com/z80asm.b[4128] CASE endstreamch:.. 
endstreamch M:-1 MAN com/z80asm.b[4151] IF ch=10|ch=endstreamch DO ..
endtask G:162 DEF libhdr.h[213] endtask=162
endwrite G:61 DEF libhdr.h[97] endwrite=61
endwrite G:61 LG com/z80asm.b[5513] endwrite()
endwrite G:61 LG com/z80asm.b[5517] endwrite()
entrypoint G:223 DEF com/z80asm.b[41] entrypoint=ug+23
entrypoint G:223 LG com/z80asm.b[4349] code.gen(cd.eof,entrypoint)
entrypoint G:223 LG com/z80asm.b[4995]
    TEST entrypoint=65535 THEN .. ELSE ..
entrypoint G:223 SG com/z80asm.b[4297] entrypoint:=65535
entrypoint G:223 SG com/z80asm.b[4996] entrypoint:=e
entryword M:57311 DEF libhdr.h[266] entryword=57311
equproc G:298 DEF com/z80asm.b[128] equproc=ug+98
equproc G:298 LG com/z80asm.b[6919] code.put("EQU",equproc,0)
equproc G:298 RT com/z80asm.b[4948] LET equproc(lab)BE..
errcount G:276 DEF com/z80asm.b[103] errcount=ug+76
errcount G:276 LG com/z80asm.b[2381] errcount:=errcount+1
errcount G:276 LG com/z80asm.b[4327] state!in.errcount:=errcount
errcount G:276 LG com/z80asm.b[4355] errcount:=errcount+1
errcount G:276 LG com/z80asm.b[4406] state!in.errcount:=errcount
errcount G:276 LG com/z80asm.b[5497]
    TEST badlabs=0&errcount=0 THEN .. ELSE ..
errcount G:276 LG com/z80asm.b[5501] UNLESS errcount=0 DO ..
errcount G:276 LG com/z80asm.b[5502]
    writef("%N error%S ",errcount,errcount=1->"","s")
errcount G:276 LG com/z80asm.b[5503] UNLESS errcount=0|badlabs=0 DO ..
errcount G:276 SG com/z80asm.b[2381] errcount:=errcount+1
errcount G:276 SG com/z80asm.b[4283] errcount:=0
errcount G:276 SG com/z80asm.b[4355] errcount:=errcount+1
errcount G:276 SG com/z80asm.b[4392] errcount:=state!in.errcount
errcount G:276 SG com/z80asm.b[4396] errcount:=0
error G:269 DEF com/z80asm.b[96] error=ug+69
error G:269 LG com/z80asm.b[1033] error(e.interror,6)
error G:269 LG com/z80asm.b[1038] error(e.interror,6)
error G:269 LG com/z80asm.b[1049] error(e.doublelab,string)
error G:269 LG com/z80asm.b[1068] error(e.baddef)
error G:269 LG com/z80asm.b[1626] error(e.binfull)
error G:269 LG com/z80asm.b[1646] error(e.badbyte)
error G:269 LG com/z80asm.b[1658] error(e.mtbuf)
error G:269 LG com/z80asm.b[1812] error(e.overflow)
error G:269 LG com/z80asm.b[1902] error(e.interror,8)
error G:269 LG com/z80asm.b[2714] error(e.macstack,n)
error G:269 LG com/z80asm.b[2836] error(e.memfull)
error G:269 LG com/z80asm.b[2902] error(e.nospace)
error G:269 LG com/z80asm.b[2907] error(e.filexs)
error G:269 LG com/z80asm.b[3005] error(e.mtbuf)
error G:269 LG com/z80asm.b[3046] error(e.interror,7)
error G:269 LG com/z80asm.b[3103] error(e.nocodes)
error G:269 LG com/z80asm.b[3214] error(e.nolab)
error G:269 LG com/z80asm.b[3241] error(0)
error G:269 LG com/z80asm.b[3258] error(e.nomacterm)
error G:269 LG com/z80asm.b[3284] error(an.error)
error G:269 LG com/z80asm.b[3288] error(e.memfull)
error G:269 LG com/z80asm.b[3305] error(e.nomacterm)
error G:269 LG com/z80asm.b[3315] error(e.nomacro)
error G:269 LG com/z80asm.b[3346] error(e.nomacro)
error G:269 LG com/z80asm.b[3350] error(e.nolab)
error G:269 LG com/z80asm.b[3491] error(e.bigmacro)
error G:269 LG com/z80asm.b[3550] error(e.nolab)
error G:269 LG com/z80asm.b[3555] error(e.forward)
error G:269 LG com/z80asm.b[3561] error(e.expected,44)
error G:269 LG com/z80asm.b[3626] error(e.noif)
error G:269 LG com/z80asm.b[3657] error(e.memfull)
error G:269 LG com/z80asm.b[3697] error(e.expected,41)
error G:269 LG com/z80asm.b[3772] error(e.badbase,format)
error G:269 LG com/z80asm.b[4152] error(e.expected,del)
error G:269 LG com/z80asm.b[4170] error(e.expected,c)
error G:269 LG com/z80asm.b[4176] error(e.fullstring)
error G:269 LG com/z80asm.b[4192] error(e.badbase,ch)
error G:269 LG com/z80asm.b[4215] error(e.badbase,ch)
error G:269 LG com/z80asm.b[4217] error(e.badsym)
error G:269 LG com/z80asm.b[4238] error(e.expected,errparm)
error G:269 LG com/z80asm.b[4321] error(e.badfile,file)
error G:269 LG com/z80asm.b[4461] error(e.badcode)
error G:269 LG com/z80asm.b[4469] error(e.nocomnt,comntch)
error G:269 LG com/z80asm.b[4471] error(0)
error G:269 LG com/z80asm.b[4517] error(e.nolab)
error G:269 LG com/z80asm.b[4526] error(e.badcode)
error G:269 LG com/z80asm.b[4788] error(e.badext)
error G:269 LG com/z80asm.b[4828] error(e.badnum)
error G:269 LG com/z80asm.b[4905] error(e.badnum)
error G:269 LG com/z80asm.b[4909] error(e.badnum)
error G:269 LG com/z80asm.b[4938] error(e.titledone)
error G:269 LG com/z80asm.b[4949] error(e.nolab)
error G:269 LG com/z80asm.b[4954] error(e.badrel)
error G:269 LG com/z80asm.b[4963] error(e.nolab)
error G:269 LG com/z80asm.b[4965] error(e.badnum)
error G:269 LG com/z80asm.b[4968] error(e.forward)
error G:269 LG com/z80asm.b[4969] error(e.badrel)
error G:269 LG com/z80asm.b[4980] error(e.nolab)
error G:269 LG com/z80asm.b[4993] error(e.badrel)
error G:269 LG com/z80asm.b[4997] error(e.newentry)
error G:269 LG com/z80asm.b[5008] error(e.badrel)
error G:269 LG com/z80asm.b[5009] error(e.forward)
error G:269 LG com/z80asm.b[5021] error(e.forward)
error G:269 LG com/z80asm.b[5022] error(e.posnum)
error G:269 LG com/z80asm.b[5034] error(e.modeset)
error G:269 LG com/z80asm.b[5044] error(e.modeset)
error G:269 LG com/z80asm.b[5054] error(e.nolab)
error G:269 LG com/z80asm.b[5088] error(e.nostr)
error G:269 LG com/z80asm.b[5106] error(e.forward)
error G:269 LG com/z80asm.b[5114] error(e.nolab)
error G:269 LG com/z80asm.b[5129] error(e.forward)
error G:269 LG com/z80asm.b[5142] error(e.forward)
error G:269 LG com/z80asm.b[5161] error(e.nostr)
error G:269 LG com/z80asm.b[5164] error(e.badfile,item.info)
error G:269 LG com/z80asm.b[5780] error(e.badbyte)
error G:269 LG com/z80asm.b[5843] error(e.ixyhl)
error G:269 LG com/z80asm.b[6054] error(e.badreg)
error G:269 LG com/z80asm.b[6067] error(e.bad16no)
error G:269 LG com/z80asm.b[6093] error(e.badreg)
error G:269 LG com/z80asm.b[6111] error(e.badreg)
error G:269 LG com/z80asm.b[6155] error(e.badreg)
error G:269 LG com/z80asm.b[6166] error(e.r)
error G:269 LG com/z80asm.b[6179] error(e.badreg)
error G:269 LG com/z80asm.b[6185]
    error(regset=b.pp->e.pp,regset=b.rr->e.rr,e.dd)
error G:269 LG com/z80asm.b[6201] error(e.rhxy)
error G:269 LG com/z80asm.b[6214] error(e.rhxy)
error G:269 LG com/z80asm.b[6349] error(e.ixyhl)
error G:269 LG com/z80asm.b[6405] error(e.badcc)
error G:269 LG com/z80asm.b[6422] error(e.expected,44)
error G:269 LG com/z80asm.b[6464] error(e.badreg)
error G:269 LG com/z80asm.b[6481] error(e.badreg)
error G:269 LG com/z80asm.b[6484] error(e.ixyhl)
error G:269 LG com/z80asm.b[6489] error(e.badreg)
error G:269 LG com/z80asm.b[6495] error(e.badreg)
error G:269 LG com/z80asm.b[6499] error(e.badreg)
error G:269 LG com/z80asm.b[6502] error(e.badreg)
error G:269 LG com/z80asm.b[6518] error(e.badreg)
error G:269 LG com/z80asm.b[6666] error(e.r)
error G:269 LG com/z80asm.b[6676] error(e.expected,67)
error G:269 LG com/z80asm.b[6696] error(e.r)
error G:269 LG com/z80asm.b[6705] error(e.badreg)
error G:269 LG com/z80asm.b[6720] error(e.badim)
error G:269 LG com/z80asm.b[752] error(e.memfull)
error G:269 LG com/z80asm.b[786] error(e.memfull)
error G:269 RT com/z80asm.b[2356] LET error(arg1,arg2,arg3,arg4)BE..
errorlabel G:271 DEF com/z80asm.b[98] errorlabel=ug+71
errorlabel G:271 LG com/z80asm.b[2436] longjump(errorlevel,errorlabel)
errorlabel G:271 LG com/z80asm.b[3238] errorlabel
errorlabel G:271 LG com/z80asm.b[3450] errorlabel
errorlabel G:271 LG com/z80asm.b[4445] errorlabel
errorlabel G:271 SG com/z80asm.b[3240] errorlabel:=stoplab
errorlabel G:271 SG com/z80asm.b[3242] errorlabel:=savelab
errorlabel G:271 SG com/z80asm.b[3457] errorlabel:=exitlabel
errorlabel G:271 SG com/z80asm.b[3471] errorlabel:=savelab
errorlabel G:271 SG com/z80asm.b[4451] errorlabel:=xit
errorlabel G:271 SG com/z80asm.b[4483] errorlabel:=savlab
errorlabel G:271 SG com/z80asm.b[5487] errorlabel:=emergencyexit
errorlevel G:272 DEF com/z80asm.b[99] errorlevel=ug+72
errorlevel G:272 LG com/z80asm.b[2436] longjump(errorlevel,errorlabel)
errorlevel G:272 LG com/z80asm.b[3237] errorlevel
errorlevel G:272 LG com/z80asm.b[3449] errorlevel
errorlevel G:272 LG com/z80asm.b[4444] errorlevel
errorlevel G:272 SG com/z80asm.b[3239] errorlevel:=level()
errorlevel G:272 SG com/z80asm.b[3243] errorlevel:=savelev
errorlevel G:272 SG com/z80asm.b[3456] errorlevel:=level()
errorlevel G:272 SG com/z80asm.b[3470] errorlevel:=savelev
errorlevel G:272 SG com/z80asm.b[4450] errorlevel:=level()
errorlevel G:272 SG com/z80asm.b[4482] errorlevel:=savlev
errorlevel G:272 SG com/z80asm.b[5486] errorlevel:=level()
errormess G:267 DEF com/z80asm.b[94] errormess=ug+67
errormess G:267 FN com/z80asm.b[5598] LET errormess(rc)=..
errormess G:267 FN com/z80asm.b[703] LET errormess(rc)=..
errormess G:267 LG com/z80asm.b[699] RESULTIS errormess(rc)
exitlabel F:685 LAB com/z80asm.b[3466] exitlabel:
exitlabel F:685 LF com/z80asm.b[3457] errorlabel:=exitlabel
expand.text G:245 DEF com/z80asm.b[67] expand.text=ug+45
expand.text G:245 LG com/z80asm.b[3451] expand.text
expand.text G:245 LG com/z80asm.b[3710] expand.text
expand.text G:245 LG com/z80asm.b[4083] IF iden.valid&expand.text DO ..
expand.text G:245 SG com/z80asm.b[3458] expand.text:=FALSE
expand.text G:245 SG com/z80asm.b[3468] expand.text:=save.expand
expand.text G:245 SG com/z80asm.b[3711] expand.text:=FALSE
expand.text G:245 SG com/z80asm.b[3721] expand.text:=save.expand
expand.text G:245 SG com/z80asm.b[4296] expand.text:=TRUE
expand.text G:245 SG com/z80asm.b[4429] expand.text:=TRUE
expression G:285 DEF com/z80asm.b[113] expression=ug+85
expression G:285 FN com/z80asm.b[4600] LET expression()=..
expression G:285 LG com/z80asm.b[3280] rpt.factor:=expression()
expression G:285 LG com/z80asm.b[3554]
    arg1:=is.string->strexp(null,0,...),expression()
expression G:285 LG com/z80asm.b[3562]
    arg2:=is.string->strexp(null,0,FALSE),expression()
expression G:285 LG com/z80asm.b[3680] expression()
expression G:285 LG com/z80asm.b[3686] expression()
expression G:285 LG com/z80asm.b[3742] expression()
expression G:285 LG com/z80asm.b[4910] expression()
expression G:285 LG com/z80asm.b[5020] i:=expression()
expression G:285 LG com/z80asm.b[5084] level:=expression()
expression G:285 LG com/z80asm.b[5105] expression()
expression G:285 LG com/z80asm.b[5127] spaces:=expression()
expression G:285 LG com/z80asm.b[5140]
    lines:=is.expression()->expression(),pl
expression G:285 LG com/z80asm.b[5154] list:=list+expression()
expression G:285 LG com/z80asm.b[5807]
    i:=neg->-expression(),expression()
expression G:285 LG com/z80asm.b[6032] putword(expression())
expression G:285 LG com/z80asm.b[6049] putword(expression())
expression G:285 LG com/z80asm.b[6118] d:=expression()
expression G:285 LG com/z80asm.b[6119] d:=-expression()
expression G:285 LG com/z80asm.b[6126] putword(expression())
expression G:285 LG com/z80asm.b[6164] putword(expression())
expression G:285 LG com/z80asm.b[6212]
    shel:=putf(expression(),f.source,shel)
expression G:285 LG com/z80asm.b[6407]
    putword(checkrange(expression()-2))
expression G:285 LG com/z80asm.b[6420]
    putword(checkrange(expression()-2))
expression G:285 LG com/z80asm.b[6443] putword(expression()-2)
expression G:285 LG com/z80asm.b[6452]
    putwordf(expression()>>3,f.source)
expression G:285 LG com/z80asm.b[6678] putword(expression())
expression G:285 LG com/z80asm.b[6702] putword(expression())
expression G:285 LG com/z80asm.b[6716] SWITCHON expression() INTO..
f.ccinfo G:392 DEF com/z80asm.b[238] f.ccinfo=
f.ccinfo G:392 LG com/z80asm.b[6359]
    putwordf(getf(cc,f.ccinfo),f.source)
f.ccinfo G:392 LG com/z80asm.b[6378]
    putwordf(getf(cc,f.ccinfo),f.source)
f.ccinfo G:392 LG com/z80asm.b[6394]
    putwordf(getf(cc,f.ccinfo),f.source)
f.ccinfo G:392 LG com/z80asm.b[6402] getf(ccsym,f.ccinfo)
f.ccinfo G:392 SG com/z80asm.b[7043] f.ccinfo:=newf(3,3)
f.ccsmall G:398 DEF com/z80asm.b[244] f.ccsmall=
f.ccsmall G:398 LG com/z80asm.b[6406] putwordf(cc,f.ccsmall)
f.ccsmall G:398 SG com/z80asm.b[7049] f.ccsmall:=newf(3,2)
f.ddinfo G:393 DEF com/z80asm.b[239] f.ddinfo=
f.ddinfo G:393 LG com/z80asm.b[6075]
    putwordf(getf(r,f.ddinfo),f.ddsource)
f.ddinfo G:393 LG com/z80asm.b[6101]
    putwordf(getf(r,f.ddinfo),f.ddsource)
f.ddinfo G:393 LG com/z80asm.b[6186]
    putwordf(getf(addopreg,f.ddinfo),f.ddsource)
f.ddinfo G:393 LG com/z80asm.b[6471]
    putwordf(getf(r,f.ddinfo),f.ddsource)
f.ddinfo G:393 LG com/z80asm.b[6523]
    putwordf(getf(dd,f.ddinfo),f.ddsource)
f.ddinfo G:393 SG com/z80asm.b[7044] f.ddinfo:=newf(0,2)
f.ddsource G:395 DEF com/z80asm.b[241] f.ddsource=
f.ddsource G:395 LG com/z80asm.b[6075]
    putwordf(getf(r,f.ddinfo),f.ddsource)
f.ddsource G:395 LG com/z80asm.b[6101]
    putwordf(getf(r,f.ddinfo),f.ddsource)
f.ddsource G:395 LG com/z80asm.b[6186]
    putwordf(getf(addopreg,f.ddinfo),f.ddsource)
f.ddsource G:395 LG com/z80asm.b[6471]
    putwordf(getf(r,f.ddinfo),f.ddsource)
f.ddsource G:395 LG com/z80asm.b[6523]
    putwordf(getf(dd,f.ddinfo),f.ddsource)
f.ddsource G:395 SG com/z80asm.b[7046] f.ddsource:=newf(4,2)
f.dest G:396 DEF com/z80asm.b[242] f.dest=
f.dest G:396 LG com/z80asm.b[6039] putwordf(getf(r,f.rinfo),f.dest)
f.dest G:396 LG com/z80asm.b[6046]
    UNLESS getrorind(shel,f.dest,fn.normal) DO ..
f.dest G:396 LG com/z80asm.b[6129] putwordf(getf(s,f.rinfo),f.dest)
f.dest G:396 LG com/z80asm.b[6160]
    UNLESS getrorind(putf(info,f.source,sheli),f.dest,fn.normal) DO ..
f.dest G:396 LG com/z80asm.b[6200]
    UNLESS getrorind(shel,f.dest,fn.bit) DO ..
f.dest G:396 LG com/z80asm.b[6214]
    UNLESS getrorind(shel,f.dest,fn.bit) DO ..
f.dest G:396 LG com/z80asm.b[6459] putf(info,f.dest,52)
f.dest G:396 LG com/z80asm.b[6514] putf(info,f.dest,224)
f.dest G:396 SG com/z80asm.b[7047] f.dest:=newf(0,3)
f.len M:65280 DEF com/z80asm.b[2969] f.len=byte2
f.len M:65280 MAN com/z80asm.b[2977] (field&f.len)>>partsize
f.len M:65280 MAN com/z80asm.b[2984] (field&f.len)>>partsize
f.len M:65280 MAN com/z80asm.b[2993] (field&f.len)>>partsize
f.rinfo G:391 DEF com/z80asm.b[237] f.rinfo=
f.rinfo G:391 LG com/z80asm.b[5837] putwordf(getf(r,f.rinfo),rfield)
f.rinfo G:391 LG com/z80asm.b[6039] putwordf(getf(r,f.rinfo),f.dest)
f.rinfo G:391 LG com/z80asm.b[6044] putf(getf(r,f.rinfo),f.source,70)
f.rinfo G:391 LG com/z80asm.b[6048] putwordf(getf(r,f.rinfo),f.source)
f.rinfo G:391 LG com/z80asm.b[6056] putwordf(getf(r,f.rinfo),f.source)
f.rinfo G:391 LG com/z80asm.b[6129] putwordf(getf(s,f.rinfo),f.dest)
f.rinfo G:391 LG com/z80asm.b[6669] r:=getf(reg,f.rinfo)
f.rinfo G:391 LG com/z80asm.b[6699] putwordf(getf(r,f.rinfo),f.source)
f.rinfo G:391 SG com/z80asm.b[7042] f.rinfo:=newf(0,3)
f.shift M:255 DEF com/z80asm.b[2968] f.shift=byte1
f.shift M:255 MAN com/z80asm.b[2976] field&f.shift
f.shift M:255 MAN com/z80asm.b[2983] field&f.shift
f.source G:394 DEF com/z80asm.b[240] f.source=
f.source G:394 LG com/z80asm.b[6044] putf(getf(r,f.rinfo),f.source,70)
f.source G:394 LG com/z80asm.b[6048] putwordf(getf(r,f.rinfo),f.source)
f.source G:394 LG com/z80asm.b[6056] putwordf(getf(r,f.rinfo),f.source)
f.source G:394 LG com/z80asm.b[6160]
    UNLESS getrorind(putf(info,f.source,sheli),f.dest,fn.normal) DO ..
f.source G:394 LG com/z80asm.b[6163] putword(putf(info,f.source,sheln))
f.source G:394 LG com/z80asm.b[6181] putword(putf(~info>>1,f.source,66))
f.source G:394 LG com/z80asm.b[6198] putf(info,f.source,6)
f.source G:394 LG com/z80asm.b[6212]
    shel:=putf(expression(),f.source,shel)
f.source G:394 LG com/z80asm.b[6359]
    putwordf(getf(cc,f.ccinfo),f.source)
f.source G:394 LG com/z80asm.b[6378]
    putwordf(getf(cc,f.ccinfo),f.source)
f.source G:394 LG com/z80asm.b[6394]
    putwordf(getf(cc,f.ccinfo),f.source)
f.source G:394 LG com/z80asm.b[6452] putwordf(expression()>>3,f.source)
f.source G:394 LG com/z80asm.b[6462]
    UNLESS getrorind(shel,f.source,fn.normal) DO ..
f.source G:394 LG com/z80asm.b[6470] putwordf(info,f.source)
f.source G:394 LG com/z80asm.b[6674] putwordf(r,f.source)
f.source G:394 LG com/z80asm.b[6699] putwordf(getf(r,f.rinfo),f.source)
f.source G:394 SG com/z80asm.b[7045] f.source:=newf(3,3)
f.top G:397 DEF com/z80asm.b[243] f.top=
f.top G:397 LG com/z80asm.b[6210] putf(info,f.top,70)
f.top G:397 SG com/z80asm.b[7048] f.top:=newf(6,2)
fatal G:273 DEF com/z80asm.b[100] fatal=ug+73
fatal G:273 LG com/z80asm.b[2403] UNLESS fatal DO ..
fatal G:273 LG com/z80asm.b[3467]
    .. REPEATUNTIL item.type=i.end|fatal|i~=n&mnem~=null|finishpass
fatal G:273 LG com/z80asm.b[4336]
    .. REPEATUNTIL item.type=i.end|finishpass|fatal
fatal G:273 LG com/z80asm.b[4341] UNLESS fatal DO ..
fatal G:273 LG com/z80asm.b[4346]
    .. REPEATUNTIL fatal|item.type=i.end&~endmissing
fatal G:273 LG com/z80asm.b[4480] finishpass:=finishpass|fatal
fatal G:273 LG com/z80asm.b[5175]
    .. REPEATUNTIL item.type=i.end|finishpass|fatal
fatal G:273 LG com/z80asm.b[5180] finishpass:=fatal
fatal G:273 LG com/z80asm.b[5524] IF error|fatal DO ..
fatal G:273 SG com/z80asm.b[2385] fatal:=TRUE
fatal G:273 SG com/z80asm.b[4316] fatal:=FALSE
fatal G:273 SG com/z80asm.b[4478] fatal:=TRUE
fault G:174 DEF libhdr.h[222] fault=174
fault G:174 LG com/z80asm.b[5359] fault(r2)
file.id G:315 DEF com/z80asm.b[146] file.id=ug+115
file.id G:315 LG com/z80asm.b[2426]
    writef("*n*nFat'ne %N): ",file.id,line.of.file)
file.id G:315 LG com/z80asm.b[2515] wrch(file.id=0->32,43)
file.id G:315 LG com/z80asm.b[2522] TEST file.id=0 THEN .. ELSE ..
file.id G:315 LG com/z80asm.b[2525] TEST file.id<10 THEN .. ELSE ..
file.id G:315 LG com/z80asm.b[2526]
    writef("%I1  %I4 ",file.id,line.of.file)
file.id G:315 LG com/z80asm.b[2527]
    writef("%I2 %I4 ",file.id,line.of.file)
file.id G:315 LG com/z80asm.b[5168] file.id
file.id G:315 SG com/z80asm.b[2930] file.id:=0
file.id G:315 SG com/z80asm.b[4302] file.id:=0
file.id G:315 SG com/z80asm.b[4398] file.id:=0
file.id G:315 SG com/z80asm.b[5171] file.id:=fno
file.id G:315 SG com/z80asm.b[5183] file.id:=savefno
file.number G:323 DEF com/z80asm.b[154] file.number=ug+123
file.number G:323 FN com/z80asm.b[2935] LET file.number(lv.line)=..
file.number G:323 LG com/z80asm.b[1252]
    IF allsyms|file.number(@line.no)=0|(t.type!entry&flag.double)~=0 DO ..
file.number G:323 LG com/z80asm.b[1280] file.number(@line)
files G:317 DEF com/z80asm.b[148] files=ug+117
files G:317 LG com/z80asm.b[2898]
    TEST 0<=files!no.of.files&files!no.of.files<=max.files THEN .. ELSE ..
files G:317 LG com/z80asm.b[2901] files!(files!no.of.files+1):=newfile
files G:317 LG com/z80asm.b[2908] files!no.of.files:=files!no.of.files+1
files G:317 LG com/z80asm.b[2909]
    RESULTIS files!no.of.files-first.file+1
files G:317 LG com/z80asm.b[2914] files!(fno+first.file-1)!1:=lineno
files G:317 LG com/z80asm.b[2919]
    FOR i=first.file TO files!no.of.files DO..
files G:317 LG com/z80asm.b[2920] IF files!i~=0 DO ..
files G:317 LG com/z80asm.b[2922]
    writef("file ' lines)*n",i-first.file+1,files!i+2,files!i!1-files!i!0)
files G:317 LG com/z80asm.b[2928] files!no.of.files:=first.file-1
files G:317 LG com/z80asm.b[2929] files!first.line:=to.line
files G:317 LG com/z80asm.b[2939] files!0
files G:317 LG com/z80asm.b[2940] WHILE i<=fmax&!lv.line>files!i!0 DO ..
files G:317 LG com/z80asm.b[2943]
    WHILE i>=first.file&!lv.line>files!i!1 DO ..
files G:317 LG com/z80asm.b[2946] files!n!1
files G:317 LG com/z80asm.b[2947] !lv.line:=!lv.line-top-files!n!0
files G:317 LG com/z80asm.b[2949] WHILE n<=j&files!n!0<=top DO ..
files G:317 LG com/z80asm.b[2951] !lv.line:=!lv.line+files!first.line
files G:317 LG com/z80asm.b[2952] !lv.line:=!lv.line-files!i!0
files G:317 LG com/z80asm.b[4304] files!0:=0
files G:317 SG com/z80asm.b[4303] files:=simplegetvec(max.files)
filling.macro G:244 DEF com/z80asm.b[66] filling.macro=ug+44
filling.macro G:244 LG com/z80asm.b[2348] UNLESS filling.macro=0 DO ..
filling.macro G:244 LG com/z80asm.b[2348] macro.wrch(filling.macro,ch)
filling.macro G:244 SG com/z80asm.b[3398] filling.macro:=macro
filling.macro G:244 SG com/z80asm.b[3406] filling.macro:=0
filling.macro G:244 SG com/z80asm.b[4294] filling.macro:=0
find.mnem G:370 DEF com/z80asm.b[80] find.mnem=ug+170
find.mnem G:370 FN com/z80asm.b[3445]
    LET find.mnem(lv.lab,n,proc1,proc2,proc3,proc4,proc5,proc6)=..
find.mnem G:370 LG com/z80asm.b[3400]
    mnemproc:=find.mnem(@lab,4,macroproc,...)
find.mnem G:370 LG com/z80asm.b[3621]
    mnemproc:=find.mnem(@lab,4,endproc,...)
findappend G:130 DEF libhdr.h[167] findappend=130
findarg G:104 DEF libhdr.h[141] findarg=104
findasmin G:389 DEF com/z80asm.b[233] findasmin=ug+189
findasmin G:389 FN com/z80asm.b[5354] LET findasmin(file.name)=..
findasmin G:389 LG com/z80asm.b[4319] pass.first:=findasmin(file)
findasmin G:389 LG com/z80asm.b[4320]
    pass.second:=pass.first=0->0,findasmin(file)
findentry F:77 FN com/z80asm.b[886] LET findentry(string)=..
findentry F:77 LF com/z80asm.b[1016] findentry(string)
findentry F:77 LF com/z80asm.b[1113] findentry(s)
findentry F:77 LF com/z80asm.b[1144] !findentry(s)
findentry F:77 LF com/z80asm.b[964] !findentry(s)
findgetin G:390 DEF com/z80asm.b[234] findgetin=ug+190
findgetin G:390 FN com/z80asm.b[5363] LET findgetin(file.name)=..
findgetin G:390 LG com/z80asm.b[5162]
    findgetin(item.info%0=0->fromfile,item.info)
findinoutput G:50 DEF libhdr.h[86] findinoutput=50
findinput G:48 DEF libhdr.h[84] findinput=48
findinput G:48 LG com/z80asm.b[5355] findinput(file.name)
findinput G:48 LG com/z80asm.b[5364] findinput(file.name)
findinput G:48 LG com/z80asm.b[5376] ans:=findinput(file.name)
findoutput G:49 DEF libhdr.h[85] findoutput=49
findoutput G:49 LG com/z80asm.b[5468] binfile:=findoutput(args!1)
findoutput G:49 LG com/z80asm.b[5469]
    listfile:=outfile=0->output(),findoutput(outfile)
findstream G:52 DEF libhdr.h[88] findstream=52
findupdate G:51 DEF libhdr.h[87] findupdate=51
finishpass G:291 DEF com/z80asm.b[119] finishpass=ug+91
finishpass G:291 LG com/z80asm.b[2396]
    TEST pass=first&~finishpass THEN .. ELSE ..
finishpass G:291 LG com/z80asm.b[2423] IF finishpass DO ..
finishpass G:291 LG com/z80asm.b[3467]
    .. REPEATUNTIL item.type=i.end|fatal|i~=n&mnem~=null|finishpass
finishpass G:291 LG com/z80asm.b[4336]
    .. REPEATUNTIL item.type=i.end|finishpass|fatal
finishpass G:291 LG com/z80asm.b[4480] finishpass:=finishpass|fatal
finishpass G:291 LG com/z80asm.b[5175]
    .. REPEATUNTIL item.type=i.end|finishpass|fatal
finishpass G:291 SG com/z80asm.b[2384] finishpass:=TRUE
finishpass G:291 SG com/z80asm.b[4315] finishpass:=FALSE
finishpass G:291 SG com/z80asm.b[4434] finishpass:=FALSE
finishpass G:291 SG com/z80asm.b[4480] finishpass:=finishpass|fatal
finishpass G:291 SG com/z80asm.b[4999] finishpass:=TRUE
finishpass G:291 SG com/z80asm.b[5180] finishpass:=fatal
fiproc G:263 DEF com/z80asm.b[88] fiproc=ug+63
fiproc G:263 LG com/z80asm.b[3621]
    mnemproc:=find.mnem(@lab,4,endproc,...)
fiproc G:263 LG com/z80asm.b[3628] depth:=depth+(mnemproc=fiproc->-1,1)
fiproc G:263 LG com/z80asm.b[6954] code.put("ENDIF",fiproc,0)
fiproc G:263 RT com/z80asm.b[3607] LET fiproc(lab)BE..
first M:-1 DEF com/z80asm.b[297] first=TRUE
first M:-1 MAN com/z80asm.b[1114] pass=first
first M:-1 MAN com/z80asm.b[1156] IF pass=first DO ..
first M:-1 MAN com/z80asm.b[1713] UNLESS binfile=0|pass=first DO ..
first M:-1 MAN com/z80asm.b[2396]
    TEST pass=first&~finishpass THEN .. ELSE ..
first M:-1 MAN com/z80asm.b[2408] TEST pass=first THEN .. ELSE ..
first M:-1 MAN com/z80asm.b[3218] IF pass=first DO ..
first M:-1 MAN com/z80asm.b[3222] IF pass=first DO ..
first M:-1 MAN com/z80asm.b[3227] IF pass=first DO ..
first M:-1 MAN com/z80asm.b[3245]
    text.size:=read.macro.body(macro,pass=first)
first M:-1 MAN com/z80asm.b[3247] IF pass=first DO ..
first M:-1 MAN com/z80asm.b[3330] TEST pass=first THEN .. ELSE ..
first M:-1 MAN com/z80asm.b[4318] pass:=first
first M:-1 MAN com/z80asm.b[4343]
    endmissing:=pass=first&item.type=i.end&had.text
first M:-1 MAN com/z80asm.b[4375] TEST pass=first THEN .. ELSE ..
first M:-1 MAN com/z80asm.b[4405] pass:=first
first M:-1 MAN com/z80asm.b[4476]
    writef("****** B'tion %N*n",name,pass=first->"first","second",sectno)
first M:-1 MAN com/z80asm.b[4557] IF pass=first DO ..
first M:-1 MAN com/z80asm.b[4920] TEST pass=first THEN .. ELSE ..
first M:-1 MAN com/z80asm.b[4982] IF pass=first DO ..
first.file M:2 DEF com/z80asm.b[2880] first.file=2
first.file M:2 MAN com/z80asm.b[2909]
    RESULTIS files!no.of.files-first.file+1
first.file M:2 MAN com/z80asm.b[2914] files!(fno+first.file-1)!1:=lineno
first.file M:2 MAN com/z80asm.b[2919]
    FOR i=first.file TO files!no.of.files DO..
first.file M:2 MAN com/z80asm.b[2922]
    writef("file ' lines)*n",i-first.file+1,files!i+2,files!i!1-files!i!0)
first.file M:2 MAN com/z80asm.b[2928] files!no.of.files:=first.file-1
first.file M:2 MAN com/z80asm.b[2936] first.file
first.file M:2 MAN com/z80asm.b[2943]
    WHILE i>=first.file&!lv.line>files!i!1 DO ..
first.file M:2 MAN com/z80asm.b[2951]
    TEST i=first.file-1 THEN .. ELSE ..
first.file M:2 MAN com/z80asm.b[2953] RESULTIS i-first.file+1
first.line M:1 DEF com/z80asm.b[2879] first.line=1
first.line M:1 MAN com/z80asm.b[2929] files!first.line:=to.line
first.line M:1 MAN com/z80asm.b[2951]
    !lv.line:=!lv.line+files!first.line
first.valid S:292 DEF com/z80asm.b[1723] first.valid=FALSE
first.valid S:292 LL com/z80asm.b[1795]
    IF hex!0>0|(s1=s2->s1*(arg-oldpc),s2)<0|first.valid DO ..
first.valid S:292 SL com/z80asm.b[1797] first.valid:=FALSE
first.valid S:292 SL com/z80asm.b[1798] first.valid:=TRUE
fitsmask G:338 DEF com/z80asm.b[171] fitsmask=ug+138
fitsmask G:338 FN com/z80asm.b[1616] LET fitsmask(n,m)=..
fitsmask G:338 LG com/z80asm.b[1631] UNLESS fitsmask(n,m) DO ..
fitsmask G:338 LG com/z80asm.b[2987] UNLESS fitsmask(no,m) DO ..
fl_64to32 M:45 DEF libhdr.h[577] fl_64to32=
fl_F2N M:42 DEF libhdr.h[574] fl_F2N=
fl_N2F M:41 DEF libhdr.h[573] fl_N2F=
fl_abs M:5 DEF libhdr.h[544] fl_abs=
fl_acos M:20 DEF libhdr.h[549] fl_acos=20
fl_add M:9 DEF libhdr.h[546] fl_add=
fl_asin M:21 DEF libhdr.h[550] fl_asin=
fl_atan M:22 DEF libhdr.h[551] fl_atan=
fl_atan2 M:23 DEF libhdr.h[552] fl_atan2=
fl_avail M:0 DEF libhdr.h[542] fl_avail=0
fl_ceil M:38 DEF libhdr.h[567] fl_ceil=
fl_cos M:24 DEF libhdr.h[553] fl_cos=
fl_cosh M:27 DEF libhdr.h[556] fl_cosh=
fl_div M:7 DEF libhdr.h[545] fl_div=
fl_eq M:13 DEF libhdr.h[547] fl_eq=
fl_exp M:30 DEF libhdr.h[559] fl_exp=
fl_fix M:4 DEF libhdr.h[544] fl_fix=
fl_float M:3 DEF libhdr.h[544] fl_float=
fl_floor M:39 DEF libhdr.h[568] fl_floor=
fl_frexp M:31 DEF libhdr.h[560] fl_frexp=
fl_ge M:18 DEF libhdr.h[547] fl_ge=
fl_gr M:16 DEF libhdr.h[547] fl_gr=
fl_ldexp M:32 DEF libhdr.h[561] fl_ldexp=
fl_le M:17 DEF libhdr.h[547] fl_le=
fl_log M:33 DEF libhdr.h[562] fl_log=
fl_log10 M:34 DEF libhdr.h[563] fl_log10=
fl_ls M:15 DEF libhdr.h[547] fl_ls=
fl_mk M:1 DEF libhdr.h[543] fl_mk=
fl_mod M:8 DEF libhdr.h[545] fl_mod=
fl_modf M:40 DEF libhdr.h[569] fl_modf=
fl_mul M:6 DEF libhdr.h[545] fl_mul=
fl_ne M:14 DEF libhdr.h[547] fl_ne=
fl_neg M:12 DEF libhdr.h[546] fl_neg=
fl_pos M:11 DEF libhdr.h[546] fl_pos=
fl_pow M:36 DEF libhdr.h[565] fl_pow=36
fl_radius2 M:43 DEF libhdr.h[575] fl_radius2=
fl_radius3 M:44 DEF libhdr.h[576] fl_radius3=
fl_sin M:25 DEF libhdr.h[554] fl_sin=
fl_sinh M:28 DEF libhdr.h[557] fl_sinh=
fl_sqrt M:37 DEF libhdr.h[566] fl_sqrt=
fl_sub M:10 DEF libhdr.h[546] fl_sub=
fl_tan M:26 DEF libhdr.h[555] fl_tan=
fl_tanh M:29 DEF libhdr.h[558] fl_tanh=
fl_unmk M:2 DEF libhdr.h[543] fl_unmk=
flag.def M:1024 DEF com/z80asm.b[378] flag.def=bit10
flag.def M:1024 MAN com/z80asm.b[1051] IF (ty&flag.def)~=0 DO ..
flag.def M:1024 MAN com/z80asm.b[1059]
    t!t.type:=symty=type.ref->type.def,t!t.type|flag.def
flag.def M:1024 MAN com/z80asm.b[1094]
    t!t.type:=ty|t!t.type&(flag.double|flag.def)
flag.def M:1024 MAN com/z80asm.b[1300]
    wrch((typecode&flag.def)~=0->68,(typecode&flag.weak)~=0->87,32)
flag.def M:1024 MAN com/z80asm.b[1303]
    TEST (typecode&flag.def)=0 THEN .. ELSE ..
flag.def M:1024 MAN com/z80asm.b[1420]
    IF (typecode&flag.def)=flag.def&(typecode&type.mask)~=type.none DO ..
flag.def M:1024 MAN com/z80asm.b[383] type.def=type.none|flag.def
flag.def M:1024 MAN com/z80asm.b[4559]
    putlab(lab,pc,(mode=absolute->type.lab,type.rellab)|(def.count>0->flag.def,0))
flag.double M:256 DEF com/z80asm.b[376] flag.double=bit8
flag.double M:256 MAN com/z80asm.b[1046]
    TEST pass=second&(t!t.type&flag.double)~=0 THEN .. ELSE ..
flag.double M:256 MAN com/z80asm.b[1054] t!t.type:=t!t.type|flag.double
flag.double M:256 MAN com/z80asm.b[1094]
    t!t.type:=ty|t!t.type&(flag.double|flag.def)
flag.double M:256 MAN com/z80asm.b[1099] t!t.type:=t!t.type|flag.double
flag.double M:256 MAN com/z80asm.b[1252]
    IF allsyms|file.number(@line.no)=0|(t.type!entry&flag.double)~=0 DO ..
flag.double M:256 MAN com/z80asm.b[1289]
    IF allsyms|file.no=0|(typecode&flag.double)~=0 DO ..
flag.double M:256 MAN com/z80asm.b[1298]
    wrch((typecode&flag.double)=0->32,42)
flag.double M:256 MAN com/z80asm.b[1413]
    IF (typecode&flag.double)~=0 DO ..
flag.double M:256 MAN com/z80asm.b[989]
    ansvec!1:=ans!t.type&~flag.double
flag.fwd M:2048 DEF com/z80asm.b[379] flag.fwd=bit11
flag.fwd M:2048 MAN com/z80asm.b[4955]
    putlab(lab,spec!0,dontknow&flag.fwd|(spec!1=0->type.const,type.relconst))
flag.fwd M:2048 MAN com/z80asm.b[967]
    IF t=null|rel.pos>=0|symty=type.ref|symty=type.none|(t!t.type&flag.fwd)~=0 DO ..
flag.fwd M:2048 MAN com/z80asm.b[971]
    iden.valid:=~(t=null->pass=second,...~=0&rel.pos>=0)
flag.needs M:4096 DEF com/z80asm.b[380] flag.needs=bit12
flag.needs M:4096 MAN com/z80asm.b[1074]
    TEST (ty&type.mask)=type.ref&(pass=second|(ty&flag.needs)~=0) THEN .. ELSE ..
flag.needs M:4096 MAN com/z80asm.b[1078]
    TEST (ty&flag.needs)=0 THEN .. ELSE ..
flag.needs M:4096 MAN com/z80asm.b[1079] t!t.type:=t!t.type|flag.needs
flag.needs M:4096 MAN com/z80asm.b[1415]
    IF (typecode&flag.needs)~=0|value~=65535 DO ..
flag.needs M:4096 MAN com/z80asm.b[5081]
    putlab(item.info,65535,type.ref|flag.needs)
flag.rel M:512 DEF com/z80asm.b[377] flag.rel=bit9
flag.rel M:512 MAN com/z80asm.b[1299] wrch((typecode&flag.rel)=0->32,82)
flag.rel M:512 MAN com/z80asm.b[1302] rels:=rels|(typecode&flag.rel)~=0
flag.rel M:512 MAN com/z80asm.b[1422]
    TEST (typecode&flag.rel)=0&mode=relative THEN .. ELSE ..
flag.rel M:512 MAN com/z80asm.b[385] type.rellab=type.lab|flag.rel
flag.rel M:512 MAN com/z80asm.b[386] type.relvar=type.var|flag.rel
flag.rel M:512 MAN com/z80asm.b[387] type.relconst=type.const|flag.rel
flag.rel M:512 MAN com/z80asm.b[4782]
    TEST (ansvec!1&flag.rel)~=0 THEN .. ELSE ..
flag.temp M:16384 DEF com/z80asm.b[382] flag.temp=bit14
flag.temp M:16384 MAN com/z80asm.b[1033]
    IF pass=second&(ty&flag.temp)=0 DO ..
flag.temp M:16384 MAN com/z80asm.b[1038]
    TEST pass=second&(ty&flag.temp)=0 THEN .. ELSE ..
flag.temp M:16384 MAN com/z80asm.b[2843]
    forward:=putlab(local+1,parm.value,type.text|flag.temp)
flag.weak M:8192 DEF com/z80asm.b[381] flag.weak=bit13
flag.weak M:8192 MAN com/z80asm.b[1300]
    wrch((typecode&flag.def)~=0->68,(typecode&flag.weak)~=0->87,32)
flag.weak M:8192 MAN com/z80asm.b[1304] IF (typecode&flag.weak)~=0 DO ..
flag.weak M:8192 MAN com/z80asm.b[1417]
    code.gen((typecode&flag.weak)=0->cd.ext,cd.wext,string,value)
flag.weak M:8192 MAN com/z80asm.b[384] type.wref=type.ref|flag.weak
flag_a M:1 DEF libhdr.h[702] flag_a=1<<0
flag_b M:2 DEF libhdr.h[703] flag_b=1<<1
flag_c M:4 DEF libhdr.h[704] flag_c=1<<2
flag_d M:8 DEF libhdr.h[705] flag_d=1<<3
flag_e M:16 DEF libhdr.h[706] flag_e=1<<4
fmt0 G:405 DEF com/z80asm.b[264] fmt0=
fmt0 G:405 LG com/z80asm.b[6960] code.put("EXX",fmt0,1,217)
fmt0 G:405 LG com/z80asm.b[6961] code.put("DAA",fmt0,1,39)
fmt0 G:405 LG com/z80asm.b[6962] code.put("CPL",fmt0,1,47)
fmt0 G:405 LG com/z80asm.b[6963] code.put("CCF",fmt0,1,63)
fmt0 G:405 LG com/z80asm.b[6964] code.put("SCF",fmt0,1,55)
fmt0 G:405 LG com/z80asm.b[6965] code.put("NOP",fmt0,1,0)
fmt0 G:405 LG com/z80asm.b[6966] code.put("HALT",fmt0,1,118)
fmt0 G:405 LG com/z80asm.b[6967] code.put("DI",fmt0,1,243)
fmt0 G:405 LG com/z80asm.b[6968] code.put("EI",fmt0,1,251)
fmt0 G:405 LG com/z80asm.b[6969] code.put("RLA",fmt0,1,23)
fmt0 G:405 LG com/z80asm.b[6970] code.put("RLCA",fmt0,1,7)
fmt0 G:405 LG com/z80asm.b[6971] code.put("RRA",fmt0,1,31)
fmt0 G:405 LG com/z80asm.b[6972] code.put("RRCA",fmt0,1,15)
fmt0 G:405 LG com/z80asm.b[6973] code.put("LDI",fmt0,2,237,160)
fmt0 G:405 LG com/z80asm.b[6974] code.put("LDIR",fmt0,2,237,176)
fmt0 G:405 LG com/z80asm.b[6975] code.put("LDD",fmt0,2,237,168)
fmt0 G:405 LG com/z80asm.b[6976] code.put("LDDR",fmt0,2,237,184)
fmt0 G:405 LG com/z80asm.b[6977] code.put("CPI",fmt0,2,237,161)
fmt0 G:405 LG com/z80asm.b[6978] code.put("CPIR",fmt0,2,237,177)
fmt0 G:405 LG com/z80asm.b[6979] code.put("CPD",fmt0,2,237,169)
fmt0 G:405 LG com/z80asm.b[6980] code.put("CPDR",fmt0,2,237,185)
fmt0 G:405 LG com/z80asm.b[6981] code.put("NEG",fmt0,2,237,68)
fmt0 G:405 LG com/z80asm.b[6982] code.put("INI",fmt0,2,237,162)
fmt0 G:405 LG com/z80asm.b[6983] code.put("INIR",fmt0,2,237,178)
fmt0 G:405 LG com/z80asm.b[6984] code.put("IND",fmt0,2,237,170)
fmt0 G:405 LG com/z80asm.b[6985] code.put("INDR",fmt0,2,237,186)
fmt0 G:405 LG com/z80asm.b[6986] code.put("OUTI",fmt0,2,237,163)
fmt0 G:405 LG com/z80asm.b[6987] code.put("OTIR",fmt0,2,237,179)
fmt0 G:405 LG com/z80asm.b[6988] code.put("OUTD",fmt0,2,237,171)
fmt0 G:405 LG com/z80asm.b[6989] code.put("OTDR",fmt0,2,237,187)
fmt0 G:405 LG com/z80asm.b[6990] code.put("RETI",fmt0,2,237,77)
fmt0 G:405 LG com/z80asm.b[6991] code.put("RETN",fmt0,2,237,69)
fmt0 G:405 LG com/z80asm.b[6992] code.put("RLD",fmt0,2,237,111)
fmt0 G:405 LG com/z80asm.b[6993] code.put("RRD",fmt0,2,237,103)
fmt0 G:405 RT com/z80asm.b[6002] LET fmt0(lab)BE..
fmt1 G:406 DEF com/z80asm.b[265] fmt1=
fmt1 G:406 LG com/z80asm.b[6994] code.put("LD",fmt1,0)
fmt1 G:406 RT com/z80asm.b[6007] LET fmt1(lab)BE..
fmt10 F:1512 LF com/z80asm.b[7018] code.put("RST",fmt10,1,199)
fmt10 F:1512 RT com/z80asm.b[6449] LET fmt10(lab)BE..
fmt11 F:1513 LF com/z80asm.b[7019] code.put("INC",fmt11,-1,4)
fmt11 F:1513 LF com/z80asm.b[7020] code.put("DEC",fmt11,-1,5)
fmt11 F:1513 RT com/z80asm.b[6458] LET fmt11(lab,info)BE..
fmt12 F:1514 LF com/z80asm.b[7021] code.put("EX",fmt12,0)
fmt12 F:1514 RT com/z80asm.b[6477] LET fmt12(lab)BE..
fmt13 F:1515 LF com/z80asm.b[7022] code.put("PUSH",fmt13,-1,5)
fmt13 F:1515 LF com/z80asm.b[7023] code.put("POP",fmt13,-1,1)
fmt13 F:1515 RT com/z80asm.b[6512] LET fmt13(lab,info)BE..
fmt14 F:1539 LF com/z80asm.b[7024] code.put("IN",fmt14,0)
fmt14 F:1539 RT com/z80asm.b[6659] LET fmt14(lab)BE..
fmt15 F:1540 LF com/z80asm.b[7025] code.put("OUT",fmt15,0)
fmt15 F:1540 RT com/z80asm.b[6687] LET fmt15(lab)BE..
fmt16 F:1541 LF com/z80asm.b[7026] code.put("IM",fmt16,1,237)
fmt16 F:1541 RT com/z80asm.b[6713] LET fmt16(lab)BE..
fmt2 G:407 DEF com/z80asm.b[266] fmt2=
fmt2 G:407 LG com/z80asm.b[6995] code.put("ADD",fmt2,-1,0)
fmt2 G:407 LG com/z80asm.b[6996] code.put("ADC",fmt2,-1,1)
fmt2 G:407 LG com/z80asm.b[6997] code.put("SUB",fmt2,-1,2)
fmt2 G:407 LG com/z80asm.b[6998] code.put("SBC",fmt2,-1,3)
fmt2 G:407 LG com/z80asm.b[6999] code.put("AND",fmt2,-1,4)
fmt2 G:407 LG com/z80asm.b[7000] code.put("XOR",fmt2,-1,5)
fmt2 G:407 LG com/z80asm.b[7001] code.put("OR",fmt2,-1,6)
fmt2 G:407 LG com/z80asm.b[7002] code.put("CP",fmt2,-1,7)
fmt2 G:407 RT com/z80asm.b[6142] LET fmt2(lab,info)BE..
fmt3 G:408 DEF com/z80asm.b[267] fmt3=
fmt3 G:408 LG com/z80asm.b[7003] code.put("RLC",fmt3,-1,0)
fmt3 G:408 LG com/z80asm.b[7004] code.put("RRC",fmt3,-1,1)
fmt3 G:408 LG com/z80asm.b[7005] code.put("RL",fmt3,-1,2)
fmt3 G:408 LG com/z80asm.b[7006] code.put("RR",fmt3,-1,3)
fmt3 G:408 LG com/z80asm.b[7007] code.put("SLA",fmt3,-1,4)
fmt3 G:408 LG com/z80asm.b[7008] code.put("SRA",fmt3,-1,5)
fmt3 G:408 LG com/z80asm.b[7009] code.put("SRL",fmt3,-1,7)
fmt3 G:408 RT com/z80asm.b[6196] LET fmt3(lab,info)BE..
fmt4 G:409 DEF com/z80asm.b[268] fmt4=
fmt4 G:409 LG com/z80asm.b[7010] code.put("BIT",fmt4,-1,1)
fmt4 G:409 LG com/z80asm.b[7011] code.put("SET",fmt4,-1,3)
fmt4 G:409 LG com/z80asm.b[7012] code.put("RES",fmt4,-1,2)
fmt4 G:409 RT com/z80asm.b[6208] LET fmt4(lab,info)BE..
fmt5 G:410 DEF com/z80asm.b[269] fmt5=
fmt5 G:410 LG com/z80asm.b[7013] code.put("JP",fmt5,0)
fmt5 G:410 RT com/z80asm.b[6344] LET fmt5(lab)BE..
fmt6 G:411 DEF com/z80asm.b[270] fmt6=
fmt6 G:411 LG com/z80asm.b[7014] code.put("CALL",fmt6,0)
fmt6 G:411 RT com/z80asm.b[6369] LET fmt6(lab)BE..
fmt7 G:412 DEF com/z80asm.b[271] fmt7=
fmt7 G:412 LG com/z80asm.b[7015] code.put("RET",fmt7,0)
fmt7 G:412 RT com/z80asm.b[6386] LET fmt7(lab)BE..
fmt8 G:413 DEF com/z80asm.b[272] fmt8=
fmt8 G:413 LG com/z80asm.b[7016] code.put("JR",fmt8,0)
fmt8 G:413 RT com/z80asm.b[6413] LET fmt8(lab)BE..
fmt9 G:414 DEF com/z80asm.b[273] fmt9=
fmt9 G:414 LG com/z80asm.b[7017] code.put("DJNZ",fmt9,1,16)
fmt9 G:414 RT com/z80asm.b[6440] LET fmt9(lab)BE..
fn.bit M:0 DEF com/z80asm.b[501] fn.bit=0
fn.bit M:0 MAN com/z80asm.b[5797] IF fntype=fn.bit DO ..
fn.bit M:0 MAN com/z80asm.b[5803] IF fntype=fn.bit DO ..
fn.bit M:0 MAN com/z80asm.b[5809] TEST fntype=fn.bit THEN .. ELSE ..
fn.bit M:0 MAN com/z80asm.b[5835] IF fntype=fn.bit DO ..
fn.bit M:0 MAN com/z80asm.b[6200]
    UNLESS getrorind(shel,f.dest,fn.bit) DO ..
fn.bit M:0 MAN com/z80asm.b[6214]
    UNLESS getrorind(shel,f.dest,fn.bit) DO ..
fn.normal M:1 DEF com/z80asm.b[502] fn.normal=1
fn.normal M:1 MAN com/z80asm.b[6020] UNLESS getind(126,fn.normal) DO ..
fn.normal M:1 MAN com/z80asm.b[6046]
    UNLESS getrorind(shel,f.dest,fn.normal) DO ..
fn.normal M:1 MAN com/z80asm.b[6160]
    UNLESS getrorind(putf(info,f.source,sheli),f.dest,fn.normal) DO ..
fn.normal M:1 MAN com/z80asm.b[6462]
    UNLESS getrorind(shel,f.source,fn.normal) DO ..
freeobj G:78 DEF libhdr.h[114] freeobj=78
freeobj G:78 LG com/z80asm.b[5377] freeobj(newdir)
freetype G:207 DEF com/z80asm.b[23] freetype=ug+7
freetype G:207 LG com/z80asm.b[1198] freetype(ty,val)
freetype G:207 RT com/z80asm.b[1203] LET freetype(ty,val)BE..
freevec G:27 DEF libhdr.h[63] freevec=27
freevec G:27 LG com/z80asm.b[5344] freevec(vect)
freevec G:27 LG com/z80asm.b[5520] freevec(memory)
freevec G:27 LG com/z80asm.b[5523] freevec(args)
fromfile G:380 DEF com/z80asm.b[222] fromfile=ug+180
fromfile G:380 LG com/z80asm.b[5162]
    findgetin(item.info%0=0->fromfile,item.info)
fromfile G:380 LG com/z80asm.b[5169]
    newfile(item.info%0=0->fromfile,item.info)
fromfile G:380 LG com/z80asm.b[5493] parse(fromfile)
fromfile G:380 SG com/z80asm.b[5466] fromfile:=args!0
g_colist M:8 DEF libhdr.h[272] g_colist=8
g_currco M:7 DEF libhdr.h[271] g_currco=7
g_extbase M:950 DEF libhdr.h[720] g_extbase=950
g_glbase M:450 DEF libhdr.h[718] g_glbase=450
g_globsize M:0 DEF libhdr.h[269] g_globsize=0
g_grbase M:450 DEF libhdr.h[716] g_grbase=450
g_keyboard M:20 DEF libhdr.h[276] g_keyboard=20
g_memsize M:14 DEF libhdr.h[275] g_memsize=14
g_rootnode M:9 DEF libhdr.h[273] g_rootnode=9
g_screen M:21 DEF libhdr.h[277] g_screen=21
g_sdlbase M:450 DEF libhdr.h[717] g_sdlbase=450
g_sndbase M:450 DEF libhdr.h[719] g_sndbase=450
g_sys M:3 DEF libhdr.h[270] g_sys=3
gen.defs G:214 DEF com/z80asm.b[30] gen.defs=ug+14
gen.defs G:214 LG com/z80asm.b[4403] gen.defs()
gen.defs G:214 RT com/z80asm.b[1402] LET gen.defs()BE..
gen.label F:644 FN com/z80asm.b[3323] LET gen.label()=..
gen.label F:644 LF com/z80asm.b[3349]
    stacktext(macro.stack,item.info,gen.label())
get.and.declare G:288 DEF com/z80asm.b[116] get.and.declare=ug+88
get.and.declare G:288 LG com/z80asm.b[3179] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[3270] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[3278] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[3314] get.and.declare(label)
get.and.declare G:288 LG com/z80asm.b[3345] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[3363] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[3539] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[3591] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[3608] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[4521] get.and.declare(!lv.lab)
get.and.declare G:288 LG com/z80asm.b[4525] get.and.declare(!lv.lab)
get.and.declare G:288 LG com/z80asm.b[4888] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[4989] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[5006] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[5019] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[5052] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[5078] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[5099] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[5126] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[5139] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[5151] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[5159] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[5866] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6002] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6012] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6151] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6199] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6211] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6347] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6373] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6389] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6403] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6416] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6441] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6450] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6460] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6478] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6515] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6663] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6690] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6714] get.and.declare(lab)
get.and.declare G:288 LG com/z80asm.b[6728] get.and.declare(lab)
get.and.declare G:288 RT com/z80asm.b[4551] LET get.and.declare(lab)BE..
get.time G:388 DEF com/z80asm.b[232] get.time=ug+188
get.time G:388 FN com/z80asm.b[5383] LET get.time(vect,n)=..
get.time G:388 LG com/z80asm.b[2630] dat:=get.time(dat,10)
get.time G:388 LG com/z80asm.b[4384]
    code.gen(cd.prag,get.time(stamp,15),"DAT-A")
get_record G:71 DEF libhdr.h[107] get_record=71
get_text G:93 DEF libhdr.h[130] get_text=93
get_textblib G:93 DEF libhdr.h[129] get_textblib=93
getargs F:1276 FN com/z80asm.b[5340] LET getargs(startarg)=..
getargs F:1276 LF com/z80asm.b[5460] args:=getargs(startarg)
getcode G:329 DEF com/z80asm.b[162] getcode=ug+129
getcode G:329 FN com/z80asm.b[3094] LET getcode(s)=..
getcode G:329 LG com/z80asm.b[4541] mnem:=getcode(item.info)
geterror G:268 DEF com/z80asm.b[95] geterror=ug+68
geterror G:268 FN com/z80asm.b[653] LET geterror(rc)=..
geterror G:268 LG com/z80asm.b[2400] geterror(arg1)
getf G:334 DEF com/z80asm.b[167] getf=ug+134
getf G:334 FN com/z80asm.b[2975] LET getf(no,field)=..
getf G:334 LG com/z80asm.b[5837] putwordf(getf(r,f.rinfo),rfield)
getf G:334 LG com/z80asm.b[6039] putwordf(getf(r,f.rinfo),f.dest)
getf G:334 LG com/z80asm.b[6044] putf(getf(r,f.rinfo),f.source,70)
getf G:334 LG com/z80asm.b[6048] putwordf(getf(r,f.rinfo),f.source)
getf G:334 LG com/z80asm.b[6056] putwordf(getf(r,f.rinfo),f.source)
getf G:334 LG com/z80asm.b[6075] putwordf(getf(r,f.ddinfo),f.ddsource)
getf G:334 LG com/z80asm.b[6101] putwordf(getf(r,f.ddinfo),f.ddsource)
getf G:334 LG com/z80asm.b[6129] putwordf(getf(s,f.rinfo),f.dest)
getf G:334 LG com/z80asm.b[6186]
    putwordf(getf(addopreg,f.ddinfo),f.ddsource)
getf G:334 LG com/z80asm.b[6359] putwordf(getf(cc,f.ccinfo),f.source)
getf G:334 LG com/z80asm.b[6378] putwordf(getf(cc,f.ccinfo),f.source)
getf G:334 LG com/z80asm.b[6394] putwordf(getf(cc,f.ccinfo),f.source)
getf G:334 LG com/z80asm.b[6402] getf(ccsym,f.ccinfo)
getf G:334 LG com/z80asm.b[6471] putwordf(getf(r,f.ddinfo),f.ddsource)
getf G:334 LG com/z80asm.b[6523] putwordf(getf(dd,f.ddinfo),f.ddsource)
getf G:334 LG com/z80asm.b[6669] r:=getf(reg,f.rinfo)
getf G:334 LG com/z80asm.b[6699] putwordf(getf(r,f.rinfo),f.source)
getind G:401 DEF com/z80asm.b[260] getind=
getind G:401 FN com/z80asm.b[5794] LET getind(shel,fntype)=..
getind G:401 LG com/z80asm.b[5841] IF getind(shel,fntype) DO ..
getind G:401 LG com/z80asm.b[6020] UNLESS getind(126,fn.normal) DO ..
getitem G:280 DEF com/z80asm.b[108] getitem=ug+80
getitem G:280 FN com/z80asm.b[4036] LET getitem()=..
getitem G:280 LG com/z80asm.b[3213] getitem()
getitem G:280 LG com/z80asm.b[3224] getitem()
getitem G:280 LG com/z80asm.b[3229] getitem()
getitem G:280 LG com/z80asm.b[3351] getitem()
getitem G:280 LG com/z80asm.b[3544] getitem()
getitem G:280 LG com/z80asm.b[3551] getitem()
getitem G:280 LG com/z80asm.b[3631] getitem()
getitem G:280 LG com/z80asm.b[3713] getitem()
getitem G:280 LG com/z80asm.b[3733] getitem()
getitem G:280 LG com/z80asm.b[3757] getitem()
getitem G:280 LG com/z80asm.b[4231] getitem()
getitem G:280 LG com/z80asm.b[4237] getitem()
getitem G:280 LG com/z80asm.b[4500] getitem()
getitem G:280 LG com/z80asm.b[4514] getitem()
getitem G:280 LG com/z80asm.b[4563] getitem()
getitem G:280 LG com/z80asm.b[4678] getitem()
getitem G:280 LG com/z80asm.b[4699] getitem()
getitem G:280 LG com/z80asm.b[4717] getitem()
getitem G:280 LG com/z80asm.b[4765] getitem()
getitem G:280 LG com/z80asm.b[4795] getitem()
getitem G:280 LG com/z80asm.b[4801] getitem()
getitem G:280 LG com/z80asm.b[4807] getitem()
getitem G:280 LG com/z80asm.b[4813] getitem()
getitem G:280 LG com/z80asm.b[4827] getitem()
getitem G:280 LG com/z80asm.b[4903] getitem()
getitem G:280 LG com/z80asm.b[4919] getitem()
getitem G:280 LG com/z80asm.b[4943] getitem()
getitem G:280 LG com/z80asm.b[4950] getitem()
getitem G:280 LG com/z80asm.b[4964] getitem()
getitem G:280 LG com/z80asm.b[4972] getitem()
getitem G:280 LG com/z80asm.b[4979] getitem()
getitem G:280 LG com/z80asm.b[4983] getitem()
getitem G:280 LG com/z80asm.b[5036] getitem()
getitem G:280 LG com/z80asm.b[5046] getitem()
getitem G:280 LG com/z80asm.b[5056] getitem()
getitem G:280 LG com/z80asm.b[5090] getitem()
getitem G:280 LG com/z80asm.b[5103] getitem()
getitem G:280 LG com/z80asm.b[5116] getitem()
getitem G:280 LG com/z80asm.b[5119] getitem()
getitem G:280 LG com/z80asm.b[5769] getitem()
getitem G:280 LG com/z80asm.b[5788] getitem()
getitem G:280 LG com/z80asm.b[5806] getitem()
getitem G:280 LG com/z80asm.b[5856] getitem()
getitem G:280 LG com/z80asm.b[6500] getitem()
getixyhl G:403 DEF com/z80asm.b[262] getixyhl=
getixyhl G:403 FN com/z80asm.b[5848] LET getixyhl(shel)=..
getixyhl G:403 LG com/z80asm.b[6349] UNLESS getixyhl(233) DO ..
getixyhl G:403 LG com/z80asm.b[6484] UNLESS getixyhl(227) DO ..
getlab G:201 DEF com/z80asm.b[17] getlab=ug+1
getlab G:201 FN com/z80asm.b[979] LET getlab(s,ansvec)=..
getlab G:201 LG com/z80asm.b[4769]
    UNLESS getlab(item.info,ansvec)=null DO ..
getlogname G:118 DEF libhdr.h[155] getlogname=118
getproc G:306 DEF com/z80asm.b[136] getproc=ug+106
getproc G:306 LG com/z80asm.b[6931] code.put("GET",getproc,0)
getproc G:306 RT com/z80asm.b[5158] LET getproc(lab)BE..
getreg G:332 DEF com/z80asm.b[165] getreg=ug+132
getreg G:332 FN com/z80asm.b[3131] LET getreg(s)=..
getreg G:332 LG com/z80asm.b[5766] getreg(item.info)
getreg G:332 LG com/z80asm.b[5787] UNLESS reg=getreg(item.info) DO ..
getreg G:332 LG com/z80asm.b[5850] getreg(item.info)
getreg G:332 LG com/z80asm.b[6494]
    UNLESS item.type=i.iden&r.af=getreg(item.info) DO ..
getremipaddr G:54 DEF libhdr.h[90] getremipaddr=54
getrorind G:402 DEF com/z80asm.b[261] getrorind=
getrorind G:402 FN com/z80asm.b[5826]
    LET getrorind(shel,rfield,fntype)=..
getrorind G:402 LG com/z80asm.b[6046]
    UNLESS getrorind(shel,f.dest,fn.normal) DO ..
getrorind G:402 LG com/z80asm.b[6160]
    UNLESS getrorind(putf(info,f.source,sheli),f.dest,fn.normal) DO ..
getrorind G:402 LG com/z80asm.b[6200]
    UNLESS getrorind(shel,f.dest,fn.bit) DO ..
getrorind G:402 LG com/z80asm.b[6214]
    UNLESS getrorind(shel,f.dest,fn.bit) DO ..
getrorind G:402 LG com/z80asm.b[6462]
    UNLESS getrorind(shel,f.source,fn.normal) DO ..
getrset G:399 DEF com/z80asm.b[258] getrset=
getrset G:399 FN com/z80asm.b[5763] LET getrset(symtype)=..
getrset G:399 LG com/z80asm.b[5795] getrset(b.ixyhl)
getrset G:399 LG com/z80asm.b[5833] getrset(b.r)
getrset G:399 LG com/z80asm.b[6013] r:=getrset(b.r|b.rori|b.dd|b.ixyhl)
getrset G:399 LG com/z80asm.b[6021] r:=getrset(b.bcde)
getrset G:399 LG com/z80asm.b[6029] r:=getrset(b.rori|b.r)
getrset G:399 LG com/z80asm.b[6061] r=r.sp->getrset(b.ixyhl),r.bad
getrset G:399 LG com/z80asm.b[6083] r:=getrset(b.ixyhl|b.bcde)
getrset G:399 LG com/z80asm.b[6092] r:=getrset(b.ixyhl|b.dd)
getrset G:399 LG com/z80asm.b[6122] getrset(b.r)
getrset G:399 LG com/z80asm.b[6154] addopreg:=getrset(b.ixyhl)
getrset G:399 LG com/z80asm.b[6183] addopreg:=getrset(regset)
getrset G:399 LG com/z80asm.b[6353] cc:=getrset(b.cc)
getrset G:399 LG com/z80asm.b[6374] cc:=getrset(b.cc)
getrset G:399 LG com/z80asm.b[6390] cc:=getrset(b.cc)
getrset G:399 LG com/z80asm.b[6417] cc:=getrset(b.cc)
getrset G:399 LG com/z80asm.b[6463] getrset(b.dd|b.ixiy)
getrset G:399 LG com/z80asm.b[6517] dd:=getrset(b.qq|b.ixiy)
getrset G:399 LG com/z80asm.b[6665] reg:=getrset(b.r)
getrset G:399 LG com/z80asm.b[6695] r:=getrset(b.r)
getstr G:325 DEF com/z80asm.b[158] getstr=ug+125
getstr G:325 FN com/z80asm.b[783] LET getstr(string,memproc)=..
getstr G:325 LG com/z80asm.b[2831] getstr(string,tempgetvec)
getstr G:325 LG com/z80asm.b[3558] arg1:=getstr(arg1,tempgetvec)
getstr G:325 LG com/z80asm.b[4926]
    pagetitle:=getstr(strexp(null,...),simplegetvec)
getstr G:325 LG com/z80asm.b[4927]
    modulename:=lab=null->pagetitle,getstr(lab,simplegetvec)
getstr G:325 LG com/z80asm.b[4982]
    putlab(lab,getstr(str,simplegetvec),type.text)
getsymb F:79 FN com/z80asm.b[963] LET getsymb(s)=..
getsymb F:79 LF com/z80asm.b[1153] getsymb(s)
getsymb F:79 LF com/z80asm.b[1170] getsymb(s)
getsymb F:79 LF com/z80asm.b[985] getsymb(s)
gettype G:210 DEF com/z80asm.b[26] gettype=ug+10
gettype G:210 FN com/z80asm.b[1167] LET gettype(ty,s)=..
getvec G:25 DEF libhdr.h[61] getvec=25
getvec G:25 LG com/z80asm.b[5341] getvec(startargsize)
getvec G:25 LG com/z80asm.b[5471] memory:=getvec(memsize)
getword G:32 DEF libhdr.h[68] getword=32
globin G:24 DEF libhdr.h[60] globin=24
globsize G:0 DEF libhdr.h[35] globsize=0
globword M:#x8F8F0000 DEF libhdr.h[262] globword=-#x70710000
got.dat S:1297 DEF com/z80asm.b[5388] got.dat=FALSE
got.dat S:1297 LL com/z80asm.b[5389] UNLESS got.dat DO ..
got.dat S:1297 SL com/z80asm.b[5395] got.dat:=TRUE
hash.chain.anchor F:78 FN com/z80asm.b[947]
    LET hash.chain.anchor(string)=..
hash.chain.anchor F:78 LF com/z80asm.b[924]
    dicposn:=hash.chain.anchor(string)-t.link
hash.table S:75 DEF com/z80asm.b[842] hash.table=0
hash.table S:75 LL com/z80asm.b[1248]
    FOR anchor=hash.table TO hash.table+hash.table.size DO..
hash.table S:75 LL com/z80asm.b[1350]
    IF hash.table!hash.table.size~=null DO ..
hash.table S:75 LL com/z80asm.b[1352]
    RESULTIS hash.table!hash.table.size
hash.table S:75 LL com/z80asm.b[1358]
    FOR anchor=hash.table TO hash.table+hash.table.size-1 DO..
hash.table S:75 LL com/z80asm.b[1379]
    t.link!entry:=hash.table!hash.table.size
hash.table S:75 LL com/z80asm.b[1380]
    hash.table!hash.table.size:=!anchor
hash.table S:75 LL com/z80asm.b[1397]
    RESULTIS hash.table!hash.table.size
hash.table S:75 LL com/z80asm.b[1406]
    FOR anchor=hash.table TO hash.table+hash.table.size DO..
hash.table S:75 LL com/z80asm.b[907] IF hash.table=0 DO ..
hash.table S:75 LL com/z80asm.b[921] hash.table!i:=null
hash.table S:75 LL com/z80asm.b[957]
    RESULTIS hash.table+(ABS hashval) MOD hash.table.size
hash.table S:75 SL com/z80asm.b[1331] hash.table:=0
hash.table S:75 SL com/z80asm.b[919]
    hash.table:=simplegetvec(hash.table.size)
hash.table.size S:76 DEF com/z80asm.b[843] hash.table.size=100
hash.table.size S:76 LL com/z80asm.b[1248]
    FOR anchor=hash.table TO hash.table+hash.table.size DO..
hash.table.size S:76 LL com/z80asm.b[1350]
    IF hash.table!hash.table.size~=null DO ..
hash.table.size S:76 LL com/z80asm.b[1352]
    RESULTIS hash.table!hash.table.size
hash.table.size S:76 LL com/z80asm.b[1358]
    FOR anchor=hash.table TO hash.table+hash.table.size-1 DO..
hash.table.size S:76 LL com/z80asm.b[1379]
    t.link!entry:=hash.table!hash.table.size
hash.table.size S:76 LL com/z80asm.b[1380]
    hash.table!hash.table.size:=!anchor
hash.table.size S:76 LL com/z80asm.b[1397]
    RESULTIS hash.table!hash.table.size
hash.table.size S:76 LL com/z80asm.b[1406]
    FOR anchor=hash.table TO hash.table+hash.table.size DO..
hash.table.size S:76 LL com/z80asm.b[912]
    FOR i=2 TO hash.table.size-1 DO..
hash.table.size S:76 LL com/z80asm.b[913]
    IF hash.table.size MOD i=0 DO ..
hash.table.size S:76 LL com/z80asm.b[914]
    hash.table.size:=hash.table.size+1
hash.table.size S:76 LL com/z80asm.b[919]
    hash.table:=simplegetvec(hash.table.size)
hash.table.size S:76 LL com/z80asm.b[921]
    FOR i=0 TO hash.table.size DO..
hash.table.size S:76 LL com/z80asm.b[957]
    RESULTIS hash.table+(ABS hashval) MOD hash.table.size
hash.table.size S:76 SL com/z80asm.b[908]
    hash.table.size:=(memsize-memory!0)/12
hash.table.size S:76 SL com/z80asm.b[914]
    hash.table.size:=hash.table.size+1
hexoutwidth G:220 DEF com/z80asm.b[38] hexoutwidth=ug+20
hexoutwidth G:220 LG com/z80asm.b[1819] IF hex!0>=hexoutwidth DO ..
hexoutwidth G:220 LG com/z80asm.b[1850] IF rel!0>=hexoutwidth DO ..
hexoutwidth G:220 LG com/z80asm.b[5326]
    hexoutwidth:=hexoutwidth/bytesperasmword
hexoutwidth G:220 LG com/z80asm.b[5327]
    error:=error|...|pw<50|~(...&...)|max.files<=1
hexoutwidth G:220 LLG com/z80asm.b[5281] temp:=@hexoutwidth
hexoutwidth G:220 SG com/z80asm.b[5326]
    hexoutwidth:=hexoutwidth/bytesperasmword
hexoutwidth G:220 SG com/z80asm.b[5456] hexoutwidth:=32
hold G:158 DEF libhdr.h[209] hold=158
i.and M:18 DEF com/z80asm.b[406] i.and=18
i.and M:18 MAN com/z80asm.b[4118] item.type:=i.and
i.and M:18 MAN com/z80asm.b[4662] WHILE scan(i.and) DO ..
i.bad M:0 DEF com/z80asm.b[388] i.bad=0
i.bad M:0 MAN com/z80asm.b[4059] item.type:=i.bad
i.cap M:31 DEF com/z80asm.b[419] i.cap=31
i.cap M:31 MAN com/z80asm.b[4124] item.type:=i.cap
i.colon M:23 DEF com/z80asm.b[411] i.colon=23
i.colon M:23 MAN com/z80asm.b[3747] IF scan(i.colon) DO ..
i.colon M:23 MAN com/z80asm.b[4117] item.type:=i.colon
i.colon M:23 MAN com/z80asm.b[5085] scan(i.colon)
i.colon M:23 MAN com/z80asm.b[5436] i.endlab:=i.colon
i.comma M:4 DEF com/z80asm.b[392] i.comma=4
i.comma M:4 MAN com/z80asm.b[3191] scan(i.comma)
i.comma M:4 MAN com/z80asm.b[3225] WHILE scan(i.comma) DO ..
i.comma M:4 MAN com/z80asm.b[3352] .. REPEATUNTIL ~scan(i.comma)
i.comma M:4 MAN com/z80asm.b[3545] scan(i.comma)
i.comma M:4 MAN com/z80asm.b[3561] UNLESS scan(i.comma) DO ..
i.comma M:4 MAN com/z80asm.b[3665]
    .. REPEATUNTIL ~allow.concatination|~ans|~scan(i.comma)
i.comma M:4 MAN com/z80asm.b[3676] item.type=i.comma|item.type=i.strrbkt
i.comma M:4 MAN com/z80asm.b[3685] IF scan(i.comma) DO ..
i.comma M:4 MAN com/z80asm.b[4105] item.type:=i.comma
i.comma M:4 MAN com/z80asm.b[4913] .. REPEATWHILE scan(i.comma)
i.comma M:4 MAN com/z80asm.b[5057] .. REPEATUNTIL ~scan(i.comma)
i.comma M:4 MAN com/z80asm.b[5091] .. REPEATUNTIL ~scan(i.comma)
i.comma M:4 MAN com/z80asm.b[5108] .. REPEATUNTIL ~scan(i.comma)
i.comma M:4 MAN com/z80asm.b[5867] .. REPEATWHILE scan(i.comma)
i.comma M:4 MAN com/z80asm.b[6015] checkandskip(i.comma,44)
i.comma M:4 MAN com/z80asm.b[6087] checkandskip(i.comma,44)
i.comma M:4 MAN com/z80asm.b[6110] checkandskip(i.comma,44)
i.comma M:4 MAN com/z80asm.b[6121] checkandskip(i.comma,44)
i.comma M:4 MAN com/z80asm.b[6157] checkandskip(i.comma,44)
i.comma M:4 MAN com/z80asm.b[6213] checkandskip(i.comma,44)
i.comma M:4 MAN com/z80asm.b[6360] checkandskip(i.comma,44)
i.comma M:4 MAN com/z80asm.b[6379] checkandskip(i.comma,44)
i.comma M:4 MAN com/z80asm.b[6422] UNLESS item.type=i.comma DO ..
i.comma M:4 MAN com/z80asm.b[6483] checkandskip(i.comma,44)
i.comma M:4 MAN com/z80asm.b[6488] checkandskip(i.comma,44)
i.comma M:4 MAN com/z80asm.b[6493] checkandskip(i.comma,44)
i.comma M:4 MAN com/z80asm.b[6667] checkandskip(i.comma,44)
i.comma M:4 MAN com/z80asm.b[6694] checkandskip(i.comma,44)
i.comma M:4 MAN com/z80asm.b[6704] checkandskip(i.comma,44)
i.comnt M:26 DEF com/z80asm.b[414] i.comnt=26
i.comnt M:26 MAN com/z80asm.b[3233]
    UNLESS item.type=i.comnt|item.type=i.stop|item.type=i.end DO ..
i.comnt M:26 MAN com/z80asm.b[4097] item.type:=i.comnt
i.comnt M:26 MAN com/z80asm.b[4468]
    UNLESS item.type=i.comnt|item.type=i.stop|item.type=i.end DO ..
i.comnt M:26 MAN com/z80asm.b[4502]
    !lv.mt.line:=item.type=i.stop|item.type=i.end|item.type=i.comnt
i.comnt M:26 MAN com/z80asm.b[4518]
    !lv.mt.line:=!lv.lab=null&(item.type=i.stop|item.type=i.end|item.type=i.comnt)
i.comnt M:26 MAN com/z80asm.b[4520]
    TEST item.type=i.comnt|item.type=i.stop|item.type=i.end THEN .. ELSE ..
i.div M:12 DEF com/z80asm.b[400] i.div=12
i.div M:12 MAN com/z80asm.b[4113] item.type:=i.div
i.div M:12 MAN com/z80asm.b[4714]
    WHILE item.type=i.div|item.type=i.mult DO ..
i.div M:12 MAN com/z80asm.b[4718] TEST s=i.div THEN .. ELSE ..
i.dollar M:24 DEF com/z80asm.b[412] i.dollar=24
i.dollar M:24 MAN com/z80asm.b[4120] item.type:=i.dollar
i.dollar M:24 MAN com/z80asm.b[7040] i.here:=i.dollar
i.elbkt G:365 DEF com/z80asm.b[206] i.elbkt=ug+165
i.elbkt G:365 LG com/z80asm.b[4595]
    RESULTIS item.type=i.elbkt|item.type=i.strlbkt
i.elbkt G:365 LG com/z80asm.b[4815] TEST scan(i.elbkt) THEN .. ELSE ..
i.elbkt G:365 SG com/z80asm.b[5434] i.elbkt:=i.lbkt
i.end M:22 DEF com/z80asm.b[410] i.end=22
i.end M:22 MAN com/z80asm.b[3233]
    UNLESS item.type=i.comnt|item.type=i.stop|item.type=i.end DO ..
i.end M:22 MAN com/z80asm.b[3467]
    .. REPEATUNTIL item.type=i.end|fatal|i~=n&mnem~=null|finishpass
i.end M:22 MAN com/z80asm.b[4128] item.type:=i.end
i.end M:22 MAN com/z80asm.b[4336]
    .. REPEATUNTIL item.type=i.end|finishpass|fatal
i.end M:22 MAN com/z80asm.b[4343]
    endmissing:=pass=first&item.type=i.end&had.text
i.end M:22 MAN com/z80asm.b[4344] IF item.type~=i.end|endmissing DO ..
i.end M:22 MAN com/z80asm.b[4346]
    .. REPEATUNTIL fatal|item.type=i.end&~endmissing
i.end M:22 MAN com/z80asm.b[4468]
    UNLESS item.type=i.comnt|item.type=i.stop|item.type=i.end DO ..
i.end M:22 MAN com/z80asm.b[4502]
    !lv.mt.line:=item.type=i.stop|item.type=i.end|item.type=i.comnt
i.end M:22 MAN com/z80asm.b[4518]
    !lv.mt.line:=!lv.lab=null&(item.type=i.stop|item.type=i.end|item.type=i.comnt)
i.end M:22 MAN com/z80asm.b[4520]
    TEST item.type=i.comnt|item.type=i.stop|item.type=i.end THEN .. ELSE ..
i.end M:22 MAN com/z80asm.b[5175]
    .. REPEATUNTIL item.type=i.end|finishpass|fatal
i.endlab G:369 DEF com/z80asm.b[210] i.endlab=ug+169
i.endlab G:369 LG com/z80asm.b[4515] scan(i.endlab)
i.endlab G:369 SG com/z80asm.b[5436] i.endlab:=i.colon
i.equals M:16 DEF com/z80asm.b[404] i.equals=16
i.equals M:16 MAN com/z80asm.b[4115] item.type:=i.equals
i.equals M:16 MAN com/z80asm.b[4904] TEST scan(i.equals) THEN .. ELSE ..
i.erbkt G:366 DEF com/z80asm.b[207] i.erbkt=ug+166
i.erbkt G:366 LG com/z80asm.b[4817] checkandskip(i.erbkt,41)
i.erbkt G:366 SG com/z80asm.b[5435] i.erbkt:=i.rbkt
i.gt M:27 DEF com/z80asm.b[415] i.gt=27
i.gt M:27 MAN com/z80asm.b[4133] item.type:=ch=62->i.gt,i.lt
i.gt M:27 MAN com/z80asm.b[5432] i.strrbkt:=i.gt
i.here G:364 DEF com/z80asm.b[205] i.here=ug+164
i.here G:364 LG com/z80asm.b[4584] TEST item.type=i.here THEN .. ELSE ..
i.here G:364 LG com/z80asm.b[4810] TEST item.type=i.here THEN .. ELSE ..
i.here G:364 SG com/z80asm.b[5430] i.here:=i.mult
i.here G:364 SG com/z80asm.b[7040] i.here:=i.dollar
i.iden M:3 DEF com/z80asm.b[391] i.iden=3
i.iden M:3 MAN com/z80asm.b[3221] IF item.type=i.iden DO ..
i.iden M:3 MAN com/z80asm.b[3226] TEST item.type=i.iden THEN .. ELSE ..
i.iden M:3 MAN com/z80asm.b[3348] TEST item.type=i.iden THEN .. ELSE ..
i.iden M:3 MAN com/z80asm.b[3547] TEST item.type=i.iden THEN .. ELSE ..
i.iden M:3 MAN com/z80asm.b[3714] TEST item.type=i.iden THEN .. ELSE ..
i.iden M:3 MAN com/z80asm.b[3724]
    TEST item.type=i.string|item.type=i.sstring|item.type=i.iden THEN .. ELSE ..
i.iden M:3 MAN com/z80asm.b[3748] TEST item.type~=i.iden THEN .. ELSE ..
i.iden M:3 MAN com/z80asm.b[3854] CASE i.iden:.. 
i.iden M:3 MAN com/z80asm.b[4080] item.type:=i.iden
i.iden M:3 MAN com/z80asm.b[4507] TEST item.type=i.iden THEN .. ELSE ..
i.iden M:3 MAN com/z80asm.b[4524] TEST item.type~=i.iden THEN .. ELSE ..
i.iden M:3 MAN com/z80asm.b[4587] CASE i.iden:.. 
i.iden M:3 MAN com/z80asm.b[4767] CASE i.iden:.. 
i.iden M:3 MAN com/z80asm.b[4840] IF item.type=i.iden DO ..
i.iden M:3 MAN com/z80asm.b[5054] UNLESS item.type=i.iden DO ..
i.iden M:3 MAN com/z80asm.b[5080] TEST item.type=i.iden THEN .. ELSE ..
i.iden M:3 MAN com/z80asm.b[5101] TEST item.type=i.iden THEN .. ELSE ..
i.iden M:3 MAN com/z80asm.b[5765] IF item.type=i.iden DO ..
i.iden M:3 MAN com/z80asm.b[5786] UNLESS item.type=i.iden DO ..
i.iden M:3 MAN com/z80asm.b[5832] IF item.type=i.iden DO ..
i.iden M:3 MAN com/z80asm.b[5849] UNLESS item.type=i.iden DO ..
i.iden M:3 MAN com/z80asm.b[6494]
    UNLESS item.type=i.iden&r.af=getreg(item.info) DO ..
i.immed M:13 DEF com/z80asm.b[401] i.immed=13
i.immed M:13 MAN com/z80asm.b[4114] item.type:=i.immed
i.lbkt M:7 DEF com/z80asm.b[395] i.lbkt=7
i.lbkt M:7 MAN com/z80asm.b[3679] IF ans&scan(i.lbkt) DO ..
i.lbkt M:7 MAN com/z80asm.b[4108] item.type:=i.lbkt
i.lbkt M:7 MAN com/z80asm.b[5434] i.elbkt:=i.lbkt
i.lbkt M:7 MAN com/z80asm.b[5840] UNLESS scan(i.lbkt) DO ..
i.lbkt M:7 MAN com/z80asm.b[6019] TEST scan(i.lbkt) THEN .. ELSE ..
i.lbkt M:7 MAN com/z80asm.b[6082] checkandskip(i.lbkt,40)
i.lbkt M:7 MAN com/z80asm.b[6348] TEST scan(i.lbkt) THEN .. ELSE ..
i.lbkt M:7 MAN com/z80asm.b[6480] TEST scan(i.lbkt) THEN .. ELSE ..
i.lbkt M:7 MAN com/z80asm.b[6664] TEST ~scan(i.lbkt) THEN .. ELSE ..
i.lbkt M:7 MAN com/z80asm.b[6668] checkandskip(i.lbkt,40)
i.lbkt M:7 MAN com/z80asm.b[6691] checkandskip(i.lbkt,40)
i.lsqb M:5 DEF com/z80asm.b[393] i.lsqb=5
i.lsqb M:5 MAN com/z80asm.b[4106] item.type:=i.lsqb
i.lt M:28 DEF com/z80asm.b[416] i.lt=28
i.lt M:28 MAN com/z80asm.b[4133] item.type:=ch=62->i.gt,i.lt
i.lt M:28 MAN com/z80asm.b[5431] i.strlbkt:=i.lt
i.minus M:10 DEF com/z80asm.b[398] i.minus=10
i.minus M:10 MAN com/z80asm.b[4111] item.type:=i.minus
i.minus M:10 MAN com/z80asm.b[4590] CASE i.minus:.. 
i.minus M:10 MAN com/z80asm.b[4696] CASE i.minus:.. 
i.minus M:10 MAN com/z80asm.b[4762] CASE i.minus:.. 
i.minus M:10 MAN com/z80asm.b[5804]
    IF item.type=i.plus|item.type=i.minus DO ..
i.minus M:10 MAN com/z80asm.b[5805] item.type=i.minus
i.minus M:10 MAN com/z80asm.b[6119] IF scan(i.minus) DO ..
i.mult M:11 DEF com/z80asm.b[399] i.mult=11
i.mult M:11 MAN com/z80asm.b[4112] item.type:=i.mult
i.mult M:11 MAN com/z80asm.b[4714]
    WHILE item.type=i.div|item.type=i.mult DO ..
i.mult M:11 MAN com/z80asm.b[5430] i.here:=i.mult
i.not M:30 DEF com/z80asm.b[418] i.not=30
i.not M:30 MAN com/z80asm.b[4123] item.type:=i.not
i.not M:30 MAN com/z80asm.b[4592] CASE i.not:.. 
i.not M:30 MAN com/z80asm.b[4673] scan(i.not)
i.number M:1 DEF com/z80asm.b[389] i.number=1
i.number M:1 MAN com/z80asm.b[3542] IF item.type=i.number DO ..
i.number M:1 MAN com/z80asm.b[4200] item.type:=i.number
i.number M:1 MAN com/z80asm.b[4588] CASE i.number:.. 
i.number M:1 MAN com/z80asm.b[4799] CASE i.number:.. 
i.or M:19 DEF com/z80asm.b[407] i.or=19
i.or M:19 MAN com/z80asm.b[4119] item.type:=i.or
i.or M:19 MAN com/z80asm.b[4650] WHILE scan(i.or) DO ..
i.percent M:29 DEF com/z80asm.b[417] i.percent=29
i.percent M:29 MAN com/z80asm.b[3739]
    TEST scan(i.percent) THEN .. ELSE ..
i.percent M:29 MAN com/z80asm.b[3858] CASE i.percent:.. 
i.percent M:29 MAN com/z80asm.b[4121] item.type:=i.percent
i.percent M:29 MAN com/z80asm.b[4821]
    TEST item.type=i.strlbkt|item.type=i.percent|item.type=i.pling THEN .. ELSE ..
i.pling M:33 DEF com/z80asm.b[421] i.pling=33
i.pling M:33 MAN com/z80asm.b[3709] IF item.type=i.pling DO ..
i.pling M:33 MAN com/z80asm.b[3857] CASE i.pling:.. 
i.pling M:33 MAN com/z80asm.b[4126] item.type:=i.pling
i.pling M:33 MAN com/z80asm.b[4523] scan(i.pling)
i.pling M:33 MAN com/z80asm.b[4821]
    TEST item.type=i.strlbkt|item.type=i.percent|item.type=i.pling THEN .. ELSE ..
i.plus M:9 DEF com/z80asm.b[397] i.plus=9
i.plus M:9 MAN com/z80asm.b[4110] item.type:=i.plus
i.plus M:9 MAN com/z80asm.b[4591] CASE i.plus:.. 
i.plus M:9 MAN com/z80asm.b[4697] CASE i.plus:.. 
i.plus M:9 MAN com/z80asm.b[4764] CASE i.plus:.. 
i.plus M:9 MAN com/z80asm.b[5804]
    IF item.type=i.plus|item.type=i.minus DO ..
i.plus M:9 MAN com/z80asm.b[6118] TEST scan(i.plus) THEN .. ELSE ..
i.rbkt M:8 DEF com/z80asm.b[396] i.rbkt=8
i.rbkt M:8 MAN com/z80asm.b[3697] UNLESS scan(i.rbkt) DO ..
i.rbkt M:8 MAN com/z80asm.b[4109] item.type:=i.rbkt
i.rbkt M:8 MAN com/z80asm.b[5435] i.erbkt:=i.rbkt
i.rbkt M:8 MAN com/z80asm.b[5818] checkandskip(i.rbkt,41)
i.rbkt M:8 MAN com/z80asm.b[6027] checkandskip(i.rbkt,41)
i.rbkt M:8 MAN com/z80asm.b[6086] checkandskip(i.rbkt,41)
i.rbkt M:8 MAN com/z80asm.b[6109] checkandskip(i.rbkt,41)
i.rbkt M:8 MAN com/z80asm.b[6120] checkandskip(i.rbkt,41)
i.rbkt M:8 MAN com/z80asm.b[6350] checkandskip(i.rbkt,41)
i.rbkt M:8 MAN com/z80asm.b[6482] checkandskip(i.rbkt,41)
i.rbkt M:8 MAN com/z80asm.b[6680] checkandskip(i.rbkt,41)
i.rbkt M:8 MAN com/z80asm.b[6693] checkandskip(i.rbkt,41)
i.rbkt M:8 MAN com/z80asm.b[6703] checkandskip(i.rbkt,41)
i.rsqb M:6 DEF com/z80asm.b[394] i.rsqb=6
i.rsqb M:6 MAN com/z80asm.b[4107] item.type:=i.rsqb
i.semi M:17 DEF com/z80asm.b[405] i.semi=17
i.semi M:17 MAN com/z80asm.b[4116] item.type:=i.semi
i.shl M:21 DEF com/z80asm.b[409] i.shl=21
i.shl M:21 MAN com/z80asm.b[4137] item.type:=ch=62->i.shr,i.shl
i.shl M:21 MAN com/z80asm.b[4675]
    WHILE item.type=i.shr|item.type=i.shl DO ..
i.shr M:20 DEF com/z80asm.b[408] i.shr=20
i.shr M:20 MAN com/z80asm.b[4137] item.type:=ch=62->i.shr,i.shl
i.shr M:20 MAN com/z80asm.b[4675]
    WHILE item.type=i.shr|item.type=i.shl DO ..
i.shr M:20 MAN com/z80asm.b[4679] TEST s=i.shr THEN .. ELSE ..
i.space M:14 DEF com/z80asm.b[402] i.space=14
i.space M:14 MAN com/z80asm.b[4104] item.type:=i.space
i.space M:14 MAN com/z80asm.b[4506] TEST scan(i.space) THEN .. ELSE ..
i.sstring M:25 DEF com/z80asm.b[413] i.sstring=25
i.sstring M:25 MAN com/z80asm.b[3724]
    TEST item.type=i.string|item.type=i.sstring|item.type=i.iden THEN .. ELSE ..
i.sstring M:25 MAN com/z80asm.b[3856] CASE i.sstring:.. 
i.sstring M:25 MAN com/z80asm.b[4146]
    item.type:=ch=34->i.string,i.sstring
i.sstring M:25 MAN com/z80asm.b[4589] CASE i.sstring:.. 
i.sstring M:25 MAN com/z80asm.b[4803] CASE i.sstring:.. 
i.sstring M:25 MAN com/z80asm.b[4890]
    TEST item.type=i.string|item.type=i.sstring|item.type=i.strlbkt THEN .. ELSE ..
i.sstring M:25 MAN com/z80asm.b[5083]
    UNLESS item.type=i.string|item.type=i.sstring DO ..
i.sstring M:25 MAN com/z80asm.b[5087]
    TEST item.type=i.string|item.type=i.sstring THEN .. ELSE ..
i.sstring M:25 MAN com/z80asm.b[5160]
    TEST i.string~=item.type&item.type~=i.sstring THEN .. ELSE ..
i.stop M:15 DEF com/z80asm.b[403] i.stop=15
i.stop M:15 MAN com/z80asm.b[3233]
    UNLESS item.type=i.comnt|item.type=i.stop|item.type=i.end DO ..
i.stop M:15 MAN com/z80asm.b[4127] item.type:=i.stop
i.stop M:15 MAN com/z80asm.b[4468]
    UNLESS item.type=i.comnt|item.type=i.stop|item.type=i.end DO ..
i.stop M:15 MAN com/z80asm.b[4502]
    !lv.mt.line:=item.type=i.stop|item.type=i.end|item.type=i.comnt
i.stop M:15 MAN com/z80asm.b[4518]
    !lv.mt.line:=!lv.lab=null&(item.type=i.stop|item.type=i.end|item.type=i.comnt)
i.stop M:15 MAN com/z80asm.b[4520]
    TEST item.type=i.comnt|item.type=i.stop|item.type=i.end THEN .. ELSE ..
i.stop M:15 MAN com/z80asm.b[5184] item.type:=i.stop
i.string M:2 DEF com/z80asm.b[390] i.string=2
i.string M:2 MAN com/z80asm.b[3724]
    TEST item.type=i.string|item.type=i.sstring|item.type=i.iden THEN .. ELSE ..
i.string M:2 MAN com/z80asm.b[3855] CASE i.string:.. 
i.string M:2 MAN com/z80asm.b[4146] item.type:=ch=34->i.string,i.sstring
i.string M:2 MAN com/z80asm.b[4890]
    TEST item.type=i.string|item.type=i.sstring|item.type=i.strlbkt THEN .. ELSE ..
i.string M:2 MAN com/z80asm.b[4891] item.type=i.string->0,1
i.string M:2 MAN com/z80asm.b[5083]
    UNLESS item.type=i.string|item.type=i.sstring DO ..
i.string M:2 MAN com/z80asm.b[5087]
    TEST item.type=i.string|item.type=i.sstring THEN .. ELSE ..
i.string M:2 MAN com/z80asm.b[5160]
    TEST i.string~=item.type&item.type~=i.sstring THEN .. ELSE ..
i.strlbkt G:367 DEF com/z80asm.b[208] i.strlbkt=ug+167
i.strlbkt G:367 LG com/z80asm.b[3735]
    TEST scan(i.strlbkt) THEN .. ELSE ..
i.strlbkt G:367 LG com/z80asm.b[3861] RESULTIS item.type=i.strlbkt
i.strlbkt G:367 LG com/z80asm.b[4595]
    RESULTIS item.type=i.elbkt|item.type=i.strlbkt
i.strlbkt G:367 LG com/z80asm.b[4821]
    TEST item.type=i.strlbkt|item.type=i.percent|item.type=i.pling THEN .. ELSE ..
i.strlbkt G:367 LG com/z80asm.b[4890]
    TEST item.type=i.string|item.type=i.sstring|item.type=i.strlbkt THEN .. ELSE ..
i.strlbkt G:367 LG com/z80asm.b[4892] IF item.type=i.strlbkt DO ..
i.strlbkt G:367 SG com/z80asm.b[5431] i.strlbkt:=i.lt
i.strrbkt G:368 DEF com/z80asm.b[209] i.strrbkt=ug+168
i.strrbkt G:368 LG com/z80asm.b[3676]
    item.type=i.comma|item.type=i.strrbkt
i.strrbkt G:368 LG com/z80asm.b[3737] UNLESS scan(i.strrbkt) DO ..
i.strrbkt G:368 SG com/z80asm.b[5432] i.strrbkt:=i.gt
i.ul M:32 DEF com/z80asm.b[420] i.ul=32
i.ul M:32 MAN com/z80asm.b[4125] item.type:=i.ul
id_appendscb M:132 DEF libhdr.h[491] id_appendscb=132
id_inoutscb M:131 DEF libhdr.h[490] id_inoutscb=131
id_inscb M:129 DEF libhdr.h[488] id_inscb=129
id_outscb M:130 DEF libhdr.h[489] id_outscb=130
iden.valid G:212 DEF com/z80asm.b[28] iden.valid=ug+12
iden.valid G:212 LG com/z80asm.b[1147] RESULTIS iden.valid->t!t.val,0
iden.valid G:212 LG com/z80asm.b[3549] ans:=iden.valid
iden.valid G:212 LG com/z80asm.b[3716] TEST iden.valid THEN .. ELSE ..
iden.valid G:212 LG com/z80asm.b[4083] IF iden.valid&expand.text DO ..
iden.valid G:212 LG com/z80asm.b[4534]
    TEST ~no.expand&iden.valid THEN .. ELSE ..
iden.valid G:212 LG com/z80asm.b[4770]
    IF pass=second&(ansvec!1=type.none|~iden.valid) DO ..
iden.valid G:212 LG com/z80asm.b[4794] UNLESS iden.valid DO ..
iden.valid G:212 SG com/z80asm.b[1146]
    iden.valid:=t=null|t!t.info>=lineno->FALSE,(t!t.type&type.mask)=ty
iden.valid G:212 SG com/z80asm.b[971]
    iden.valid:=~(t=null->pass=second,...~=0&rel.pos>=0)
ifproc G:261 DEF com/z80asm.b[86] ifproc=ug+61
ifproc G:261 LG com/z80asm.b[3621]
    mnemproc:=find.mnem(@lab,4,endproc,...)
ifproc G:261 LG com/z80asm.b[6943] code.put("IF",ifproc,-1,1)
ifproc G:261 LG com/z80asm.b[6944] code.put("IFT",ifproc,-1,1)
ifproc G:261 LG com/z80asm.b[6945] code.put("IFE",ifproc,-1,0)
ifproc G:261 LG com/z80asm.b[6946] code.put("IFF",ifproc,-1,0)
ifproc G:261 LG com/z80asm.b[6947] code.put("IFDEF",ifproc,-1,128)
ifproc G:261 LG com/z80asm.b[6948] code.put("IFNDEF",ifproc,-1,129)
ifproc G:261 LG com/z80asm.b[6949] code.put("IFB",ifproc,-1,8)
ifproc G:261 LG com/z80asm.b[6950] code.put("IFNB",ifproc,-1,9)
ifproc G:261 LG com/z80asm.b[6951] code.put("IFIDN",ifproc,-1,10)
ifproc G:261 LG com/z80asm.b[6952] code.put("IFDIF",ifproc,-1,11)
ifproc G:261 RT com/z80asm.b[3524] LET ifproc(lab,test.spec)BE..
in.errcount M:1 DEF com/z80asm.b[309] in.errcount=1
in.errcount M:1 MAN com/z80asm.b[4327] state!in.errcount:=errcount
in.errcount M:1 MAN com/z80asm.b[4392] errcount:=state!in.errcount
in.errcount M:1 MAN com/z80asm.b[4406] state!in.errcount:=errcount
in.fileno M:2 DEF com/z80asm.b[310] in.fileno=2
in.filenogen M:3 DEF com/z80asm.b[311] in.filenogen=3
in.first M:4 DEF com/z80asm.b[312] in.first=4
in.first M:4 MAN com/z80asm.b[4328] state!in.first:=pass.first
in.first M:4 MAN com/z80asm.b[4400] state!in.first:=input()
in.first M:4 MAN com/z80asm.b[4421] selectinput(state!in.first)
in.lineno M:0 DEF com/z80asm.b[308] in.lineno=0
in.lineno M:0 MAN com/z80asm.b[4326] state!in.lineno:=line.of.file
in.lineno M:0 MAN com/z80asm.b[4394] line.of.file:=state!in.lineno
in.lineno M:0 MAN com/z80asm.b[4410] state!in.lineno:=line.of.file
in.list M:6 DEF com/z80asm.b[314] in.list=6
in.list M:6 MAN com/z80asm.b[4330] state!in.list:=list
in.list M:6 MAN com/z80asm.b[4393] list:=state!in.list
in.list M:6 MAN com/z80asm.b[4409] state!in.list:=list
in.memlevel M:7 DEF com/z80asm.b[315] in.memlevel=7
in.memlevel M:7 MAN com/z80asm.b[4331] state!in.memlevel:=memory!memsize
in.memlevel M:7 MAN com/z80asm.b[4422] memory!memsize:=state!in.memlevel
in.second M:5 DEF com/z80asm.b[313] in.second=5
in.second M:5 MAN com/z80asm.b[4329] state!in.second:=pass.second
in.second M:5 MAN com/z80asm.b[4401] selectinput(state!in.second)
in.second M:5 MAN com/z80asm.b[4408] state!in.second:=input()
initco G:22 DEF libhdr.h[58] initco=22
initcodes G:355 DEF com/z80asm.b[194] initcodes=ug+155
initcodes G:355 LG com/z80asm.b[5490] initcodes()
initcodes G:355 RT com/z80asm.b[3103] LET initcodes()BE..
initcodes G:355 RT com/z80asm.b[6911] LET initcodes()BE..
initio G:46 DEF libhdr.h[82] initio=46
initsyms G:354 DEF com/z80asm.b[193] initsyms=ug+154
initsyms G:354 LG com/z80asm.b[5491] initsyms()
initsyms G:354 RT com/z80asm.b[3136] LET initsyms()BE..
initsyms G:354 RT com/z80asm.b[5673] LET initsyms()BE..
input G:58 DEF libhdr.h[94] input=58
input G:58 LG com/z80asm.b[4400] state!in.first:=input()
input G:58 LG com/z80asm.b[4408] state!in.second:=input()
input G:58 LG com/z80asm.b[5165] input()
insize M:8 DEF com/z80asm.b[316] insize=8
instrcount G:121 DEF libhdr.h[158] instrcount=121
intelhex F:273 LF com/z80asm.b[1669] intelhex(type,a1,a2)
intelhex F:273 RT com/z80asm.b[1707] LET intelhex(type,arg,arg1)BE..
intflag G:119 DEF libhdr.h[156] intflag=119
is.expression G:290 DEF com/z80asm.b[118] is.expression=ug+90
is.expression G:290 FN com/z80asm.b[4583] LET is.expression()=..
is.expression G:290 LG com/z80asm.b[3279] IF is.expression() DO ..
is.expression G:290 LG com/z80asm.b[4905]
    TEST ~is.expression() THEN .. ELSE ..
is.expression G:290 LG com/z80asm.b[4909]
    TEST ~is.expression() THEN .. ELSE ..
is.expression G:290 LG com/z80asm.b[4951]
    TEST ~is.expression() THEN .. ELSE ..
is.expression G:290 LG com/z80asm.b[4965]
    TEST ~is.expression() THEN .. ELSE ..
is.expression G:290 LG com/z80asm.b[4990] IF is.expression() DO ..
is.expression G:290 LG com/z80asm.b[5140]
    lines:=is.expression()->expression(),pl
is.expression G:290 LG com/z80asm.b[5153]
    TEST is.expression() THEN .. ELSE ..
is.expression G:290 LG com/z80asm.b[6162]
    TEST is.expression() THEN .. ELSE ..
is.strexp G:255 DEF com/z80asm.b[79] is.strexp=ug+55
is.strexp G:255 FN com/z80asm.b[3852] LET is.strexp()=..
is.strexp G:255 LG com/z80asm.b[3180] WHILE is.strexp() DO ..
is.type G:289 DEF com/z80asm.b[117] is.type=ug+89
is.type G:289 FN com/z80asm.b[4838] LET is.type(ty)=..
isrregs M:41 DEF libhdr.h[486] isrregs=41
item.info G:278 DEF com/z80asm.b[106] item.info=ug+78
item.info G:278 LG com/z80asm.b[3223] add.macro.parm(macro,item.info)
item.info G:278 LG com/z80asm.b[3227] add.macro.parm(macro,item.info)
item.info G:278 LG com/z80asm.b[3349]
    stacktext(macro.stack,item.info,gen.label())
item.info G:278 LG com/z80asm.b[3543] type:=item.info
item.info G:278 LG com/z80asm.b[3548] looktype(type,item.info)
item.info G:278 LG com/z80asm.b[3715] looktype(type.text,item.info)
item.info G:278 LG com/z80asm.b[3725] buffer%0+item.info%0
item.info G:278 LG com/z80asm.b[3731] FOR i=1 TO item.info%0 DO..
item.info G:278 LG com/z80asm.b[3731] buffer%(startpos+i-1):=item.info%i
item.info G:278 LG com/z80asm.b[3749] TEST item.info%0>2 THEN .. ELSE ..
item.info G:278 LG com/z80asm.b[3750] warn(e.badbase,item.info%3)
item.info G:278 LG com/z80asm.b[3751] format:=capitalch(item.info%1)
item.info G:278 LG com/z80asm.b[3752] IF item.info%0>1 DO ..
item.info G:278 LG com/z80asm.b[3753] item.info%2
item.info G:278 LG com/z80asm.b[4082]
    macro:=looktype(type.text,item.info)
item.info G:278 LG com/z80asm.b[4136] IF ch=item.info DO ..
item.info G:278 LG com/z80asm.b[4211] item.info:=item.info*p+d
item.info G:278 LG com/z80asm.b[4513] !lv.lab!i:=item.info!i
item.info G:278 LG com/z80asm.b[4513]
    FOR i=0 TO item.info%0/bytesperword DO..
item.info G:278 LG com/z80asm.b[4530]
    macro:=looktype(type.macro,item.info)
item.info G:278 LG com/z80asm.b[4541] mnem:=getcode(item.info)
item.info G:278 LG com/z80asm.b[4769]
    UNLESS getlab(item.info,ansvec)=null DO ..
item.info G:278 LG com/z80asm.b[4800] ansvec!0:=item.info
item.info G:278 LG com/z80asm.b[4805] FOR i=1 TO item.info%0 DO..
item.info G:278 LG com/z80asm.b[4806]
    ansvec!0:=(ansvec!0<<8)+cvtchar(item.info%i)
item.info G:278 LG com/z80asm.b[4825] FOR i=1 TO item.info%0 DO..
item.info G:278 LG com/z80asm.b[4840] ans:=checktype(ty,item.info)
item.info G:278 LG com/z80asm.b[4893]
    FOR i=offset TO offset+(item.info%0-offset)/bytesperasmword DO..
item.info G:278 LG com/z80asm.b[4896]
    i*bytesperasmword+j>item.info%0->32,cvtchar(item.info%(i*bytesperasmword+j))
item.info G:278 LG com/z80asm.b[5055]
    putlab(item.info,default.value,type)
item.info G:278 LG com/z80asm.b[5081]
    putlab(item.info,65535,type.ref|flag.needs)
item.info G:278 LG com/z80asm.b[5088] code.gen(cd.opt,item.info,level)
item.info G:278 LG com/z80asm.b[5102] putlab(item.info,-1,type.def)
item.info G:278 LG com/z80asm.b[5162]
    findgetin(item.info%0=0->fromfile,item.info)
item.info G:278 LG com/z80asm.b[5164] error(e.badfile,item.info)
item.info G:278 LG com/z80asm.b[5169]
    newfile(item.info%0=0->fromfile,item.info)
item.info G:278 LG com/z80asm.b[5766] getreg(item.info)
item.info G:278 LG com/z80asm.b[5787] UNLESS reg=getreg(item.info) DO ..
item.info G:278 LG com/z80asm.b[5850] getreg(item.info)
item.info G:278 LG com/z80asm.b[6494]
    UNLESS item.type=i.iden&r.af=getreg(item.info) DO ..
item.info G:278 SG com/z80asm.b[3718] item.info:=macro
item.info G:278 SG com/z80asm.b[4060] item.info:=null
item.info G:278 SG com/z80asm.b[4081] item.info:=lex.space
item.info G:278 SG com/z80asm.b[4098] item.info:=ch
item.info G:278 SG com/z80asm.b[4134] item.info:=ch
item.info G:278 SG com/z80asm.b[4147] item.info:=lex.space
item.info G:278 SG com/z80asm.b[4201] item.info:=0
item.info G:278 SG com/z80asm.b[4211] item.info:=item.info*p+d
item.info G:278 SG com/z80asm.b[4892] item.info:=strexp(null,0,FALSE)
item.start G:279 DEF com/z80asm.b[107] item.start=ug+79
item.start G:279 LG com/z80asm.b[2379] item.start
item.start G:279 LG com/z80asm.b[2447] warnvec!0:=item.start
item.start G:279 LG com/z80asm.b[4087] linbuf.top:=item.start
item.start G:279 SG com/z80asm.b[4061] item.start:=linbuf.top-1
item.start G:279 SG com/z80asm.b[4287] item.start:=linbuf.top-1
item.type G:277 DEF com/z80asm.b[105] item.type=ug+77
item.type G:277 LG com/z80asm.b[3221] IF item.type=i.iden DO ..
item.type G:277 LG com/z80asm.b[3226]
    TEST item.type=i.iden THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[3233]
    UNLESS item.type=i.comnt|item.type=i.stop|item.type=i.end DO ..
item.type G:277 LG com/z80asm.b[3348]
    TEST item.type=i.iden THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[3467]
    .. REPEATUNTIL item.type=i.end|fatal|i~=n&mnem~=null|finishpass
item.type G:277 LG com/z80asm.b[3542] IF item.type=i.number DO ..
item.type G:277 LG com/z80asm.b[3547]
    TEST item.type=i.iden THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[3676]
    item.type=i.comma|item.type=i.strrbkt
item.type G:277 LG com/z80asm.b[3709] IF item.type=i.pling DO ..
item.type G:277 LG com/z80asm.b[3714]
    TEST item.type=i.iden THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[3724]
    TEST item.type=i.string|item.type=i.sstring|item.type=i.iden THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[3748]
    TEST item.type~=i.iden THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[3853] SWITCHON item.type INTO..
item.type G:277 LG com/z80asm.b[3861] RESULTIS item.type=i.strlbkt
item.type G:277 LG com/z80asm.b[4225] RESULTIS item.type
item.type G:277 LG com/z80asm.b[4230]
    TEST item=item.type THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[4236]
    TEST item.type=item THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[4336]
    .. REPEATUNTIL item.type=i.end|finishpass|fatal
item.type G:277 LG com/z80asm.b[4343]
    endmissing:=pass=first&item.type=i.end&had.text
item.type G:277 LG com/z80asm.b[4344]
    IF item.type~=i.end|endmissing DO ..
item.type G:277 LG com/z80asm.b[4346]
    .. REPEATUNTIL fatal|item.type=i.end&~endmissing
item.type G:277 LG com/z80asm.b[4468]
    UNLESS item.type=i.comnt|item.type=i.stop|item.type=i.end DO ..
item.type G:277 LG com/z80asm.b[4502]
    !lv.mt.line:=item.type=i.stop|item.type=i.end|item.type=i.comnt
item.type G:277 LG com/z80asm.b[4507]
    TEST item.type=i.iden THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[4518]
    !lv.mt.line:=!lv.lab=null&(item.type=i.stop|item.type=i.end|item.type=i.comnt)
item.type G:277 LG com/z80asm.b[4520]
    TEST item.type=i.comnt|item.type=i.stop|item.type=i.end THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[4524]
    TEST item.type~=i.iden THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[4540] mnem!c.str:=item.type
item.type G:277 LG com/z80asm.b[4584]
    TEST item.type=i.here THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[4586] SWITCHON item.type INTO..
item.type G:277 LG com/z80asm.b[4595]
    RESULTIS item.type=i.elbkt|item.type=i.strlbkt
item.type G:277 LG com/z80asm.b[4675]
    WHILE item.type=i.shr|item.type=i.shl DO ..
item.type G:277 LG com/z80asm.b[4676] item.type
item.type G:277 LG com/z80asm.b[4694] SWITCHON item.type INTO..
item.type G:277 LG com/z80asm.b[4714]
    WHILE item.type=i.div|item.type=i.mult DO ..
item.type G:277 LG com/z80asm.b[4715] item.type
item.type G:277 LG com/z80asm.b[4761] SWITCHON item.type INTO..
item.type G:277 LG com/z80asm.b[4810]
    TEST item.type=i.here THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[4821]
    TEST item.type=i.strlbkt|item.type=i.percent|item.type=i.pling THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[4840] IF item.type=i.iden DO ..
item.type G:277 LG com/z80asm.b[4890]
    TEST item.type=i.string|item.type=i.sstring|item.type=i.strlbkt THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[4891] item.type=i.string->0,1
item.type G:277 LG com/z80asm.b[4892] IF item.type=i.strlbkt DO ..
item.type G:277 LG com/z80asm.b[5054] UNLESS item.type=i.iden DO ..
item.type G:277 LG com/z80asm.b[5080]
    TEST item.type=i.iden THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[5083]
    UNLESS item.type=i.string|item.type=i.sstring DO ..
item.type G:277 LG com/z80asm.b[5087]
    TEST item.type=i.string|item.type=i.sstring THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[5101]
    TEST item.type=i.iden THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[5160]
    TEST i.string~=item.type&item.type~=i.sstring THEN .. ELSE ..
item.type G:277 LG com/z80asm.b[5175]
    .. REPEATUNTIL item.type=i.end|finishpass|fatal
item.type G:277 LG com/z80asm.b[5765] IF item.type=i.iden DO ..
item.type G:277 LG com/z80asm.b[5786] UNLESS item.type=i.iden DO ..
item.type G:277 LG com/z80asm.b[5804]
    IF item.type=i.plus|item.type=i.minus DO ..
item.type G:277 LG com/z80asm.b[5805] item.type=i.minus
item.type G:277 LG com/z80asm.b[5832] IF item.type=i.iden DO ..
item.type G:277 LG com/z80asm.b[5849] UNLESS item.type=i.iden DO ..
item.type G:277 LG com/z80asm.b[6422] UNLESS item.type=i.comma DO ..
item.type G:277 LG com/z80asm.b[6494]
    UNLESS item.type=i.iden&r.af=getreg(item.info) DO ..
item.type G:277 SG com/z80asm.b[4059] item.type:=i.bad
item.type G:277 SG com/z80asm.b[4080] item.type:=i.iden
item.type G:277 SG com/z80asm.b[4097] item.type:=i.comnt
item.type G:277 SG com/z80asm.b[4104] item.type:=i.space
item.type G:277 SG com/z80asm.b[4105] item.type:=i.comma
item.type G:277 SG com/z80asm.b[4106] item.type:=i.lsqb
item.type G:277 SG com/z80asm.b[4107] item.type:=i.rsqb
item.type G:277 SG com/z80asm.b[4108] item.type:=i.lbkt
item.type G:277 SG com/z80asm.b[4109] item.type:=i.rbkt
item.type G:277 SG com/z80asm.b[4110] item.type:=i.plus
item.type G:277 SG com/z80asm.b[4111] item.type:=i.minus
item.type G:277 SG com/z80asm.b[4112] item.type:=i.mult
item.type G:277 SG com/z80asm.b[4113] item.type:=i.div
item.type G:277 SG com/z80asm.b[4114] item.type:=i.immed
item.type G:277 SG com/z80asm.b[4115] item.type:=i.equals
item.type G:277 SG com/z80asm.b[4116] item.type:=i.semi
item.type G:277 SG com/z80asm.b[4117] item.type:=i.colon
item.type G:277 SG com/z80asm.b[4118] item.type:=i.and
item.type G:277 SG com/z80asm.b[4119] item.type:=i.or
item.type G:277 SG com/z80asm.b[4120] item.type:=i.dollar
item.type G:277 SG com/z80asm.b[4121] item.type:=i.percent
item.type G:277 SG com/z80asm.b[4123] item.type:=i.not
item.type G:277 SG com/z80asm.b[4124] item.type:=i.cap
item.type G:277 SG com/z80asm.b[4125] item.type:=i.ul
item.type G:277 SG com/z80asm.b[4126] item.type:=i.pling
item.type G:277 SG com/z80asm.b[4127] item.type:=i.stop
item.type G:277 SG com/z80asm.b[4128] item.type:=i.end
item.type G:277 SG com/z80asm.b[4133] item.type:=ch=62->i.gt,i.lt
item.type G:277 SG com/z80asm.b[4137] item.type:=ch=62->i.shr,i.shl
item.type G:277 SG com/z80asm.b[4146]
    item.type:=ch=34->i.string,i.sstring
item.type G:277 SG com/z80asm.b[4200] item.type:=i.number
item.type G:277 SG com/z80asm.b[5184] item.type:=i.stop
jmp F:1496 LF com/z80asm.b[6423] jmp(null,cc)
jmp F:1496 RT com/z80asm.b[6401] LET jmp(lab,ccsym)BE..
klibregs M:21 DEF libhdr.h[481] klibregs=21
lab.space G:340 DEF com/z80asm.b[175] lab.space=ug+140
lab.space G:340 LG com/z80asm.b[3387] lab.space
lab.space G:340 LG com/z80asm.b[3618] lab.space
lab.space G:340 LG com/z80asm.b[4447] lab.space
lab.space G:340 SG com/z80asm.b[4289]
    lab.space:=simplegetvec(256/bytesperword-1)
label.expression G:286 DEF com/z80asm.b[114] label.expression=ug+86
label.expression G:286 FN com/z80asm.b[4620]
    LET label.expression(ansvec)=..
label.expression G:286 LG com/z80asm.b[4602] label.expression(spec)
label.expression G:286 LG com/z80asm.b[4611] label.expression(spec)
label.expression G:286 LG com/z80asm.b[4816] label.expression(ansvec)
label.expression G:286 LG com/z80asm.b[4907]
    putlabelspec(label.expression(spec))
label.expression G:286 LG com/z80asm.b[4953] label.expression(spec)
label.expression G:286 LG com/z80asm.b[4967] label.expression(spec)
label.expression G:286 LG com/z80asm.b[4992] !label.expression(spec)
label.expression G:286 LG com/z80asm.b[5007] label.expression(spec)
label.expression G:286 LG com/z80asm.b[5867]
    putlabelspec(label.expression(spec))
label.expression G:286 LG com/z80asm.b[6024]
    putlabelspec(label.expression(spec))
label.expression G:286 LG com/z80asm.b[6068] label.expression(spec)
label.expression G:286 LG com/z80asm.b[6085] label.expression(spec)
label.expression G:286 LG com/z80asm.b[6356]
    putlabelspec(label.expression(spec))
label.expression G:286 LG com/z80asm.b[6361]
    putlabelspec(label.expression(spec))
label.expression G:286 LG com/z80asm.b[6381]
    putlabelspec(label.expression(spec))
level G:15 DEF libhdr.h[51] level=15
level G:15 LG com/z80asm.b[3239] errorlevel:=level()
level G:15 LG com/z80asm.b[3456] errorlevel:=level()
level G:15 LG com/z80asm.b[4450] errorlevel:=level()
level G:15 LG com/z80asm.b[5486] errorlevel:=level()
lex.space G:339 DEF com/z80asm.b[174] lex.space=ug+139
lex.space G:339 LG com/z80asm.b[4070] lex.space%p:=ch
lex.space G:339 LG com/z80asm.b[4074] lex.space%0:=p
lex.space G:339 LG com/z80asm.b[4077] lex.space%p:=0
lex.space G:339 LG com/z80asm.b[4081] item.info:=lex.space
lex.space G:339 LG com/z80asm.b[4147] item.info:=lex.space
lex.space G:339 LG com/z80asm.b[4178] lex.space%p:=c
lex.space G:339 LG com/z80asm.b[4181] lex.space%0:=p
lex.space G:339 LG com/z80asm.b[904]
    IF dicposn~=0&string=lex.space DO ..
lex.space G:339 SG com/z80asm.b[4288]
    lex.space:=simplegetvec(256/bytesperword-1)
linbuf G:226 DEF com/z80asm.b[46] linbuf=ug+26
linbuf G:226 LG com/z80asm.b[2267] linbuf%linbuf.top:=ch
linbuf G:226 LG com/z80asm.b[2273] linbuf%linbuf.top
linbuf G:226 LG com/z80asm.b[2278]
    WHILE linbuf%(linbuf.top-1)=32&n>0 DO ..
linbuf G:226 LG com/z80asm.b[2282] linbuf%linbuf.top:=delim
linbuf G:226 LG com/z80asm.b[2292] linbuf%linbuf.top:=ch
linbuf G:226 LG com/z80asm.b[2295] linbuf%i:=32
linbuf G:226 LG com/z80asm.b[2298] linbuf%linbuf.top:=delim
linbuf G:226 LG com/z80asm.b[2346] linbuf%linbuf.top:=ch
linbuf G:226 LG com/z80asm.b[2498]
    WHILE i<=linbuf.top&(linbuf%i=32|linbuf%i=10) DO ..
linbuf G:226 LG com/z80asm.b[2529]
    TEST linbuf%1=comntch|pc=startpc+binbuf!b.top-b.nextmod THEN .. ELSE ..
linbuf G:226 LG com/z80asm.b[2550] wrch(linbuf%i)
linbuf G:226 SG com/z80asm.b[4285]
    linbuf:=simplegetvec(linbufsize/bytesperword+1)
linbuf.out G:227 DEF com/z80asm.b[47] linbuf.out=ug+27
linbuf.out G:227 LG com/z80asm.b[2266] linbuf.out:=linbuf.out+1
linbuf.out G:227 LG com/z80asm.b[2312] linbuf.out:=linbuf.out-1
linbuf.out G:227 LG com/z80asm.b[2313] IF linbuf.out<=0 DO ..
linbuf.out G:227 LG com/z80asm.b[2338] UNLESS linbuf.out=0 DO ..
linbuf.out G:227 SG com/z80asm.b[2259] linbuf.out:=0
linbuf.out G:227 SG com/z80asm.b[2266] linbuf.out:=linbuf.out+1
linbuf.out G:227 SG com/z80asm.b[2312] linbuf.out:=linbuf.out-1
linbuf.out G:227 SG com/z80asm.b[2336] linbuf.out:=7-linbuf.top MOD 8
linbuf.top G:228 DEF com/z80asm.b[48] linbuf.top=ug+28
linbuf.top G:228 LG com/z80asm.b[2264]
    UNLESS linbuf.top>=linbufsize DO ..
linbuf.top G:228 LG com/z80asm.b[2265] linbuf.top:=linbuf.top+1
linbuf.top G:228 LG com/z80asm.b[2267] linbuf%linbuf.top:=ch
linbuf.top G:228 LG com/z80asm.b[2273] linbuf%linbuf.top
linbuf.top G:228 LG com/z80asm.b[2275]
    TEST pos<linbuf.top THEN .. ELSE ..
linbuf.top G:228 LG com/z80asm.b[2276] linbuf.top-pos
linbuf.top G:228 LG com/z80asm.b[2278]
    WHILE linbuf%(linbuf.top-1)=32&n>0 DO ..
linbuf.top G:228 LG com/z80asm.b[2280] linbuf.top:=linbuf.top-1
linbuf.top G:228 LG com/z80asm.b[2282] linbuf%linbuf.top:=delim
linbuf.top G:228 LG com/z80asm.b[2283] savepos:=linbuf.top
linbuf.top G:228 LG com/z80asm.b[2290]
    TEST ch~=32&linbuf.top>savepos THEN .. ELSE ..
linbuf.top G:228 LG com/z80asm.b[2292] linbuf%linbuf.top:=ch
linbuf.top G:228 LG com/z80asm.b[2294]
    FOR i=linbuf.top TO pos-1>linbufsize->linbufsize,pos-1 DO..
linbuf.top G:228 LG com/z80asm.b[2296] linbuf.top:=linbuf.top+1
linbuf.top G:228 LG com/z80asm.b[2298]
    UNLESS linbuf.top>linbufsize DO ..
linbuf.top G:228 LG com/z80asm.b[2298] linbuf%linbuf.top:=delim
linbuf.top G:228 LG com/z80asm.b[2336] linbuf.out:=7-linbuf.top MOD 8
linbuf.top G:228 LG com/z80asm.b[2343]
    UNLESS linbuf.top>=linbufsize DO ..
linbuf.top G:228 LG com/z80asm.b[2345] linbuf.top:=linbuf.top+1
linbuf.top G:228 LG com/z80asm.b[2346] linbuf%linbuf.top:=ch
linbuf.top G:228 LG com/z80asm.b[2498]
    WHILE i<=linbuf.top&(linbuf%i=32|linbuf%i=10) DO ..
linbuf.top G:228 LG com/z80asm.b[2499]
    control.line:=i>linbuf.top|linbuf.top=0
linbuf.top G:228 LG com/z80asm.b[2548] FOR i=1 TO linbuf.top-1 DO..
linbuf.top G:228 LG com/z80asm.b[4061] item.start:=linbuf.top-1
linbuf.top G:228 LG com/z80asm.b[4085] first.item.pos:=linbuf.top
linbuf.top G:228 LG com/z80asm.b[4287] item.start:=linbuf.top-1
linbuf.top G:228 SG com/z80asm.b[2258] linbuf.top:=0
linbuf.top G:228 SG com/z80asm.b[2265] linbuf.top:=linbuf.top+1
linbuf.top G:228 SG com/z80asm.b[2280] linbuf.top:=linbuf.top-1
linbuf.top G:228 SG com/z80asm.b[2290] linbuf.top:=savepos+1
linbuf.top G:228 SG com/z80asm.b[2291] linbuf.top:=savepos
linbuf.top G:228 SG com/z80asm.b[2296] linbuf.top:=linbuf.top+1
linbuf.top G:228 SG com/z80asm.b[2345] linbuf.top:=linbuf.top+1
linbuf.top G:228 SG com/z80asm.b[4087] linbuf.top:=item.start
linbufsize G:225 DEF com/z80asm.b[45] linbufsize=ug+25
linbufsize G:225 LG com/z80asm.b[2264]
    UNLESS linbuf.top>=linbufsize DO ..
linbufsize G:225 LG com/z80asm.b[2294]
    FOR i=linbuf.top TO pos-1>linbufsize->linbufsize,pos-1 DO..
linbufsize G:225 LG com/z80asm.b[2298]
    UNLESS linbuf.top>linbufsize DO ..
linbufsize G:225 LG com/z80asm.b[2343]
    UNLESS linbuf.top>=linbufsize DO ..
linbufsize G:225 LG com/z80asm.b[4285]
    linbuf:=simplegetvec(linbufsize/bytesperword+1)
linbufsize G:225 SG com/z80asm.b[4284]
    linbufsize:=pw+1-15+...*binbufwidth+2
line.just.outlined S:421 DEF com/z80asm.b[2462] line.just.outlined=-1
line.just.outlined S:421 LL com/z80asm.b[2470]
    TEST pass=second&lineno~=line.just.outlined THEN .. ELSE ..
line.just.outlined S:421 SL com/z80asm.b[2567]
    line.just.outlined:=lineno
line.of.file G:318 DEF com/z80asm.b[149] line.of.file=ug+118
line.of.file G:318 LG com/z80asm.b[2426]
    writef("*n*nFat'ne %N): ",file.id,line.of.file)
line.of.file G:318 LG com/z80asm.b[2523] writef("  %I5 ",line.of.file)
line.of.file G:318 LG com/z80asm.b[2526]
    writef("%I1  %I4 ",file.id,line.of.file)
line.of.file G:318 LG com/z80asm.b[2527]
    writef("%I2 %I4 ",file.id,line.of.file)
line.of.file G:318 LG com/z80asm.b[2597] line.of.file:=line.of.file+1
line.of.file G:318 LG com/z80asm.b[4305] resetfiles(line.of.file)
line.of.file G:318 LG com/z80asm.b[4326] state!in.lineno:=line.of.file
line.of.file G:318 LG com/z80asm.b[4410] state!in.lineno:=line.of.file
line.of.file G:318 LG com/z80asm.b[4427] resetfiles(line.of.file)
line.of.file G:318 LG com/z80asm.b[5166] line.of.file
line.of.file G:318 SG com/z80asm.b[2597] line.of.file:=line.of.file+1
line.of.file G:318 SG com/z80asm.b[4301] line.of.file:=0
line.of.file G:318 SG com/z80asm.b[4394] line.of.file:=state!in.lineno
line.of.file G:318 SG com/z80asm.b[5174] line.of.file:=0
line.of.file G:318 SG com/z80asm.b[5186] line.of.file:=saveln
lineno G:241 DEF com/z80asm.b[61] lineno=ug+41
lineno G:241 LG com/z80asm.b[1028] new.elem!t.info:=lineno
lineno G:241 LG com/z80asm.b[1042] rel.posn:=t!t.info-lineno
lineno G:241 LG com/z80asm.b[1063] t!t.info:=lineno
lineno G:241 LG com/z80asm.b[1093] t!t.info:=lineno
lineno G:241 LG com/z80asm.b[1146]
    iden.valid:=t=null|t!t.info>=lineno->FALSE,(t!t.type&type.mask)=ty
lineno G:241 LG com/z80asm.b[2470]
    TEST pass=second&lineno~=line.just.outlined THEN .. ELSE ..
lineno G:241 LG com/z80asm.b[2567] line.just.outlined:=lineno
lineno G:241 LG com/z80asm.b[2596] lineno:=lineno+1
lineno G:241 LG com/z80asm.b[2904] newfile!0:=lineno
lineno G:241 LG com/z80asm.b[2905] newfile!1:=lineno
lineno G:241 LG com/z80asm.b[2914] files!(fno+first.file-1)!1:=lineno
lineno G:241 LG com/z80asm.b[966] t=null->1,t!t.info-lineno
lineno G:241 SG com/z80asm.b[2596] lineno:=lineno+1
lineno G:241 SG com/z80asm.b[4300] lineno:=0
lineno G:241 SG com/z80asm.b[4433] lineno:=0
list G:236 DEF com/z80asm.b[56] list=ug+36
list G:236 LG com/z80asm.b[2398] list
list G:236 LG com/z80asm.b[2472] IF list>0&print DO ..
list G:236 LG com/z80asm.b[3211] list
list G:236 LG com/z80asm.b[3286] list
list G:236 LG com/z80asm.b[3576] list
list G:236 LG com/z80asm.b[3594] list
list G:236 LG com/z80asm.b[4330] state!in.list:=list
list G:236 LG com/z80asm.b[4409] state!in.list:=list
list G:236 LG com/z80asm.b[4412] IF list>0|allsyms|badlabs>0 DO ..
list G:236 LG com/z80asm.b[5130] IF list>0 DO ..
list G:236 LG com/z80asm.b[5143] IF list>0 DO ..
list G:236 LG com/z80asm.b[5152] UNLESS list>0 DO ..
list G:236 LG com/z80asm.b[5154] list:=list+1
list G:236 LG com/z80asm.b[5154] list:=list+expression()
list G:236 LG com/z80asm.b[5167] list
list G:236 LG com/z80asm.b[5173] list:=list-1
list G:236 LG com/z80asm.b[5325] IF list<0 DO ..
list G:236 LG com/z80asm.b[6729] list:=list-1
list G:236 LLG com/z80asm.b[5289] temp:=@list
list G:236 SG com/z80asm.b[2404] list:=1
list G:236 SG com/z80asm.b[2406] list:=savelist
list G:236 SG com/z80asm.b[3235] list:=0
list G:236 SG com/z80asm.b[3257] list:=savelist
list G:236 SG com/z80asm.b[3261] list:=savelist
list G:236 SG com/z80asm.b[3289] list:=0
list G:236 SG com/z80asm.b[3299] list:=savelist
list G:236 SG com/z80asm.b[3303] list:=savelist
list G:236 SG com/z80asm.b[3577] list:=0
list G:236 SG com/z80asm.b[3580] list:=savelist
list G:236 SG com/z80asm.b[3595] list:=0
list G:236 SG com/z80asm.b[3598] list:=savelist
list G:236 SG com/z80asm.b[4393] list:=state!in.list
list G:236 SG com/z80asm.b[5154] list:=list+1
list G:236 SG com/z80asm.b[5154] list:=list+expression()
list G:236 SG com/z80asm.b[5173] list:=list-1
list G:236 SG com/z80asm.b[5187] list:=savelist
list G:236 SG com/z80asm.b[5325] list:=1
list G:236 SG com/z80asm.b[5350] list:=1
list G:236 SG com/z80asm.b[5452] list:=0
list G:236 SG com/z80asm.b[6729] list:=list-1
listproc G:314 DEF com/z80asm.b[144] listproc=ug+114
listproc G:314 LG com/z80asm.b[6932] code.put("LIST",listproc,0)
listproc G:314 RT com/z80asm.b[5150] LET listproc(lab)BE..
lletter M:-87 DEF com/z80asm.b[4031] lletter=10-97
lletter M:-87 MAN com/z80asm.b[4203]
    48<=ch&ch<=57->ch-48,65<=ch&ch<=70->ch+uletter,97<=ch&ch<=102->ch+lletter,999
loadseg G:105 DEF libhdr.h[142] loadseg=105
localproc G:265 DEF com/z80asm.b[90] localproc=ug+65
localproc G:265 LG com/z80asm.b[6955] code.put("LOCAL",localproc,0)
localproc G:265 RT com/z80asm.b[3322] LET localproc(lab)BE..
locatedir G:80 DEF libhdr.h[116] locatedir=80
locatedir G:80 LG com/z80asm.b[5373] newdir:=locatedir(dir)
locateobj G:81 DEF libhdr.h[117] locateobj=81
longjump G:16 DEF libhdr.h[52] longjump=16
longjump G:16 LG com/z80asm.b[2436] longjump(errorlevel,errorlabel)
looktype G:211 DEF com/z80asm.b[27] looktype=ug+11
looktype G:211 FN com/z80asm.b[1143] LET looktype(ty,s)=..
looktype G:211 LG com/z80asm.b[3548] looktype(type,item.info)
looktype G:211 LG com/z80asm.b[3715] looktype(type.text,item.info)
looktype G:211 LG com/z80asm.b[4082]
    macro:=looktype(type.text,item.info)
looktype G:211 LG com/z80asm.b[4530]
    macro:=looktype(type.macro,item.info)
macro.chars M:2 DEF com/z80asm.b[3164] macro.chars=2
macro.chars M:2 MAN com/z80asm.b[3203]
    call.macro(macro.activation,macro!macro.text,macro!macro.chars,10)
macro.chars M:2 MAN com/z80asm.b[3300]
    call.macro(macro.var(0,rpt.factor),macro!macro.text,macro!macro.chars,10)
macro.chars M:2 MAN com/z80asm.b[3397] macro!macro.chars:=0
macro.chars M:2 MAN com/z80asm.b[3411] macro!macro.chars-1
macro.chars M:2 MAN com/z80asm.b[3417]
    macro!macro.chars:=chptr<=0->0,chptr+1
macro.chars M:2 MAN com/z80asm.b[3423]
    size:=(macro!macro.chars+bytesperword-1)/bytesperword
macro.chars M:2 MAN com/z80asm.b[3484] macro!macro.chars
macro.chars M:2 MAN com/z80asm.b[3494] macro!macro.chars:=chno+1
macro.next M:0 DEF com/z80asm.b[3162] macro.next=0
macro.next M:0 MAN com/z80asm.b[3219] macro!macro.next:=null
macro.next M:0 MAN com/z80asm.b[3290] macro!macro.next:=null
macro.parms M:3 DEF com/z80asm.b[3165] macro.parms=3
macro.parms M:3 MAN com/z80asm.b[3174] macro!macro.parms
macro.parms M:3 MAN com/z80asm.b[3220] macro!macro.parms:=null
macro.parms M:3 MAN com/z80asm.b[3291] macro!macro.parms:=null
macro.parms M:3 MAN com/z80asm.b[3434] macro+macro.parms
macro.rdch G:246 DEF com/z80asm.b[68] macro.rdch=ug+46
macro.rdch G:246 FN com/z80asm.b[2763] LET macro.rdch()=..
macro.rdch G:246 LG com/z80asm.b[2488] rdch=macro.rdch&~print.expansions
macro.rdch G:246 LG com/z80asm.b[2597] UNLESS rdch=macro.rdch DO ..
macro.rdch G:246 LG com/z80asm.b[2749] rdch:=macro.rdch
macro.savrdch S:487 DEF com/z80asm.b[2682] macro.savrdch=0
macro.savrdch S:487 LL com/z80asm.b[2781] rdch:=macro.savrdch
macro.savrdch S:487 SL com/z80asm.b[2748] macro.savrdch:=rdch
macro.stack G:243 DEF com/z80asm.b[65] macro.stack=ug+43
macro.stack G:243 LG com/z80asm.b[2708] macro.stack
macro.stack G:243 LG com/z80asm.b[2747] IF macro.stack=null DO ..
macro.stack G:243 LG com/z80asm.b[2751]
    activation!text.link:=macro.stack
macro.stack G:243 LG com/z80asm.b[2772] macro.stack
macro.stack G:243 LG com/z80asm.b[2778]
    IF macro.stack<memory!0+memory DO ..
macro.stack G:243 LG com/z80asm.b[2779] memory!0:=macro.stack-memory
macro.stack G:243 LG com/z80asm.b[2780]
    macro.stack:=macro.stack!text.link
macro.stack G:243 LG com/z80asm.b[2781] IF macro.stack=null DO ..
macro.stack G:243 LG com/z80asm.b[2805]
    .. REPEATUNTIL character.found|macro.stack=null
macro.stack G:243 LG com/z80asm.b[2813]
    macro.stack=null->FALSE,(VALOF{..})
macro.stack G:243 LG com/z80asm.b[2814] macro.stack
macro.stack G:243 LG com/z80asm.b[3346]
    TEST macro.stack=null THEN .. ELSE ..
macro.stack G:243 LG com/z80asm.b[3349]
    stacktext(macro.stack,item.info,gen.label())
macro.stack G:243 SG com/z80asm.b[2752] macro.stack:=activation
macro.stack G:243 SG com/z80asm.b[2780]
    macro.stack:=macro.stack!text.link
macro.stack G:243 SG com/z80asm.b[4293] macro.stack:=null
macro.text M:1 DEF com/z80asm.b[3163] macro.text=1
macro.text M:1 MAN com/z80asm.b[3203]
    call.macro(macro.activation,macro!macro.text,macro!macro.chars,10)
macro.text M:1 MAN com/z80asm.b[3249] macro!macro.text
macro.text M:1 MAN com/z80asm.b[3252] macro!macro.text:=text.area
macro.text M:1 MAN com/z80asm.b[3300]
    call.macro(macro.var(0,rpt.factor),macro!macro.text,macro!macro.chars,10)
macro.text M:1 MAN com/z80asm.b[3391]
    write.macro->tempgetvec(-1),macro!macro.text
macro.text M:1 MAN com/z80asm.b[3394]
    macro!macro.text:=write.macro->text,null
macro.text M:1 MAN com/z80asm.b[3408]
    IF macro!macro.text=null&write.macro DO ..
macro.text M:1 MAN com/z80asm.b[3409] UNLESS macro!macro.text=null DO ..
macro.text M:1 MAN com/z80asm.b[3422]
    IF macro!macro.text~=null|~write.macro DO ..
macro.text M:1 MAN com/z80asm.b[3424] macro!macro.text:=text
macro.text M:1 MAN com/z80asm.b[3482] macro!macro.text
macro.text M:1 MAN com/z80asm.b[3490] macro!macro.text:=null
macro.var G:247 DEF com/z80asm.b[69] macro.var=ug+47
macro.var G:247 FN com/z80asm.b[2703]
    LET macro.var(start.pos,expansions)=..
macro.var G:247 LG com/z80asm.b[3175] macro.var(0,1)
macro.var G:247 LG com/z80asm.b[3300]
    call.macro(macro.var(0,rpt.factor),macro!macro.text,macro!macro.chars,10)
macro.var G:247 LG com/z80asm.b[4089]
    call.macro(macro.var(1,1),macro,macro%0+1,endstreamch)
macro.wrch G:253 DEF com/z80asm.b[77] macro.wrch=ug+53
macro.wrch G:253 LG com/z80asm.b[2348] macro.wrch(filling.macro,ch)
macro.wrch G:253 RT com/z80asm.b[3479] LET macro.wrch(macro,ch)BE..
macroproc G:257 DEF com/z80asm.b[82] macroproc=ug+57
macroproc G:257 LG com/z80asm.b[3400]
    mnemproc:=find.mnem(@lab,4,macroproc,...)
macroproc G:257 LG com/z80asm.b[6939] code.put("MACRO",macroproc,0)
macroproc G:257 RT com/z80asm.b[3210] LET macroproc(lab)BE..
macrosize M:4 DEF com/z80asm.b[3166] macrosize=4
macrosize M:4 MAN com/z80asm.b[3216] macro:=simplegetvec(macrosize-1)
macrosize M:4 MAN com/z80asm.b[3285] tempgetvec(macrosize-1)
max.files G:316 DEF com/z80asm.b[147] max.files=ug+116
max.files G:316 LG com/z80asm.b[2898]
    TEST 0<=files!no.of.files&files!no.of.files<=max.files THEN .. ELSE ..
max.files G:316 LG com/z80asm.b[4303] files:=simplegetvec(max.files)
max.files G:316 LG com/z80asm.b[5327]
    error:=error|...|pw<50|~(...&...)|max.files<=1
max.files G:316 LLG com/z80asm.b[5293] temp:=@max.files
max.files G:316 SG com/z80asm.b[5457] max.files:=25
max.temp.used G:342 DEF com/z80asm.b[177] max.temp.used=ug+142
max.temp.used G:342 LG com/z80asm.b[4338]
    memsize-memory!memsize+max.temp.used
max.temp.used G:342 LG com/z80asm.b[737] IF memory!0>max.temp.used DO ..
max.temp.used G:342 SG com/z80asm.b[4312] max.temp.used:=0
max.temp.used G:342 SG com/z80asm.b[4424] max.temp.used:=0
max.temp.used G:342 SG com/z80asm.b[737] max.temp.used:=memory!0
maxint M:#x7FFFFFFF DEF libhdr.h[245] maxint=minint-1
mcaddrinc M:4 DEF libhdr.h[243] mcaddrinc=bytesperword
memory G:341 DEF com/z80asm.b[176] memory=ug+141
memory G:341 LG com/z80asm.b[2778] IF macro.stack<memory!0+memory DO ..
memory G:341 LG com/z80asm.b[2779] memory!0:=macro.stack-memory
memory G:341 LG com/z80asm.b[3277] memory!0
memory G:341 LG com/z80asm.b[3304] memory!0:=mark.on.temp
memory G:341 LG com/z80asm.b[3487] memsize-text-memory
memory G:341 LG com/z80asm.b[3556] memory!0
memory G:341 LG com/z80asm.b[3569] memory!0:=mark.mem
memory G:341 LG com/z80asm.b[3666] memory!0:=buffer-memory
memory G:341 LG com/z80asm.b[4331] state!in.memlevel:=memory!memsize
memory G:341 LG com/z80asm.b[4338] memsize-memory!memsize+max.temp.used
memory G:341 LG com/z80asm.b[4422] memory!memsize:=state!in.memlevel
memory G:341 LG com/z80asm.b[4423] memory!0:=1
memory G:341 LG com/z80asm.b[5472]
    TEST memsize<100|memory=0 THEN .. ELSE ..
memory G:341 LG com/z80asm.b[5484] memory!0:=1
memory G:341 LG com/z80asm.b[5485] memory!memsize:=memsize
memory G:341 LG com/z80asm.b[5520] UNLESS memory=0 DO ..
memory G:341 LG com/z80asm.b[5520] freevec(memory)
memory G:341 LG com/z80asm.b[734]
    UNLESS memory!0+n+1>memory!memsize DO ..
memory G:341 LG com/z80asm.b[735] ans:=@memory!memory!0
memory G:341 LG com/z80asm.b[736] memory!0:=memory!0+n+1
memory G:341 LG com/z80asm.b[737] IF memory!0>max.temp.used DO ..
memory G:341 LG com/z80asm.b[737] max.temp.used:=memory!0
memory G:341 LG com/z80asm.b[752]
    TEST memory!0>memory!memsize-n+1 THEN .. ELSE ..
memory G:341 LG com/z80asm.b[753] ans:=@memory!(memory!memsize-n+1)
memory G:341 LG com/z80asm.b[754] memory!memsize:=memory!memsize-n+1
memory G:341 LG com/z80asm.b[908] hash.table.size:=(memsize-memory!0)/12
memory G:341 SG com/z80asm.b[5471] memory:=getvec(memsize)
memoryfree G:131 DEF libhdr.h[168] memoryfree=131
memsize G:383 DEF com/z80asm.b[225] memsize=ug+183
memsize G:383 LG com/z80asm.b[3487] memsize-text-memory
memsize G:383 LG com/z80asm.b[4331] state!in.memlevel:=memory!memsize
memsize G:383 LG com/z80asm.b[4338] memsize-memory!memsize+max.temp.used
memsize G:383 LG com/z80asm.b[4422] memory!memsize:=state!in.memlevel
memsize G:383 LG com/z80asm.b[5327]
    error:=error|...|pw<50|~(...&...)|max.files<=1
memsize G:383 LG com/z80asm.b[5471] memory:=getvec(memsize)
memsize G:383 LG com/z80asm.b[5472]
    TEST memsize<100|memory=0 THEN .. ELSE ..
memsize G:383 LG com/z80asm.b[5485] memory!memsize:=memsize
memsize G:383 LG com/z80asm.b[734]
    UNLESS memory!0+n+1>memory!memsize DO ..
memsize G:383 LG com/z80asm.b[752]
    TEST memory!0>memory!memsize-n+1 THEN .. ELSE ..
memsize G:383 LG com/z80asm.b[753] ans:=@memory!(memory!memsize-n+1)
memsize G:383 LG com/z80asm.b[754] memory!memsize:=memory!memsize-n+1
memsize G:383 LG com/z80asm.b[908]
    hash.table.size:=(memsize-memory!0)/12
memsize G:383 LLG com/z80asm.b[5285] temp:=@memsize
memsize G:383 SG com/z80asm.b[5450] memsize:=3000
minint M:#x80000000 DEF libhdr.h[244] minint=1<<bitsperword-1
minint M:#x80000000 MAN libhdr.h[245] maxint=minint-1
mode G:348 DEF com/z80asm.b[185] mode=ug+148
mode G:348 LG com/z80asm.b[1271] neads(...+...+1+3+(badlabs>0->1,0)+1+1)
mode G:348 LG com/z80asm.b[1422]
    TEST (typecode&flag.rel)=0&mode=relative THEN .. ELSE ..
mode G:348 LG com/z80asm.b[4378] IF mode=null DO ..
mode G:348 LG com/z80asm.b[4379]
    code.gen(cd.module,mode=absolute,modulename)
mode G:348 LG com/z80asm.b[4556] IF mode=null DO ..
mode G:348 LG com/z80asm.b[4559]
    putlab(lab,pc,(mode=absolute->type.lab,type.rellab)|(def.count>0->flag.def,0))
mode G:348 LG com/z80asm.b[4612] IF mode=null DO ..
mode G:348 LG com/z80asm.b[4613] UNLESS mode=absolute DO ..
mode G:348 LG com/z80asm.b[4773] TEST mode=relative THEN .. ELSE ..
mode G:348 LG com/z80asm.b[4812] TEST mode=relative THEN .. ELSE ..
mode G:348 LG com/z80asm.b[5034] TEST mode=null THEN .. ELSE ..
mode G:348 LG com/z80asm.b[5044] TEST mode=null THEN .. ELSE ..
mode G:348 SG com/z80asm.b[4307] mode:=null
mode G:348 SG com/z80asm.b[4378] mode:=absolute
mode G:348 SG com/z80asm.b[4430] mode:=null
mode G:348 SG com/z80asm.b[4556] mode:=absolute
mode G:348 SG com/z80asm.b[4612] mode:=absolute
mode G:348 SG com/z80asm.b[4777] mode:=absolute
mode G:348 SG com/z80asm.b[4812] mode:=absolute
mode G:348 SG com/z80asm.b[5034] mode:=absolute
mode G:348 SG com/z80asm.b[5044] mode:=relative
modulename G:347 DEF com/z80asm.b[184] modulename=ug+147
modulename G:347 LG com/z80asm.b[4379]
    code.gen(cd.module,mode=absolute,modulename)
modulename G:347 SG com/z80asm.b[4314] modulename:=null
modulename G:347 SG com/z80asm.b[4419] modulename:=null
modulename G:347 SG com/z80asm.b[4927]
    modulename:=lab=null->pagetitle,getstr(lab,simplegetvec)
movebinword G:219 DEF com/z80asm.b[37] movebinword=ug+19
movebinword G:219 RT com/z80asm.b[1651] LET movebinword(places)BE..
msbytefirst G:376 DEF com/z80asm.b[216] msbytefirst=ug+176
msbytefirst G:376 LG com/z80asm.b[1640]
    TEST ~msbytefirst THEN .. ELSE ..
msbytefirst G:376 LG com/z80asm.b[4380]
    code.gen(cd.code,name,(bytesperasmword&15)<<12|(...&15)<<8|(msbytefirst->1,0))
msbytefirst G:376 SG com/z80asm.b[5427] msbytefirst:=FALSE
mscharfirst G:375 DEF com/z80asm.b[215] mscharfirst=ug+175
mscharfirst G:375 LG com/z80asm.b[4898] TEST mscharfirst THEN .. ELSE ..
mscharfirst G:375 SG com/z80asm.b[5428] mscharfirst:=TRUE
muldiv G:5 DEF libhdr.h[40] muldiv=5
mywrch G:232 DEF com/z80asm.b[52] mywrch=ug+32
mywrch G:232 LG com/z80asm.b[4310] wrch:=mywrch
mywrch G:232 RT com/z80asm.b[2606] LET mywrch(c)BE..
name G:363 DEF com/z80asm.b[204] name=ug+163
name G:363 LG com/z80asm.b[2632] writef("%S as'mbler %S",name,dat)
name G:363 LG com/z80asm.b[2633] len:=10+name%0+1+dat%0
name G:363 LG com/z80asm.b[3367] writef("%S: %S*n",name,str)
name G:363 LG com/z80asm.b[4380]
    code.gen(cd.code,name,(bytesperasmword&15)<<12|(...&15)<<8|(msbytefirst->1,0))
name G:363 LG com/z80asm.b[4476]
    writef("****** B'tion %N*n",name,pass=first->"first","second",sectno)
name G:363 LG com/z80asm.b[5366] IF ans=0&prefix%0+name%0<40 DO ..
name G:363 LG com/z80asm.b[5371] FOR i=1 TO name%0 DO..
name G:363 LG com/z80asm.b[5371] dir%(prefix%0+i):=name%i
name G:363 LG com/z80asm.b[5372] dir%0:=prefix%0+name%0
name G:363 LG com/z80asm.b[5462] writef("Bad a'sembler*n",name)
name G:363 LG com/z80asm.b[5464] writef("Bad O'sembler*n",name)
name G:363 LG com/z80asm.b[5467]
    writef("%S as'er.  %S*n",name,versionid)
name G:363 SG com/z80asm.b[5441] name:="unnamed"
name G:363 SG com/z80asm.b[7039] name:="Z80"
neads G:242 DEF com/z80asm.b[62] neads=ug+42
neads G:242 LG com/z80asm.b[1271]
    neads(...+...+1+3+(badlabs>0->1,0)+1+1)
neads G:242 LG com/z80asm.b[2401] neads(short->2,3)
neads G:242 LG com/z80asm.b[5145] neads(lines)
neads G:242 RT com/z80asm.b[2652] LET neads(lines)BE..
needsproc G:303 DEF com/z80asm.b[133] needsproc=ug+103
needsproc G:303 LG com/z80asm.b[6923] code.put("NEEDS",needsproc,0)
needsproc G:303 RT com/z80asm.b[5070] LET needsproc(lab)BE..
newf G:333 DEF com/z80asm.b[166] newf=ug+133
newf G:333 FN com/z80asm.b[2999] LET newf(pos,len)=..
newf G:333 LG com/z80asm.b[7042] f.rinfo:=newf(0,3)
newf G:333 LG com/z80asm.b[7043] f.ccinfo:=newf(3,3)
newf G:333 LG com/z80asm.b[7044] f.ddinfo:=newf(0,2)
newf G:333 LG com/z80asm.b[7045] f.source:=newf(3,3)
newf G:333 LG com/z80asm.b[7046] f.ddsource:=newf(4,2)
newf G:333 LG com/z80asm.b[7047] f.dest:=newf(0,3)
newf G:333 LG com/z80asm.b[7048] f.top:=newf(6,2)
newf G:333 LG com/z80asm.b[7049] f.ccsmall:=newf(3,2)
newfile G:319 DEF com/z80asm.b[150] newfile=ug+119
newfile G:319 FN com/z80asm.b[2897] LET newfile(s)=..
newfile G:319 LG com/z80asm.b[5169]
    newfile(item.info%0=0->fromfile,item.info)
newline G:84 DEF libhdr.h[120] newline=84
newlyne G:238 DEF com/z80asm.b[58] newlyne=ug+38
newlyne G:238 LG com/z80asm.b[4168] newlyne()
newlyne G:238 LG com/z80asm.b[4499] newlyne()
newlyne G:238 RT com/z80asm.b[2593] LET newlyne()BE..
newpage G:120 DEF libhdr.h[157] newpage=120
newsection G:358 DEF com/z80asm.b[197] newsection=ug+158
newsection G:358 RT com/z80asm.b[4568] LET newsection()BE..
next.string F:107 LAB com/z80asm.b[935]
    next.string:dicposn:=t.link!dicposn
next.string F:107 LF com/z80asm.b[930] GOTO next.string
nextpass G:292 DEF com/z80asm.b[120] nextpass=ug+92
nextpass G:292 LG com/z80asm.b[4344] nextpass()
nextpass G:292 RT com/z80asm.b[4372] LET nextpass()BE..
no.of.files M:0 DEF com/z80asm.b[2878] no.of.files=0
no.of.files M:0 MAN com/z80asm.b[2898]
    TEST 0<=files!no.of.files&files!no.of.files<=max.files THEN .. ELSE ..
no.of.files M:0 MAN com/z80asm.b[2901]
    files!(files!no.of.files+1):=newfile
no.of.files M:0 MAN com/z80asm.b[2908]
    files!no.of.files:=files!no.of.files+1
no.of.files M:0 MAN com/z80asm.b[2909]
    RESULTIS files!no.of.files-first.file+1
no.of.files M:0 MAN com/z80asm.b[2919]
    FOR i=first.file TO files!no.of.files DO..
no.of.files M:0 MAN com/z80asm.b[2928] files!no.of.files:=first.file-1
nolistproc F:1542 LF com/z80asm.b[6933] code.put("NOLIST",nolistproc,0)
nolistproc F:1542 RT com/z80asm.b[6727] LET nolistproc(lab)BE..
note G:63 DEF libhdr.h[99] note=63
notinuse M:-1 DEF libhdr.h[604] notinuse=-1
null M:0 DEF com/z80asm.b[278] null=0
null M:0 MAN com/z80asm.b[1021] TEST !t=null THEN .. ELSE ..
null M:0 MAN com/z80asm.b[1031] new.elem!t.link:=null
null M:0 MAN com/z80asm.b[1037] IF t=null DO ..
null M:0 MAN com/z80asm.b[1146]
    iden.valid:=t=null|t!t.info>=lineno->FALSE,(t!t.type&type.mask)=ty
null M:0 MAN com/z80asm.b[1155] TEST sym=null THEN .. ELSE ..
null M:0 MAN com/z80asm.b[1171]
    IF ans=null&pass=second|ans~=null&(ans!t.type&type.mask)~=ty DO ..
null M:0 MAN com/z80asm.b[1176] RESULTIS ans=null->-1,ans!t.val
null M:0 MAN com/z80asm.b[1250] WHILE entry~=null DO ..
null M:0 MAN com/z80asm.b[1267]
    sort.list(@list,null,null,t.link,compare)
null M:0 MAN com/z80asm.b[1278] WHILE list~=null DO ..
null M:0 MAN com/z80asm.b[1327] WHILE entry~=null DO ..
null M:0 MAN com/z80asm.b[1350]
    IF hash.table!hash.table.size~=null DO ..
null M:0 MAN com/z80asm.b[1364] IF !anchor~=null DO ..
null M:0 MAN com/z80asm.b[1369] WHILE t.link!entry~=null DO ..
null M:0 MAN com/z80asm.b[1381] !anchor:=null
null M:0 MAN com/z80asm.b[1408] WHILE t~=null DO ..
null M:0 MAN com/z80asm.b[2704] RESULTIS null
null M:0 MAN com/z80asm.b[2710] WHILE p~=null DO ..
null M:0 MAN com/z80asm.b[2716] activation!text.link:=null
null M:0 MAN com/z80asm.b[2717] activation!text.block:=null
null M:0 MAN com/z80asm.b[2720] activation!text.parms:=null
null M:0 MAN com/z80asm.b[2746] UNLESS activation=null DO ..
null M:0 MAN com/z80asm.b[2747] IF macro.stack=null DO ..
null M:0 MAN com/z80asm.b[2754]
    activation!text.chars:=text.area=null->0,charlen
null M:0 MAN com/z80asm.b[2781] IF macro.stack=null DO ..
null M:0 MAN com/z80asm.b[2787] WHILE parms~=null DO ..
null M:0 MAN com/z80asm.b[2805]
    .. REPEATUNTIL character.found|macro.stack=null
null M:0 MAN com/z80asm.b[2813] macro.stack=null->FALSE,(VALOF{..})
null M:0 MAN com/z80asm.b[2829] TEST activation=null THEN .. ELSE ..
null M:0 MAN com/z80asm.b[2836] TEST local=null THEN .. ELSE ..
null M:0 MAN com/z80asm.b[2902] TEST newfile=null THEN .. ELSE ..
null M:0 MAN com/z80asm.b[3037] IF !lvtree=null DO ..
null M:0 MAN com/z80asm.b[3039] newitem!t.left:=null
null M:0 MAN com/z80asm.b[3039] newitem!t.right:=null
null M:0 MAN com/z80asm.b[3055] IF tree=null DO ..
null M:0 MAN com/z80asm.b[3096] RESULTIS t=null->null,t!t.val
null M:0 MAN com/z80asm.b[3117] syms=null
null M:0 MAN com/z80asm.b[3133] RESULTIS t=null->r.bad,t!t.val
null M:0 MAN com/z80asm.b[3182] str:=strexp(null,0,FALSE)
null M:0 MAN com/z80asm.b[3184] UNLESS parm=null DO ..
null M:0 MAN com/z80asm.b[3193] WHILE parm~=null DO ..
null M:0 MAN com/z80asm.b[3214] TEST lab=null THEN .. ELSE ..
null M:0 MAN com/z80asm.b[3219] macro!macro.next:=null
null M:0 MAN com/z80asm.b[3220] macro!macro.parms:=null
null M:0 MAN com/z80asm.b[3288] IF macro=null DO ..
null M:0 MAN com/z80asm.b[3290] macro!macro.next:=null
null M:0 MAN com/z80asm.b[3291] macro!macro.parms:=null
null M:0 MAN com/z80asm.b[3346] TEST macro.stack=null THEN .. ELSE ..
null M:0 MAN com/z80asm.b[3364] str:=strexp(null,0,TRUE)
null M:0 MAN com/z80asm.b[3394] macro!macro.text:=write.macro->text,null
null M:0 MAN com/z80asm.b[3402]
    TEST mnemproc=null|mnemproc=endproc THEN .. ELSE ..
null M:0 MAN com/z80asm.b[3408]
    IF macro!macro.text=null&write.macro DO ..
null M:0 MAN com/z80asm.b[3409] UNLESS macro!macro.text=null DO ..
null M:0 MAN com/z80asm.b[3422]
    IF macro!macro.text~=null|~write.macro DO ..
null M:0 MAN com/z80asm.b[3426] UNLESS mnemproc=null DO ..
null M:0 MAN com/z80asm.b[3437] parm.copy!0:=null
null M:0 MAN com/z80asm.b[3438] WHILE !p~=null DO ..
null M:0 MAN com/z80asm.b[3463] UNLESS mnem=null DO ..
null M:0 MAN com/z80asm.b[3465] IF i=n|mnem=null DO ..
null M:0 MAN com/z80asm.b[3467]
    .. REPEATUNTIL item.type=i.end|fatal|i~=n&mnem~=null|finishpass
null M:0 MAN com/z80asm.b[3472] RESULTIS i=n|mnem=null->null,mnem!c.fn
null M:0 MAN com/z80asm.b[3483] UNLESS text=null DO ..
null M:0 MAN com/z80asm.b[3490] macro!macro.text:=null
null M:0 MAN com/z80asm.b[3554]
    arg1:=is.string->strexp(null,0,...),expression()
null M:0 MAN com/z80asm.b[3562]
    arg2:=is.string->strexp(null,0,FALSE),expression()
null M:0 MAN com/z80asm.b[3622]
    TEST mnemproc=null|mnemproc=endproc THEN .. ELSE ..
null M:0 MAN com/z80asm.b[3631] UNLESS mnemproc=null DO ..
null M:0 MAN com/z80asm.b[3746] null
null M:0 MAN com/z80asm.b[3770] RESULTIS null
null M:0 MAN com/z80asm.b[3772] TEST base.proc=null THEN .. ELSE ..
null M:0 MAN com/z80asm.b[4060] item.info:=null
null M:0 MAN com/z80asm.b[4293] macro.stack:=null
null M:0 MAN com/z80asm.b[4307] mode:=null
null M:0 MAN com/z80asm.b[4313] pagetitle:=null
null M:0 MAN com/z80asm.b[4314] modulename:=null
null M:0 MAN com/z80asm.b[4378] IF mode=null DO ..
null M:0 MAN com/z80asm.b[4418] pagetitle:=null
null M:0 MAN com/z80asm.b[4419] modulename:=null
null M:0 MAN com/z80asm.b[4430] mode:=null
null M:0 MAN com/z80asm.b[4457] TEST mnem=null THEN .. ELSE ..
null M:0 MAN com/z80asm.b[4495] null
null M:0 MAN com/z80asm.b[4506] !lv.lab:=null
null M:0 MAN com/z80asm.b[4518]
    !lv.mt.line:=!lv.lab=null&(item.type=i.stop|item.type=i.end|item.type=i.comnt)
null M:0 MAN com/z80asm.b[4525] UNLESS !lv.lab=null&active.read DO ..
null M:0 MAN com/z80asm.b[4555] UNLESS lab=null DO ..
null M:0 MAN com/z80asm.b[4556] IF mode=null DO ..
null M:0 MAN com/z80asm.b[4612] IF mode=null DO ..
null M:0 MAN com/z80asm.b[4769]
    UNLESS getlab(item.info,ansvec)=null DO ..
null M:0 MAN com/z80asm.b[4823] strexp(null,0)
null M:0 MAN com/z80asm.b[4892] item.info:=strexp(null,0,FALSE)
null M:0 MAN com/z80asm.b[4926]
    pagetitle:=getstr(strexp(null,...),simplegetvec)
null M:0 MAN com/z80asm.b[4927]
    modulename:=lab=null->pagetitle,getstr(lab,simplegetvec)
null M:0 MAN com/z80asm.b[4939] str:=strexp(null,0,TRUE)
null M:0 MAN com/z80asm.b[4949] TEST lab=null THEN .. ELSE ..
null M:0 MAN com/z80asm.b[4963] TEST lab=null THEN .. ELSE ..
null M:0 MAN com/z80asm.b[4980] IF lab=null DO ..
null M:0 MAN com/z80asm.b[4981] str:=strexp(null,0,TRUE)
null M:0 MAN com/z80asm.b[5034] TEST mode=null THEN .. ELSE ..
null M:0 MAN com/z80asm.b[5035] UNLESS lab=null|pass=second DO ..
null M:0 MAN com/z80asm.b[5044] TEST mode=null THEN .. ELSE ..
null M:0 MAN com/z80asm.b[5045] UNLESS lab=null|pass=second DO ..
null M:0 MAN com/z80asm.b[5117] str:=strexp(null,0,TRUE)
null M:0 MAN com/z80asm.b[5264] UNLESS s=null DO ..
null M:0 MAN com/z80asm.b[5488] codes:=null
null M:0 MAN com/z80asm.b[6423] jmp(null,cc)
null M:0 MAN com/z80asm.b[733] null
null M:0 MAN com/z80asm.b[751] null
null M:0 MAN com/z80asm.b[786] TEST s=null THEN .. ELSE ..
null M:0 MAN com/z80asm.b[921] hash.table!i:=null
null M:0 MAN com/z80asm.b[925] WHILE t.link!dicposn~=null DO ..
null M:0 MAN com/z80asm.b[965] t=null->type.none,t!t.type&type.mask
null M:0 MAN com/z80asm.b[966] t=null->1,t!t.info-lineno
null M:0 MAN com/z80asm.b[967]
    IF t=null|rel.pos>=0|symty=type.ref|symty=type.none|(t!t.type&flag.fwd)~=0 DO ..
null M:0 MAN com/z80asm.b[971]
    iden.valid:=~(t=null->pass=second,...~=0&rel.pos>=0)
null M:0 MAN com/z80asm.b[986] UNLESS ans=null DO ..
oldpc S:290 DEF com/z80asm.b[1721] oldpc=-1
oldpc S:290 LL com/z80asm.b[1760] type=cd.data->oldpc-blocklen,0
oldpc S:290 LL com/z80asm.b[1791] UNLESS oldpc=arg DO ..
oldpc S:290 LL com/z80asm.b[1794] oldpc>=0->1,-1
oldpc S:290 LL com/z80asm.b[1795]
    IF hex!0>0|(s1=s2->s1*(arg-oldpc),s2)<0|first.valid DO ..
oldpc S:290 LL com/z80asm.b[1815] overflowing:=oldpc=65535
oldpc S:290 LL com/z80asm.b[1818] oldpc:=oldpc+1
oldpc S:290 SL com/z80asm.b[1805] oldpc:=arg
oldpc S:290 SL com/z80asm.b[1818] oldpc:=oldpc+1
oldpc S:290 SL com/z80asm.b[1827] oldpc:=65535
optproc G:264 DEF com/z80asm.b[89] optproc=ug+64
optproc G:264 LG com/z80asm.b[6956] code.put("OPT",optproc,0)
orgproc G:310 DEF com/z80asm.b[140] orgproc=ug+110
orgproc G:310 LG com/z80asm.b[6928] code.put("ORG",orgproc,0)
orgproc G:310 RT com/z80asm.b[5004] LET orgproc(lab)BE..
out G:382 DEF com/z80asm.b[224] out=ug+182
out G:382 LG com/z80asm.b[2425] selectoutput(out)
out G:382 LG com/z80asm.b[3366] selectoutput(out)
out G:382 LG com/z80asm.b[4352] selectoutput(out)
out G:382 LG com/z80asm.b[4387] selectoutput(out)
out G:382 LG com/z80asm.b[4928] selectoutput(out)
out G:382 LG com/z80asm.b[5483] UNLESS out=listfile DO ..
out G:382 LG com/z80asm.b[5495] selectoutput(out)
out G:382 LG com/z80asm.b[5511] UNLESS listfile=0|listfile=out DO ..
out G:382 LG com/z80asm.b[5519] selectoutput(out)
out G:382 SG com/z80asm.b[5470] out:=output()
outfield M:32 DEF com/z80asm.b[1283] outfield=32
outfield M:32 MAN com/z80asm.b[1284] IF chpos+outfield>pw DO ..
outfield M:32 MAN com/z80asm.b[1290] chpos:=chpos+outfield
outhex G:221 DEF com/z80asm.b[39] outhex=ug+21
outhex G:221 LG com/z80asm.b[1746] outhex(info>>i*b&m)
outhex G:221 LG com/z80asm.b[1748] outhex(-sum)
outhex G:221 LG com/z80asm.b[1768] outhex(hex!i)
outhex G:221 LG com/z80asm.b[1770] outhex(-sum)
outhex G:221 LG com/z80asm.b[1831]
    outhex(-1+(arg&byte1)+((arg&byte2)>>8))
outhex G:221 LG com/z80asm.b[2537] outhex(binbuf!i)
outhex G:221 RT com/z80asm.b[1662] LET outhex(n)BE..
outline G:237 DEF com/z80asm.b[57] outline=ug+37
outline G:237 LG com/z80asm.b[2397] outline(32,TRUE)
outline G:237 LG com/z80asm.b[2405] outline(42,TRUE)
outline G:237 LG com/z80asm.b[2588] outline(32,print)
outline G:237 RT com/z80asm.b[2458] LET outline(firstchar,print)BE..
outpos G:240 DEF com/z80asm.b[60] outpos=ug+40
outpos G:240 LG com/z80asm.b[2621] outpos:=outpos+1
outpos G:240 LG com/z80asm.b[2623] IF (outpos&byte1)>pl DO ..
outpos G:240 LG com/z80asm.b[2642]
    writef("Page %I3*n*n*n",(outpos&byte2)>>8)
outpos G:240 LG com/z80asm.b[2643] outpos:=(outpos&byte2)+(1<<8)
outpos G:240 LG com/z80asm.b[2653] IF lines+(outpos&byte1)>pl DO ..
outpos G:240 SG com/z80asm.b[2621] outpos:=outpos+1
outpos G:240 SG com/z80asm.b[2643] outpos:=(outpos&byte2)+(1<<8)
outpos G:240 SG com/z80asm.b[4309] outpos:=1<<8
output G:59 DEF libhdr.h[95] output=59
output G:59 LG com/z80asm.b[1776] output()
output G:59 LG com/z80asm.b[2424] output()
output G:59 LG com/z80asm.b[3362] output()
output G:59 LG com/z80asm.b[4351] output()
output G:59 LG com/z80asm.b[4386] output()
output G:59 LG com/z80asm.b[4921] output()
output G:59 LG com/z80asm.b[5469]
    listfile:=outfile=0->output(),findoutput(outfile)
output G:59 LG com/z80asm.b[5470] out:=output()
overflowing S:293 DEF com/z80asm.b[1724] overflowing=FALSE
overflowing S:293 LL com/z80asm.b[1812] IF overflowing DO ..
overflowing S:293 LL com/z80asm.b[1827] IF overflowing&hex!0=0 DO ..
overflowing S:293 SL com/z80asm.b[1815] overflowing:=oldpc=65535
packstring G:30 DEF libhdr.h[66] packstring=30
pagetitle G:346 DEF com/z80asm.b[183] pagetitle=ug+146
pagetitle G:346 LG com/z80asm.b[2634] UNLESS pagetitle=0 DO ..
pagetitle G:346 LG com/z80asm.b[2635]
    FOR i=len TO (pw-pagetitle%0)/2 DO..
pagetitle G:346 LG com/z80asm.b[2638] writes(pagetitle)
pagetitle G:346 LG com/z80asm.b[2639] len:=len+pagetitle%0
pagetitle G:346 LG com/z80asm.b[4927]
    modulename:=lab=null->pagetitle,getstr(lab,simplegetvec)
pagetitle G:346 LG com/z80asm.b[4929]
    writef("Assem'ng *"%S*" ",pagetitle)
pagetitle G:346 SG com/z80asm.b[4313] pagetitle:=null
pagetitle G:346 SG com/z80asm.b[4418] pagetitle:=null
pagetitle G:346 SG com/z80asm.b[4926]
    pagetitle:=getstr(strexp(null,...),simplegetvec)
parse G:295 DEF com/z80asm.b[123] parse=ug+95
parse G:295 LG com/z80asm.b[5493] parse(fromfile)
parse G:295 RT com/z80asm.b[4266] LET parse(file)BE..
parseline G:294 DEF com/z80asm.b[122] parseline=ug+94
parseline G:294 FN com/z80asm.b[4443] LET parseline()=..
parseline G:294 LG com/z80asm.b[4336] had.text:=had.text|parseline()
parseline G:294 LG com/z80asm.b[5175] parseline()
partsize M:8 DEF com/z80asm.b[2970] partsize=8
partsize M:8 MAN com/z80asm.b[2977] (field&f.len)>>partsize
partsize M:8 MAN com/z80asm.b[2984] (field&f.len)>>partsize
partsize M:8 MAN com/z80asm.b[2993] (field&f.len)>>partsize
partsize M:8 MAN com/z80asm.b[2999] pos&byte1|(len&byte1)<<partsize
pass G:349 DEF com/z80asm.b[186] pass=ug+149
pass G:349 LG com/z80asm.b[1033] IF pass=second&(ty&flag.temp)=0 DO ..
pass G:349 LG com/z80asm.b[1038]
    TEST pass=second&(ty&flag.temp)=0 THEN .. ELSE ..
pass G:349 LG com/z80asm.b[1046]
    TEST pass=second&(t!t.type&flag.double)~=0 THEN .. ELSE ..
pass G:349 LG com/z80asm.b[1068] IF pass=second&symty=type.none DO ..
pass G:349 LG com/z80asm.b[1074]
    TEST (ty&type.mask)=type.ref&(pass=second|(ty&flag.needs)~=0) THEN .. ELSE ..
pass G:349 LG com/z80asm.b[1114] pass=first
pass G:349 LG com/z80asm.b[1156] IF pass=first DO ..
pass G:349 LG com/z80asm.b[1171]
    IF ans=null&pass=second|ans~=null&(ans!t.type&type.mask)~=ty DO ..
pass G:349 LG com/z80asm.b[1713] UNLESS binfile=0|pass=first DO ..
pass G:349 LG com/z80asm.b[2396]
    TEST pass=first&~finishpass THEN .. ELSE ..
pass G:349 LG com/z80asm.b[2408] TEST pass=first THEN .. ELSE ..
pass G:349 LG com/z80asm.b[2470]
    TEST pass=second&lineno~=line.just.outlined THEN .. ELSE ..
pass G:349 LG com/z80asm.b[2569] pass:=pass
pass G:349 LG com/z80asm.b[2899] IF pass=second DO ..
pass G:349 LG com/z80asm.b[2914] IF pass=second DO ..
pass G:349 LG com/z80asm.b[3003] IF pass=second DO ..
pass G:349 LG com/z80asm.b[3218] IF pass=first DO ..
pass G:349 LG com/z80asm.b[3222] IF pass=first DO ..
pass G:349 LG com/z80asm.b[3227] IF pass=first DO ..
pass G:349 LG com/z80asm.b[3245]
    text.size:=read.macro.body(macro,pass=first)
pass G:349 LG com/z80asm.b[3247] IF pass=first DO ..
pass G:349 LG com/z80asm.b[3330] TEST pass=first THEN .. ELSE ..
pass G:349 LG com/z80asm.b[3365] IF pass=second DO ..
pass G:349 LG com/z80asm.b[4343]
    endmissing:=pass=first&item.type=i.end&had.text
pass G:349 LG com/z80asm.b[4375] TEST pass=first THEN .. ELSE ..
pass G:349 LG com/z80asm.b[4476]
    writef("****** B'tion %N*n",name,pass=first->"first","second",sectno)
pass G:349 LG com/z80asm.b[4557] IF pass=first DO ..
pass G:349 LG com/z80asm.b[4770]
    IF pass=second&(ansvec!1=type.none|~iden.valid) DO ..
pass G:349 LG com/z80asm.b[4920] TEST pass=first THEN .. ELSE ..
pass G:349 LG com/z80asm.b[4982] IF pass=first DO ..
pass G:349 LG com/z80asm.b[4994] IF pass=second DO ..
pass G:349 LG com/z80asm.b[5035] UNLESS lab=null|pass=second DO ..
pass G:349 LG com/z80asm.b[5045] UNLESS lab=null|pass=second DO ..
pass G:349 LG com/z80asm.b[5118] IF pass=second DO ..
pass G:349 LG com/z80asm.b[5128] IF pass=second DO ..
pass G:349 LG com/z80asm.b[5141] IF pass=second DO ..
pass G:349 LG com/z80asm.b[5496] IF pass=second DO ..
pass G:349 LG com/z80asm.b[971]
    iden.valid:=~(t=null->pass=second,...~=0&rel.pos>=0)
pass G:349 SG com/z80asm.b[2569] pass:=pass
pass G:349 SG com/z80asm.b[4318] pass:=first
pass G:349 SG com/z80asm.b[4348] pass:=second
pass G:349 SG com/z80asm.b[4377] pass:=second
pass G:349 SG com/z80asm.b[4405] pass:=first
passone.var S:649 DEF com/z80asm.b[3331] passone.var=0
passone.var S:649 LL com/z80asm.b[3332] unique.no:=passone.var
passone.var S:649 LL com/z80asm.b[3333] passone.var:=passone.var+1
passone.var S:649 SL com/z80asm.b[3333] passone.var:=passone.var+1
passtwo.var S:650 DEF com/z80asm.b[3335] passtwo.var=0
passtwo.var S:650 LL com/z80asm.b[3336] unique.no:=passtwo.var
passtwo.var S:650 LL com/z80asm.b[3337] passtwo.var:=passtwo.var+1
passtwo.var S:650 SL com/z80asm.b[3337] passtwo.var:=passtwo.var+1
pathfindinput G:53 DEF libhdr.h[89] pathfindinput=53
pc G:351 DEF com/z80asm.b[188] pc=ug+151
pc G:351 LG com/z80asm.b[2521] startpc:=pc+bufpos-b.nextmod+1
pc G:351 LG com/z80asm.b[2529]
    TEST linbuf%1=comntch|pc=startpc+binbuf!b.top-b.nextmod THEN .. ELSE ..
pc G:351 LG com/z80asm.b[2563] code.gen(cd.newpc,pc)
pc G:351 LG com/z80asm.b[2577] pc:=pc+binbuf!b.top-b.nextmod
pc G:351 LG com/z80asm.b[4496] startpc:=pc
pc G:351 LG com/z80asm.b[4559]
    putlab(lab,pc,(mode=absolute->type.lab,type.rellab)|(def.count>0->flag.def,0))
pc G:351 LG com/z80asm.b[4615] RESULTIS spec!0-pc
pc G:351 LG com/z80asm.b[4811] ansvec!0:=pc
pc G:351 LG com/z80asm.b[5011] startpc:=pc
pc G:351 LG com/z80asm.b[5023] code.gen(cd.newpc,pc)
pc G:351 LG com/z80asm.b[5024] pc:=pc+i
pc G:351 LG com/z80asm.b[5025] code.gen(cd.newpc,pc)
pc G:351 LG com/z80asm.b[5035] putlab(lab,pc,type.lab)
pc G:351 LG com/z80asm.b[5045] putlab(lab,pc,type.rellab)
pc G:351 SG com/z80asm.b[2577] pc:=pc+binbuf!b.top-b.nextmod
pc G:351 SG com/z80asm.b[4306] pc:=0
pc G:351 SG com/z80asm.b[4431] pc:=0
pc G:351 SG com/z80asm.b[5010] pc:=spec!0
pc G:351 SG com/z80asm.b[5024] pc:=pc+i
pc G:351 SG com/z80asm.b[5032] pc:=0
pc G:351 SG com/z80asm.b[5042] pc:=0
pc.valid S:291 DEF com/z80asm.b[1722] pc.valid=FALSE
pc.valid S:291 LL com/z80asm.b[1758] IF pc.valid|blocklen>0 DO ..
pc.valid S:291 LL com/z80asm.b[1792] TEST pc.valid THEN .. ELSE ..
pc.valid S:291 SL com/z80asm.b[1808] pc.valid:=TRUE
pc.valid S:291 SL com/z80asm.b[1861] pc.valid:=FALSE
pcrel.expression G:287 DEF com/z80asm.b[115] pcrel.expression=ug+87
pcrel.expression G:287 FN com/z80asm.b[4609] LET pcrel.expression()=..
peercom G:179 DEF libhdr.h[225] peercom=179
pkt_a1 M:5 DEF libhdr.h[613] pkt_a1=5
pkt_a2 M:6 DEF libhdr.h[614] pkt_a2=6
pkt_a3 M:7 DEF libhdr.h[615] pkt_a3=7
pkt_a4 M:8 DEF libhdr.h[616] pkt_a4=8
pkt_a5 M:9 DEF libhdr.h[617] pkt_a5=9
pkt_a6 M:10 DEF libhdr.h[618] pkt_a6=10
pkt_arg1 M:5 DEF libhdr.h[613] pkt_arg1=5
pkt_arg2 M:6 DEF libhdr.h[614] pkt_arg2=6
pkt_arg3 M:7 DEF libhdr.h[615] pkt_arg3=7
pkt_arg4 M:8 DEF libhdr.h[616] pkt_arg4=8
pkt_arg5 M:9 DEF libhdr.h[617] pkt_arg5=9
pkt_arg6 M:10 DEF libhdr.h[618] pkt_arg6=10
pkt_devid M:1 DEF libhdr.h[609] pkt_devid=1
pkt_devtaskid M:1 DEF libhdr.h[609] pkt_devtaskid=1
pkt_id M:1 DEF libhdr.h[609] pkt_id=1
pkt_link M:0 DEF libhdr.h[608] pkt_link=0
pkt_op M:2 DEF libhdr.h[610] pkt_op=2
pkt_r1 M:3 DEF libhdr.h[611] pkt_r1=3
pkt_r2 M:4 DEF libhdr.h[612] pkt_r2=4
pkt_res1 M:3 DEF libhdr.h[611] pkt_res1=3
pkt_res2 M:4 DEF libhdr.h[612] pkt_res2=4
pkt_taskid M:1 DEF libhdr.h[609] pkt_taskid=1
pkt_type M:2 DEF libhdr.h[610] pkt_type=2
pl M:55 DEF com/z80asm.b[301] pl=55
pl M:55 MAN com/z80asm.b[2623] IF (outpos&byte1)>pl DO ..
pl M:55 MAN com/z80asm.b[2653] IF lines+(outpos&byte1)>pl DO ..
pl M:55 MAN com/z80asm.b[5140] lines:=is.expression()->expression(),pl
point G:64 DEF libhdr.h[100] point=64
pollingch M:-3 DEF libhdr.h[249] pollingch=-3
position.ch G:239 DEF com/z80asm.b[59] position.ch=ug+39
position.ch G:239 LG com/z80asm.b[4221] position.ch(first.item.pos)
position.ch G:239 RT com/z80asm.b[2272] LET position.ch(pos)BE..
pragproc G:304 DEF com/z80asm.b[134] pragproc=ug+104
pragproc G:304 LG com/z80asm.b[6924] code.put("PRAG",pragproc,0)
pragproc G:304 RT com/z80asm.b[5113] LET pragproc(lab)BE..
prefix P:5 LOC com/z80asm.b[5365] LET prefix="SYS:Ring."
print.expansions G:229 DEF com/z80asm.b[49] print.expansions=ug+29
print.expansions G:229 LG com/z80asm.b[2344] IF print.expansions DO ..
print.expansions G:229 LG com/z80asm.b[2488]
    rdch=macro.rdch&~print.expansions
print.expansions G:229 LG com/z80asm.b[2755]
    activation!text.savch:=(print.expansions->32768,0)|(ch1=endstreamch->ch,0)
print.expansions G:229 LG com/z80asm.b[3200] endline(~print.expansions)
print.expansions G:229 LG com/z80asm.b[3235] IF print.expansions DO ..
print.expansions G:229 LG com/z80asm.b[3260] IF print.expansions DO ..
print.expansions G:229 LG com/z80asm.b[3289] IF print.expansions DO ..
print.expansions G:229 LG com/z80asm.b[3574] IF print.expansions DO ..
print.expansions G:229 LG com/z80asm.b[3575]
    TEST print.expansions THEN .. ELSE ..
print.expansions G:229 LG com/z80asm.b[3593]
    TEST print.expansions THEN .. ELSE ..
print.expansions G:229 LG com/z80asm.b[3609] IF print.expansions DO ..
print.expansions G:229 LG com/z80asm.b[4084] IF print.expansions DO ..
print.expansions G:229 SG com/z80asm.b[2800]
    print.expansions:=0~=(32768&ch)
print.expansions G:229 SG com/z80asm.b[4295] print.expansions:=TRUE
print.expansions G:229 SG com/z80asm.b[4428] print.expansions:=TRUE
printfiles G:321 DEF com/z80asm.b[152] printfiles=ug+121
printfiles G:321 LG com/z80asm.b[4414] printfiles()
printfiles G:321 RT com/z80asm.b[2917] LET printfiles()BE..
printlabs G:203 DEF com/z80asm.b[19] printlabs=ug+3
printlabs G:203 LG com/z80asm.b[4413] printlabs()
printlabs G:203 RT com/z80asm.b[1239] LET printlabs()BE..
printproc G:266 DEF com/z80asm.b[91] printproc=ug+66
printproc G:266 LG com/z80asm.b[6957] code.put("PRINTX",printproc,0)
printproc G:266 RT com/z80asm.b[3360] LET printproc(lab)BE..
printtype G:208 DEF com/z80asm.b[24] printtype=ug+8
printtype G:208 LG com/z80asm.b[1225] printtype(ty,val)
printtype G:208 RT com/z80asm.b[1233] LET printtype(ty,val)BE..
product F:1037 FN com/z80asm.b[4712] LET product(ansvec)=..
product F:1037 LF com/z80asm.b[4691] product(ansvec)
product F:1037 LF com/z80asm.b[4700] ansvec!0:=ansvec!0+s*product(p)
put_record G:72 DEF libhdr.h[108] put_record=72
putaddress G:217 DEF com/z80asm.b[35] putaddress=ug+17
putaddress G:217 LG com/z80asm.b[6055] putaddress(18413)
putaddress G:217 LG com/z80asm.b[6071] putaddress(19437)
putaddress G:217 RT com/z80asm.b[1636] LET putaddress(n)BE..
putaddress G:217 RT com/z80asm.b[5776] LET putaddress(n)BE..
putch G:231 DEF com/z80asm.b[51] putch=ug+31
putch G:231 LG com/z80asm.b[5132] putch(10)
putch G:231 RT com/z80asm.b[2263] LET putch(ch)BE..
putf G:335 DEF com/z80asm.b[168] putf=ug+135
putf G:335 FN com/z80asm.b[2982] LET putf(no,field,too)=..
putf G:335 LG com/z80asm.b[3006]
    binbuf!binbuf!b.top:=putf(no,field,binbuf!...)
putf G:335 LG com/z80asm.b[6044] putf(getf(r,f.rinfo),f.source,70)
putf G:335 LG com/z80asm.b[6160]
    UNLESS getrorind(putf(info,f.source,sheli),f.dest,fn.normal) DO ..
putf G:335 LG com/z80asm.b[6163] putword(putf(info,f.source,sheln))
putf G:335 LG com/z80asm.b[6181] putword(putf(~info>>1,f.source,66))
putf G:335 LG com/z80asm.b[6198] putf(info,f.source,6)
putf G:335 LG com/z80asm.b[6210] putf(info,f.top,70)
putf G:335 LG com/z80asm.b[6212] shel:=putf(expression(),f.source,shel)
putf G:335 LG com/z80asm.b[6459] putf(info,f.dest,52)
putf G:335 LG com/z80asm.b[6514] putf(info,f.dest,224)
putlab G:202 DEF com/z80asm.b[18] putlab=ug+2
putlab G:202 FN com/z80asm.b[998] LET putlab(string,v,ty)=..
putlab G:202 LG com/z80asm.b[2843]
    forward:=putlab(local+1,parm.value,type.text|flag.temp)
putlab G:202 LG com/z80asm.b[3218] putlab(lab,macro,type.macro)
putlab G:202 LG com/z80asm.b[4559]
    putlab(lab,pc,(mode=absolute->type.lab,type.rellab)|(def.count>0->flag.def,0))
putlab G:202 LG com/z80asm.b[4955]
    putlab(lab,spec!0,dontknow&flag.fwd|(spec!1=0->type.const,type.relconst))
putlab G:202 LG com/z80asm.b[4970]
    putlab(lab,spec!0,spec!1=0->type.var,type.relvar)
putlab G:202 LG com/z80asm.b[4982]
    putlab(lab,getstr(str,simplegetvec),type.text)
putlab G:202 LG com/z80asm.b[5035] putlab(lab,pc,type.lab)
putlab G:202 LG com/z80asm.b[5045] putlab(lab,pc,type.rellab)
putlab G:202 LG com/z80asm.b[5055] putlab(item.info,default.value,type)
putlab G:202 LG com/z80asm.b[5081]
    putlab(item.info,65535,type.ref|flag.needs)
putlab G:202 LG com/z80asm.b[5102] putlab(item.info,-1,type.def)
putlabelspec G:218 DEF com/z80asm.b[36] putlabelspec=ug+18
putlabelspec G:218 LG com/z80asm.b[4907]
    putlabelspec(label.expression(spec))
putlabelspec G:218 LG com/z80asm.b[5867]
    putlabelspec(label.expression(spec))
putlabelspec G:218 LG com/z80asm.b[6024]
    putlabelspec(label.expression(spec))
putlabelspec G:218 LG com/z80asm.b[6076] putlabelspec(spec)
putlabelspec G:218 LG com/z80asm.b[6090] putlabelspec(spec)
putlabelspec G:218 LG com/z80asm.b[6103] putlabelspec(spec)
putlabelspec G:218 LG com/z80asm.b[6356]
    putlabelspec(label.expression(spec))
putlabelspec G:218 LG com/z80asm.b[6361]
    putlabelspec(label.expression(spec))
putlabelspec G:218 LG com/z80asm.b[6381]
    putlabelspec(label.expression(spec))
putword G:216 DEF com/z80asm.b[34] putword=ug+16
putword G:216 LG com/z80asm.b[1641] putword(m&n)
putword G:216 LG com/z80asm.b[1644]
    putword(n>>8*bytesperasmword*(wordsperaddress-i)&m)
putword G:216 LG com/z80asm.b[4463] putword((mnem+c.opstr)!i)
putword G:216 LG com/z80asm.b[4901] putword(pack)
putword G:216 LG com/z80asm.b[4911] putword(no)
putword G:216 LG com/z80asm.b[5778] putword(n&255)
putword G:216 LG com/z80asm.b[5779] putword((n&255<<8)>>8)
putword G:216 LG com/z80asm.b[5797] putword(203)
putword G:216 LG com/z80asm.b[5798] putword(shel)
putword G:216 LG com/z80asm.b[5802] putword(r=r.ix->221,253)
putword G:216 LG com/z80asm.b[5803] putword(203)
putword G:216 LG com/z80asm.b[5810] putword(i)
putword G:216 LG com/z80asm.b[5811] putword(shel)
putword G:216 LG com/z80asm.b[5813] putword(shel)
putword G:216 LG com/z80asm.b[5814] putword(i)
putword G:216 LG com/z80asm.b[5835] putword(203)
putword G:216 LG com/z80asm.b[5836] putword(shel)
putword G:216 LG com/z80asm.b[5853] putword(221)
putword G:216 LG com/z80asm.b[5854] putword(253)
putword G:216 LG com/z80asm.b[5855] putword(shel)
putword G:216 LG com/z80asm.b[6023] putword(58)
putword G:216 LG com/z80asm.b[6026] putword(r=r.bc->10,26)
putword G:216 LG com/z80asm.b[6031] putword(62)
putword G:216 LG com/z80asm.b[6032] putword(expression())
putword G:216 LG com/z80asm.b[6035] putword(237)
putword G:216 LG com/z80asm.b[6036] putword(r=r.i->87,95)
putword G:216 LG com/z80asm.b[6038] putword(120)
putword G:216 LG com/z80asm.b[6047] putword(6)
putword G:216 LG com/z80asm.b[6049] putword(expression())
putword G:216 LG com/z80asm.b[6063] putword(221)
putword G:216 LG com/z80asm.b[6064] putword(253)
putword G:216 LG com/z80asm.b[6066] putword(249)
putword G:216 LG com/z80asm.b[6072] putword(42)
putword G:216 LG com/z80asm.b[6073] putword(33)
putword G:216 LG com/z80asm.b[6089] putword(50)
putword G:216 LG com/z80asm.b[6095] putword(221)
putword G:216 LG com/z80asm.b[6096] putword(253)
putword G:216 LG com/z80asm.b[6098] putword(34)
putword G:216 LG com/z80asm.b[6099] putword(237)
putword G:216 LG com/z80asm.b[6100] putword(67)
putword G:216 LG com/z80asm.b[6108] putword(r=r.bc->2,18)
putword G:216 LG com/z80asm.b[6115] putword(221)
putword G:216 LG com/z80asm.b[6116] putword(253)
putword G:216 LG com/z80asm.b[6124] putword(54)
putword G:216 LG com/z80asm.b[6125] putword(d)
putword G:216 LG com/z80asm.b[6126] putword(expression())
putword G:216 LG com/z80asm.b[6128] putword(112)
putword G:216 LG com/z80asm.b[6130] putword(d)
putword G:216 LG com/z80asm.b[6163] putword(putf(info,f.source,sheln))
putword G:216 LG com/z80asm.b[6164] putword(expression())
putword G:216 LG com/z80asm.b[6170] putword(221)
putword G:216 LG com/z80asm.b[6174] putword(253)
putword G:216 LG com/z80asm.b[6177] putword(9)
putword G:216 LG com/z80asm.b[6180] putword(237)
putword G:216 LG com/z80asm.b[6181] putword(putf(~info>>1,f.source,66))
putword G:216 LG com/z80asm.b[6355] putword(195)
putword G:216 LG com/z80asm.b[6358] putword(194)
putword G:216 LG com/z80asm.b[6376] putword(205)
putword G:216 LG com/z80asm.b[6377] putword(204)
putword G:216 LG com/z80asm.b[6392] putword(201)
putword G:216 LG com/z80asm.b[6393] putword(200)
putword G:216 LG com/z80asm.b[6404] putword(32)
putword G:216 LG com/z80asm.b[6407] putword(checkrange(expression()-2))
putword G:216 LG com/z80asm.b[6419] putword(24)
putword G:216 LG com/z80asm.b[6420] putword(checkrange(expression()-2))
putword G:216 LG com/z80asm.b[6443] putword(expression()-2)
putword G:216 LG com/z80asm.b[6466] putword(221)
putword G:216 LG com/z80asm.b[6468] putword(253)
putword G:216 LG com/z80asm.b[6469] putword(3)
putword G:216 LG com/z80asm.b[6487] putword(235)
putword G:216 LG com/z80asm.b[6492] putword(8)
putword G:216 LG com/z80asm.b[6520] putword(221)
putword G:216 LG com/z80asm.b[6521] putword(253)
putword G:216 LG com/z80asm.b[6522] putword(shel)
putword G:216 LG com/z80asm.b[6672] putword(237)
putword G:216 LG com/z80asm.b[6673] putword(64)
putword G:216 LG com/z80asm.b[6677] putword(219)
putword G:216 LG com/z80asm.b[6678] putword(expression())
putword G:216 LG com/z80asm.b[6697] putword(237)
putword G:216 LG com/z80asm.b[6698] putword(65)
putword G:216 LG com/z80asm.b[6701] putword(211)
putword G:216 LG com/z80asm.b[6702] putword(expression())
putword G:216 LG com/z80asm.b[6717] putword(70)
putword G:216 LG com/z80asm.b[6718] putword(86)
putword G:216 LG com/z80asm.b[6719] putword(94)
putword G:216 RT com/z80asm.b[1619] LET putword(n)BE..
putword G:33 DEF libhdr.h[69] putword=33
putwordf G:336 DEF com/z80asm.b[169] putwordf=ug+136
putwordf G:336 LG com/z80asm.b[5837] putwordf(getf(r,f.rinfo),rfield)
putwordf G:336 LG com/z80asm.b[6039] putwordf(getf(r,f.rinfo),f.dest)
putwordf G:336 LG com/z80asm.b[6048] putwordf(getf(r,f.rinfo),f.source)
putwordf G:336 LG com/z80asm.b[6056] putwordf(getf(r,f.rinfo),f.source)
putwordf G:336 LG com/z80asm.b[6075]
    putwordf(getf(r,f.ddinfo),f.ddsource)
putwordf G:336 LG com/z80asm.b[6101]
    putwordf(getf(r,f.ddinfo),f.ddsource)
putwordf G:336 LG com/z80asm.b[6129] putwordf(getf(s,f.rinfo),f.dest)
putwordf G:336 LG com/z80asm.b[6186]
    putwordf(getf(addopreg,f.ddinfo),f.ddsource)
putwordf G:336 LG com/z80asm.b[6359]
    putwordf(getf(cc,f.ccinfo),f.source)
putwordf G:336 LG com/z80asm.b[6378]
    putwordf(getf(cc,f.ccinfo),f.source)
putwordf G:336 LG com/z80asm.b[6394]
    putwordf(getf(cc,f.ccinfo),f.source)
putwordf G:336 LG com/z80asm.b[6406] putwordf(cc,f.ccsmall)
putwordf G:336 LG com/z80asm.b[6452] putwordf(expression()>>3,f.source)
putwordf G:336 LG com/z80asm.b[6470] putwordf(info,f.source)
putwordf G:336 LG com/z80asm.b[6471]
    putwordf(getf(r,f.ddinfo),f.ddsource)
putwordf G:336 LG com/z80asm.b[6523]
    putwordf(getf(dd,f.ddinfo),f.ddsource)
putwordf G:336 LG com/z80asm.b[6674] putwordf(r,f.source)
putwordf G:336 LG com/z80asm.b[6699] putwordf(getf(r,f.rinfo),f.source)
putwordf G:336 RT com/z80asm.b[3002] LET putwordf(no,field)BE..
pw G:384 DEF com/z80asm.b[226] pw=ug+184
pw G:384 LG com/z80asm.b[1271] neads(...+...+1+3+(badlabs>0->1,0)+1+1)
pw G:384 LG com/z80asm.b[1284] IF chpos+outfield>pw DO ..
pw G:384 LG com/z80asm.b[1306] UNLESS chpos+2>pw DO ..
pw G:384 LG com/z80asm.b[2635] FOR i=len TO (pw-pagetitle%0)/2 DO..
pw G:384 LG com/z80asm.b[2641] FOR i=len+1 TO pw-8 DO..
pw G:384 LG com/z80asm.b[4284] linbufsize:=pw+1-15+...*binbufwidth+2
pw G:384 LG com/z80asm.b[5327]
    error:=error|...|pw<50|~(...&...)|max.files<=1
pw G:384 LLG com/z80asm.b[5277] temp:=@pw
pw G:384 SG com/z80asm.b[5349] pw:=136
pw G:384 SG com/z80asm.b[5455] pw:=80
qpkt G:161 DEF libhdr.h[212] qpkt=161
r.a M:32775 DEF com/z80asm.b[482] r.a=b.r|7
r.a M:32775 MAN com/z80asm.b[5678] reg.put("A",r.a)
r.a M:32775 MAN com/z80asm.b[6018] CASE r.a:.. 
r.a M:32775 MAN com/z80asm.b[6054] UNLESS scanreg(r.a) DO ..
r.a M:32775 MAN com/z80asm.b[6088] TEST scanreg(r.a) THEN .. ELSE ..
r.a M:32775 MAN com/z80asm.b[6111] UNLESS scanreg(r.a) DO ..
r.a M:32775 MAN com/z80asm.b[6147] r.a
r.a M:32775 MAN com/z80asm.b[6153] UNLESS scanreg(r.a) DO ..
r.a M:32775 MAN com/z80asm.b[6159] TEST addopreg=r.a THEN .. ELSE ..
r.a M:32775 MAN com/z80asm.b[6676] UNLESS reg=r.a DO ..
r.a M:32775 MAN com/z80asm.b[6705] UNLESS scanreg(r.a) DO ..
r.af M:8195 DEF com/z80asm.b[488] r.af=b.qq|3
r.af M:8195 MAN com/z80asm.b[5677] reg.put("AF",r.af)
r.af M:8195 MAN com/z80asm.b[6491] TEST scanreg(r.af) THEN .. ELSE ..
r.af M:8195 MAN com/z80asm.b[6494]
    UNLESS item.type=i.iden&r.af=getreg(item.info) DO ..
r.b M:32768 DEF com/z80asm.b[475] r.b=b.r|0
r.b M:32768 MAN com/z80asm.b[5679] reg.put("B",r.b)
r.bad M:0 DEF com/z80asm.b[3124] r.bad=0
r.bad M:0 DEF com/z80asm.b[464] r.bad=0
r.bad M:0 MAN com/z80asm.b[3133] RESULTIS t=null->r.bad,t!t.val
r.bad M:0 MAN com/z80asm.b[5764] r.bad
r.bad M:0 MAN com/z80asm.b[5769] UNLESS ans=r.bad DO ..
r.bad M:0 MAN com/z80asm.b[5834] IF r=r.bad DO ..
r.bad M:0 MAN com/z80asm.b[6014] TEST r~=r.bad THEN .. ELSE ..
r.bad M:0 MAN com/z80asm.b[6022] TEST r=r.bad THEN .. ELSE ..
r.bad M:0 MAN com/z80asm.b[6030] TEST r=r.bad THEN .. ELSE ..
r.bad M:0 MAN com/z80asm.b[6061] r=r.sp->getrset(b.ixyhl),r.bad
r.bad M:0 MAN com/z80asm.b[6065] TEST r=r.sp&dd~=r.bad THEN .. ELSE ..
r.bad M:0 MAN com/z80asm.b[6067] TEST dd~=r.bad THEN .. ELSE ..
r.bad M:0 MAN com/z80asm.b[6084] TEST r=r.bad THEN .. ELSE ..
r.bad M:0 MAN com/z80asm.b[6093] IF r=r.bad DO ..
r.bad M:0 MAN com/z80asm.b[6123] TEST s=r.bad THEN .. ELSE ..
r.bad M:0 MAN com/z80asm.b[6155] IF addopreg=r.bad DO ..
r.bad M:0 MAN com/z80asm.b[6184] IF addopreg=r.bad DO ..
r.bad M:0 MAN com/z80asm.b[6354] TEST cc=r.bad THEN .. ELSE ..
r.bad M:0 MAN com/z80asm.b[6375] TEST cc=r.bad THEN .. ELSE ..
r.bad M:0 MAN com/z80asm.b[6391] TEST cc=r.bad THEN .. ELSE ..
r.bad M:0 MAN com/z80asm.b[6418] TEST cc=r.bad THEN .. ELSE ..
r.bad M:0 MAN com/z80asm.b[6464] IF r=r.bad DO ..
r.bad M:0 MAN com/z80asm.b[6518] IF dd=r.bad DO ..
r.bad M:0 MAN com/z80asm.b[6666] IF reg=r.bad DO ..
r.bad M:0 MAN com/z80asm.b[6696] IF r=r.bad DO ..
r.bc M:30848 DEF com/z80asm.b[483] r.bc=b.dd|b.qq|b.pp|b.rr|b.bcde|0
r.bc M:30848 MAN com/z80asm.b[5676] reg.put("BC",r.bc)
r.bc M:30848 MAN com/z80asm.b[6026] putword(r=r.bc->10,26)
r.bc M:30848 MAN com/z80asm.b[6060] CASE r.bc:.. 
r.bc M:30848 MAN com/z80asm.b[6108] putword(r=r.bc->2,18)
r.c M:33817 DEF com/z80asm.b[476] r.c=b.r|1|b.cc|3<<3
r.c M:33817 MAN com/z80asm.b[494] cc.c=r.c
r.c M:33817 MAN com/z80asm.b[5680] reg.put("C",r.c)
r.c M:33817 MAN com/z80asm.b[6671] TEST scanreg(r.c) THEN .. ELSE ..
r.c M:33817 MAN com/z80asm.b[6692] TEST scanreg(r.c) THEN .. ELSE ..
r.d M:32770 DEF com/z80asm.b[477] r.d=b.r|2
r.d M:32770 MAN com/z80asm.b[5681] reg.put("D",r.d)
r.de M:30849 DEF com/z80asm.b[484] r.de=b.dd|b.qq|b.pp|b.rr|b.bcde|1
r.de M:30849 MAN com/z80asm.b[5675] reg.put("DE",r.de)
r.de M:30849 MAN com/z80asm.b[6060] CASE r.de:.. 
r.de M:30849 MAN com/z80asm.b[6486] TEST scanreg(r.de) THEN .. ELSE ..
r.e M:32771 DEF com/z80asm.b[478] r.e=b.r|3
r.e M:32771 MAN com/z80asm.b[5684] reg.put("E",r.e)
r.h M:32772 DEF com/z80asm.b[479] r.h=b.r|4
r.h M:32772 MAN com/z80asm.b[5683] reg.put("H",r.h)
r.hl M:25094 DEF com/z80asm.b[481] r.hl=b.dd|b.qq|b.ixyhl|6
r.hl M:25094 MAN com/z80asm.b[5682] reg.put("HL",r.hl)
r.hl M:25094 MAN com/z80asm.b[5796] TEST r=r.hl THEN .. ELSE ..
r.hl M:25094 MAN com/z80asm.b[5851] UNLESS r=r.hl|r=r.ix|r=r.iy DO ..
r.hl M:25094 MAN com/z80asm.b[6059] CASE r.hl:.. 
r.hl M:25094 MAN com/z80asm.b[6117] UNLESS r=r.hl DO ..
r.hl M:25094 MAN com/z80asm.b[6125] UNLESS r=r.hl DO ..
r.hl M:25094 MAN com/z80asm.b[6130] UNLESS r=r.hl DO ..
r.hl M:25094 MAN com/z80asm.b[6179] UNLESS addopreg=r.hl DO ..
r.hl M:25094 MAN com/z80asm.b[6489] UNLESS scanreg(r.hl) DO ..
r.i M:256 DEF com/z80asm.b[490] r.i=b.rori|0
r.i M:256 MAN com/z80asm.b[5685] reg.put("I",r.i)
r.i M:256 MAN com/z80asm.b[6036] putword(r=r.i->87,95)
r.i M:256 MAN com/z80asm.b[6053] CASE r.i:.. 
r.ix M:4678 DEF com/z80asm.b[485] r.ix=b.pp|b.ixyhl|b.ixiy|6
r.ix M:4678 MAN com/z80asm.b[5686] reg.put("IX",r.ix)
r.ix M:4678 MAN com/z80asm.b[5800] TEST r=r.ix|r=r.iy THEN .. ELSE ..
r.ix M:4678 MAN com/z80asm.b[5802] putword(r=r.ix->221,253)
r.ix M:4678 MAN com/z80asm.b[5851] UNLESS r=r.hl|r=r.ix|r=r.iy DO ..
r.ix M:4678 MAN com/z80asm.b[5852] TEST r=r.ix THEN .. ELSE ..
r.ix M:4678 MAN com/z80asm.b[6059] CASE r.ix:.. 
r.ix M:4678 MAN com/z80asm.b[6062] TEST dd=r.ix|r=r.ix THEN .. ELSE ..
r.ix M:4678 MAN com/z80asm.b[6094] TEST r=r.ix THEN .. ELSE ..
r.ix M:4678 MAN com/z80asm.b[6114] TEST r=r.ix THEN .. ELSE ..
r.ix M:4678 MAN com/z80asm.b[6169] TEST addopreg=r.ix THEN .. ELSE ..
r.ix M:4678 MAN com/z80asm.b[6465] TEST r=r.ix THEN .. ELSE ..
r.ix M:4678 MAN com/z80asm.b[6519] TEST dd=r.ix THEN .. ELSE ..
r.iy M:2630 DEF com/z80asm.b[486] r.iy=b.rr|b.ixyhl|b.ixiy|6
r.iy M:2630 MAN com/z80asm.b[5674] reg.put("IY",r.iy)
r.iy M:2630 MAN com/z80asm.b[5800] TEST r=r.ix|r=r.iy THEN .. ELSE ..
r.iy M:2630 MAN com/z80asm.b[5851] UNLESS r=r.hl|r=r.ix|r=r.iy DO ..
r.iy M:2630 MAN com/z80asm.b[5854] IF r=r.iy DO ..
r.iy M:2630 MAN com/z80asm.b[6059] CASE r.iy:.. 
r.iy M:2630 MAN com/z80asm.b[6064] IF dd=r.iy|r=r.iy DO ..
r.iy M:2630 MAN com/z80asm.b[6096] IF r=r.iy DO ..
r.iy M:2630 MAN com/z80asm.b[6116] IF r=r.iy DO ..
r.iy M:2630 MAN com/z80asm.b[6173] IF addopreg=r.iy DO ..
r.iy M:2630 MAN com/z80asm.b[6468] IF r=r.iy DO ..
r.iy M:2630 MAN com/z80asm.b[6521] IF dd=r.iy DO ..
r.l M:32773 DEF com/z80asm.b[480] r.l=b.r|5
r.l M:32773 MAN com/z80asm.b[5695] reg.put("L",r.l)
r.r M:257 DEF com/z80asm.b[489] r.r=b.rori|1
r.r M:257 MAN com/z80asm.b[5687] reg.put("R",r.r)
r.r M:257 MAN com/z80asm.b[6053] CASE r.r:.. 
r.sp M:22531 DEF com/z80asm.b[487] r.sp=b.dd|b.pp|b.rr|3
r.sp M:22531 MAN com/z80asm.b[5692] reg.put("SP",r.sp)
r.sp M:22531 MAN com/z80asm.b[6060] CASE r.sp:.. 
r.sp M:22531 MAN com/z80asm.b[6061] r=r.sp->getrset(b.ixyhl),r.bad
r.sp M:22531 MAN com/z80asm.b[6065]
    TEST r=r.sp&dd~=r.bad THEN .. ELSE ..
r.sp M:22531 MAN com/z80asm.b[6481] UNLESS scanreg(r.sp) DO ..
randno G:34 DEF libhdr.h[70] randno=34
randseed G:127 DEF libhdr.h[164] randseed=127
rch G:230 DEF com/z80asm.b[50] rch=ug+30
rch G:230 LG com/z80asm.b[2285] rch()
rch G:230 LG com/z80asm.b[2468] rch()
rch G:230 LG com/z80asm.b[2598] rch()
rch G:230 LG com/z80asm.b[2757] rch()
rch G:230 LG com/z80asm.b[4071] rch()
rch G:230 LG com/z80asm.b[4135] rch()
rch G:230 LG com/z80asm.b[4138] rch()
rch G:230 LG com/z80asm.b[4148] rch()
rch G:230 LG com/z80asm.b[4155] rch()
rch G:230 LG com/z80asm.b[4169] rch()
rch G:230 LG com/z80asm.b[4171] rch()
rch G:230 LG com/z80asm.b[4179] rch()
rch G:230 LG com/z80asm.b[4185] rch()
rch G:230 LG com/z80asm.b[4194] rch()
rch G:230 LG com/z80asm.b[4212] rch()
rch G:230 LG com/z80asm.b[4219] rch()
rch G:230 LG com/z80asm.b[4222] rch()
rch G:230 LG com/z80asm.b[4374] rch()
rch G:230 LG com/z80asm.b[6498] rch()
rch G:230 RT com/z80asm.b[2322] LET rch()BE..
rdargs G:102 DEF libhdr.h[139] rdargs=102
rdargs G:102 LG com/z80asm.b[5343]
    TEST 0=rdargs("Prog='st,Opt/k",vect,startargsize) THEN .. ELSE ..
rdargs2 G:26 DEF libhdr.h[62] rdargs2=26
rdch G:38 DEF libhdr.h[74] rdch=38
rdch G:38 LG com/z80asm.b[2334] ch:=rdch()
rdch G:38 LG com/z80asm.b[2339] saved.rdch:=rdch
rdch G:38 LG com/z80asm.b[2488] rdch=macro.rdch&~print.expansions
rdch G:38 LG com/z80asm.b[2597] UNLESS rdch=macro.rdch DO ..
rdch G:38 LG com/z80asm.b[2748] macro.savrdch:=rdch
rdch G:38 LG com/z80asm.b[2806] ch:=rdch()
rdch G:38 SG com/z80asm.b[2314] rdch:=saved.rdch
rdch G:38 SG com/z80asm.b[2340] rdch:=tab.rdch
rdch G:38 SG com/z80asm.b[2749] rdch:=macro.rdch
rdch G:38 SG com/z80asm.b[2781] rdch:=macro.savrdch
rditem G:103 DEF libhdr.h[140] rditem=103
read.if.body F:702 FN com/z80asm.b[3615]
    LET read.if.body(else.is.a.terminator)=..
read.if.body F:702 LF com/z80asm.b[3579] IF read.if.body(TRUE) DO ..
read.if.body F:702 LF com/z80asm.b[3583] read.if.body(TRUE)
read.if.body F:702 LF com/z80asm.b[3597] IF read.if.body(TRUE) DO ..
read.if.body F:702 LF com/z80asm.b[3601] read.if.body(TRUE)
read.macro.body F:606 FN com/z80asm.b[3376]
    LET read.macro.body(macro,write.macro)=..
read.macro.body F:606 LF com/z80asm.b[3245]
    text.size:=read.macro.body(macro,pass=first)
read.macro.body F:606 LF com/z80asm.b[3293]
    text.size:=read.macro.body(macro,TRUE)
read.to.mnem G:293 DEF com/z80asm.b[121] read.to.mnem=ug+93
read.to.mnem G:293 FN com/z80asm.b[4494]
    LET read.to.mnem(lv.mt.line,lv.found.mnem,lv.lab,active.read)=..
read.to.mnem G:293 LG com/z80asm.b[3461]
    mnem:=read.to.mnem(@mt.line,@mnem.found,lv.lab,FALSE)
read.to.mnem G:293 LG com/z80asm.b[4452]
    mnem:=read.to.mnem(@mt.line,@found.mnem,...,TRUE)
readflt G:74 DEF libhdr.h[110] readflt=74
readn G:83 DEF libhdr.h[119] readn=83
readwords G:44 DEF libhdr.h[80] readwords=44
recordnote G:70 DEF libhdr.h[106] recordnote=70
recordpoint G:69 DEF libhdr.h[105] recordpoint=69
refproc G:301 DEF com/z80asm.b[131] refproc=ug+101
refproc G:301 LG com/z80asm.b[6921] code.put("REF",refproc,0)
refproc G:301 RT com/z80asm.b[5062] LET refproc(lab)BE..
reg.put G:331 DEF com/z80asm.b[164] reg.put=ug+131
reg.put G:331 LG com/z80asm.b[5674] reg.put("IY",r.iy)
reg.put G:331 LG com/z80asm.b[5675] reg.put("DE",r.de)
reg.put G:331 LG com/z80asm.b[5676] reg.put("BC",r.bc)
reg.put G:331 LG com/z80asm.b[5677] reg.put("AF",r.af)
reg.put G:331 LG com/z80asm.b[5678] reg.put("A",r.a)
reg.put G:331 LG com/z80asm.b[5679] reg.put("B",r.b)
reg.put G:331 LG com/z80asm.b[5680] reg.put("C",r.c)
reg.put G:331 LG com/z80asm.b[5681] reg.put("D",r.d)
reg.put G:331 LG com/z80asm.b[5682] reg.put("HL",r.hl)
reg.put G:331 LG com/z80asm.b[5683] reg.put("H",r.h)
reg.put G:331 LG com/z80asm.b[5684] reg.put("E",r.e)
reg.put G:331 LG com/z80asm.b[5685] reg.put("I",r.i)
reg.put G:331 LG com/z80asm.b[5686] reg.put("IX",r.ix)
reg.put G:331 LG com/z80asm.b[5687] reg.put("R",r.r)
reg.put G:331 LG com/z80asm.b[5688] reg.put("PE",cc.pe)
reg.put G:331 LG com/z80asm.b[5689] reg.put("V",cc.v)
reg.put G:331 LG com/z80asm.b[5690] reg.put("P",cc.p)
reg.put G:331 LG com/z80asm.b[5691] reg.put("PO",cc.po)
reg.put G:331 LG com/z80asm.b[5692] reg.put("SP",r.sp)
reg.put G:331 LG com/z80asm.b[5693] reg.put("Z",cc.z)
reg.put G:331 LG com/z80asm.b[5694] reg.put("NC",cc.nc)
reg.put G:331 LG com/z80asm.b[5695] reg.put("L",r.l)
reg.put G:331 LG com/z80asm.b[5696] reg.put("M",cc.m)
reg.put G:331 LG com/z80asm.b[5697] reg.put("NV",cc.nv)
reg.put G:331 LG com/z80asm.b[5698] reg.put("NZ",cc.nz)
reg.put G:331 RT com/z80asm.b[3128] LET reg.put(reg,val)BE..
relative M:-1 DEF com/z80asm.b[318] relative=-1
relative M:-1 MAN com/z80asm.b[1271]
    neads(...+...+1+3+(badlabs>0->1,0)+1+1)
relative M:-1 MAN com/z80asm.b[1422]
    TEST (typecode&flag.rel)=0&mode=relative THEN .. ELSE ..
relative M:-1 MAN com/z80asm.b[4773] TEST mode=relative THEN .. ELSE ..
relative M:-1 MAN com/z80asm.b[4812] TEST mode=relative THEN .. ELSE ..
relative M:-1 MAN com/z80asm.b[5044] mode:=relative
release G:159 DEF libhdr.h[210] release=159
relproc G:309 DEF com/z80asm.b[139] relproc=ug+109
relproc G:309 LG com/z80asm.b[6930] code.put("REL",relproc,0)
relproc G:309 RT com/z80asm.b[5041] LET relproc(lab)BE..
renamefile G:77 DEF libhdr.h[113] renamefile=77
resetfiles G:322 DEF com/z80asm.b[153] resetfiles=ug+122
resetfiles G:322 LG com/z80asm.b[4305] resetfiles(line.of.file)
resetfiles G:322 LG com/z80asm.b[4427] resetfiles(line.of.file)
resetfiles G:322 RT com/z80asm.b[2927] LET resetfiles(to.line)BE..
restartpage G:235 DEF com/z80asm.b[55] restartpage=ug+35
restartpage G:235 LG com/z80asm.b[1276] IF restartpage DO ..
restartpage G:235 LG com/z80asm.b[1286] IF restartpage DO ..
restartpage G:235 LG com/z80asm.b[2402] IF restartpage DO ..
restartpage G:235 LG com/z80asm.b[2505]
    IF restartpage&(~control.line|~firstflag) DO ..
restartpage G:235 LG com/z80asm.b[2508]
    UNLESS no.output|restartpage&control.line DO ..
restartpage G:235 LG com/z80asm.b[2546]
    IF control.line->~restartpage,~no.output DO ..
restartpage G:235 LG com/z80asm.b[2549]
    IF control.line->~restartpage,~no.output DO ..
restartpage G:235 LG com/z80asm.b[2558]
    IF control.line->~restartpage,~no.output DO ..
restartpage G:235 LG com/z80asm.b[2921] IF restartpage DO ..
restartpage G:235 SG com/z80asm.b[2623] restartpage:=throws
restartpage G:235 SG com/z80asm.b[2626] restartpage:=FALSE
restartpage G:235 SG com/z80asm.b[2653] restartpage:=TRUE
restartpage G:235 SG com/z80asm.b[4399] restartpage:=throws
result2 G:10 DEF libhdr.h[45] result2=10
result2 G:10 LG com/z80asm.b[5356] result2
resumeco G:21 DEF libhdr.h[57] resumeco=21
return_hard M:10 DEF libhdr.h[585] return_hard=10
return_hard M:10 MAN libhdr.h[590] cli_initialfaillevel=return_hard
return_ok M:0 DEF libhdr.h[587] return_ok=0
return_severe M:20 DEF libhdr.h[584] return_severe=20
return_soft M:5 DEF libhdr.h[586] return_soft=5
returnpkt G:169 DEF libhdr.h[217] returnpkt=169
rewindstream G:65 DEF libhdr.h[101] rewindstream=65
rootnode G:9 DEF libhdr.h[44] rootnode=9
rootnodeaddr M:100 DEF libhdr.h[293] rootnodeaddr=100
rptmacroproc G:259 DEF com/z80asm.b[84] rptmacroproc=ug+59
rptmacroproc G:259 LG com/z80asm.b[3400]
    mnemproc:=find.mnem(@lab,4,macroproc,...)
rptmacroproc G:259 LG com/z80asm.b[6940] code.put("REPT",rptmacroproc,0)
rptmacroproc G:259 RT com/z80asm.b[3274] LET rptmacroproc(lab)BE..
rtn_abortcode M:27 DEF libhdr.h[329] rtn_abortcode=
rtn_adjclock M:33 DEF libhdr.h[347] rtn_adjclock=
rtn_blib M:19 DEF libhdr.h[318] rtn_blib=
rtn_blklist M:4 DEF libhdr.h[300] rtn_blklist=
rtn_boot M:17 DEF libhdr.h[316] rtn_boot=
rtn_boottrace M:39 DEF libhdr.h[362] rtn_boottrace=
rtn_bptaddr M:9 DEF libhdr.h[307] rtn_bptaddr=
rtn_bptinstr M:10 DEF libhdr.h[308] rtn_bptinstr=
rtn_clkintson M:6 DEF libhdr.h[303] rtn_clkintson=
rtn_clwkq M:12 DEF libhdr.h[311] rtn_clwkq=
rtn_context M:28 DEF libhdr.h[330] rtn_context=
rtn_crntask M:3 DEF libhdr.h[299] rtn_crntask=
rtn_days M:40 DEF libhdr.h[365] rtn_days=
rtn_dbgvars M:11 DEF libhdr.h[309] rtn_dbgvars=
rtn_dcountv M:34 DEF libhdr.h[349] rtn_dcountv=
rtn_devtab M:1 DEF libhdr.h[297] rtn_devtab=
rtn_dumpflag M:25 DEF libhdr.h[326] rtn_dumpflag=
rtn_envlist M:26 DEF libhdr.h[327] rtn_envlist=
rtn_gvecsize M:63 DEF libhdr.h[398] rtn_gvecsize=
rtn_hdrsvar M:37 DEF libhdr.h[358] rtn_hdrsvar=
rtn_hostaddsize M:62 DEF libhdr.h[395] rtn_hostaddsize=
rtn_icount M:48 DEF libhdr.h[378] rtn_icount=
rtn_idletcb M:32 DEF libhdr.h[346] rtn_idletcb=
rtn_info M:15 DEF libhdr.h[314] rtn_info=
rtn_insadebug M:8 DEF libhdr.h[305] rtn_insadebug=
rtn_intflag M:24 DEF libhdr.h[325] rtn_intflag=
rtn_joyaxis0 M:55 DEF libhdr.h[387] rtn_joyaxis0=
rtn_joyaxis1 M:56 DEF libhdr.h[388] rtn_joyaxis1=
rtn_joyaxis2 M:57 DEF libhdr.h[389] rtn_joyaxis2=
rtn_joyaxis3 M:58 DEF libhdr.h[390] rtn_joyaxis3=
rtn_joyaxis4 M:59 DEF libhdr.h[391] rtn_joyaxis4=
rtn_joyaxis5 M:60 DEF libhdr.h[392] rtn_joyaxis5=
rtn_joyaxis6 M:61 DEF libhdr.h[393] rtn_joyaxis6=
rtn_joyaxiscount M:52 DEF libhdr.h[384] rtn_joyaxiscount=
rtn_joybuttoncount M:51 DEF libhdr.h[383] rtn_joybuttoncount=
rtn_joybuttons M:54 DEF libhdr.h[386] rtn_joybuttons=
rtn_joycurrbuttons M:53 DEF libhdr.h[385] rtn_joycurrbuttons=
rtn_joystickfd M:49 DEF libhdr.h[381] rtn_joystickfd=
rtn_joystickfd1 M:50 DEF libhdr.h[382] rtn_joystickfd1=
rtn_keyboard M:20 DEF libhdr.h[319] rtn_keyboard=
rtn_klib M:18 DEF libhdr.h[317] rtn_klib=
rtn_lastch M:7 DEF libhdr.h[304] rtn_lastch=
rtn_mc0 M:43 DEF libhdr.h[370] rtn_mc0=
rtn_mc1 M:44 DEF libhdr.h[372] rtn_mc1=
rtn_mc2 M:45 DEF libhdr.h[373] rtn_mc2=
rtn_mc3 M:46 DEF libhdr.h[374] rtn_mc3=
rtn_membase M:13 DEF libhdr.h[312] rtn_membase=
rtn_memsize M:14 DEF libhdr.h[313] rtn_memsize=
rtn_mins M:41 DEF libhdr.h[367] rtn_mins=rtn_msecs
rtn_msecs M:41 DEF libhdr.h[366] rtn_msecs=
rtn_msecs M:41 MAN libhdr.h[367] rtn_mins=rtn_msecs
rtn_pathvar M:36 DEF libhdr.h[356] rtn_pathvar=
rtn_rootvar M:35 DEF libhdr.h[354] rtn_rootvar=
rtn_screen M:21 DEF libhdr.h[320] rtn_screen=
rtn_scriptsvar M:38 DEF libhdr.h[360] rtn_scriptsvar=
rtn_sys M:16 DEF libhdr.h[315] rtn_sys=
rtn_sysg M:30 DEF libhdr.h[339] rtn_sysg=
rtn_sysp M:29 DEF libhdr.h[338] rtn_sysp=
rtn_sysst M:31 DEF libhdr.h[340] rtn_sysst=
rtn_system M:47 DEF libhdr.h[376] rtn_system=
rtn_tallyv M:5 DEF libhdr.h[301] rtn_tallyv=
rtn_tasktab M:0 DEF libhdr.h[296] rtn_tasktab=0
rtn_tcblist M:2 DEF libhdr.h[298] rtn_tcblist=
rtn_ticks M:42 DEF libhdr.h[368] rtn_ticks=
rtn_upb M:80 DEF libhdr.h[404] rtn_upb=80
rtn_vecstatsv M:22 DEF libhdr.h[322] rtn_vecstatsv=
rtn_vecstatsvupb M:23 DEF libhdr.h[323] rtn_vecstatsvupb=
s.info M:1 DEF com/z80asm.b[3123] s.info=1
s.info M:1 DEF com/z80asm.b[366] s.info=1
s.size M:0 DEF com/z80asm.b[3121] s.size=0
s.size M:0 DEF com/z80asm.b[364] s.size=0
s.str M:0 DEF com/z80asm.b[3122] s.str=0
s.str M:0 DEF com/z80asm.b[365] s.str=0
sardch G:36 DEF libhdr.h[72] sardch=36
saved.rdch S:363 DEF com/z80asm.b[2251] saved.rdch=0
saved.rdch S:363 LL com/z80asm.b[2314] rdch:=saved.rdch
saved.rdch S:363 SL com/z80asm.b[2315] saved.rdch:=tab.rdch
saved.rdch S:363 SL com/z80asm.b[2339] saved.rdch:=rdch
saveregs M:31 DEF libhdr.h[482] saveregs=31
sawrch G:37 DEF libhdr.h[73] sawrch=37
sawritef G:95 DEF libhdr.h[132] sawritef=95
scan G:281 DEF com/z80asm.b[109] scan=ug+81
scan G:281 FN com/z80asm.b[4229] LET scan(item)=..
scan G:281 LG com/z80asm.b[3191] scan(i.comma)
scan G:281 LG com/z80asm.b[3225] WHILE scan(i.comma) DO ..
scan G:281 LG com/z80asm.b[3352] .. REPEATUNTIL ~scan(i.comma)
scan G:281 LG com/z80asm.b[3545] scan(i.comma)
scan G:281 LG com/z80asm.b[3561] UNLESS scan(i.comma) DO ..
scan G:281 LG com/z80asm.b[3665]
    .. REPEATUNTIL ~allow.concatination|~ans|~scan(i.comma)
scan G:281 LG com/z80asm.b[3679] IF ans&scan(i.lbkt) DO ..
scan G:281 LG com/z80asm.b[3685] IF scan(i.comma) DO ..
scan G:281 LG com/z80asm.b[3697] UNLESS scan(i.rbkt) DO ..
scan G:281 LG com/z80asm.b[3735] TEST scan(i.strlbkt) THEN .. ELSE ..
scan G:281 LG com/z80asm.b[3737] UNLESS scan(i.strrbkt) DO ..
scan G:281 LG com/z80asm.b[3739] TEST scan(i.percent) THEN .. ELSE ..
scan G:281 LG com/z80asm.b[3747] IF scan(i.colon) DO ..
scan G:281 LG com/z80asm.b[4506] TEST scan(i.space) THEN .. ELSE ..
scan G:281 LG com/z80asm.b[4515] scan(i.endlab)
scan G:281 LG com/z80asm.b[4523] scan(i.pling)
scan G:281 LG com/z80asm.b[4650] WHILE scan(i.or) DO ..
scan G:281 LG com/z80asm.b[4662] WHILE scan(i.and) DO ..
scan G:281 LG com/z80asm.b[4673] scan(i.not)
scan G:281 LG com/z80asm.b[4815] TEST scan(i.elbkt) THEN .. ELSE ..
scan G:281 LG com/z80asm.b[4904] TEST scan(i.equals) THEN .. ELSE ..
scan G:281 LG com/z80asm.b[4913] .. REPEATWHILE scan(i.comma)
scan G:281 LG com/z80asm.b[5057] .. REPEATUNTIL ~scan(i.comma)
scan G:281 LG com/z80asm.b[5085] scan(i.colon)
scan G:281 LG com/z80asm.b[5091] .. REPEATUNTIL ~scan(i.comma)
scan G:281 LG com/z80asm.b[5108] .. REPEATUNTIL ~scan(i.comma)
scan G:281 LG com/z80asm.b[5840] UNLESS scan(i.lbkt) DO ..
scan G:281 LG com/z80asm.b[5867] .. REPEATWHILE scan(i.comma)
scan G:281 LG com/z80asm.b[6019] TEST scan(i.lbkt) THEN .. ELSE ..
scan G:281 LG com/z80asm.b[6118] TEST scan(i.plus) THEN .. ELSE ..
scan G:281 LG com/z80asm.b[6119] IF scan(i.minus) DO ..
scan G:281 LG com/z80asm.b[6348] TEST scan(i.lbkt) THEN .. ELSE ..
scan G:281 LG com/z80asm.b[6480] TEST scan(i.lbkt) THEN .. ELSE ..
scan G:281 LG com/z80asm.b[6664] TEST ~scan(i.lbkt) THEN .. ELSE ..
scanreg G:400 DEF com/z80asm.b[259] scanreg=
scanreg G:400 FN com/z80asm.b[5785] LET scanreg(reg)=..
scanreg G:400 LG com/z80asm.b[6054] UNLESS scanreg(r.a) DO ..
scanreg G:400 LG com/z80asm.b[6088] TEST scanreg(r.a) THEN .. ELSE ..
scanreg G:400 LG com/z80asm.b[6111] UNLESS scanreg(r.a) DO ..
scanreg G:400 LG com/z80asm.b[6153] UNLESS scanreg(r.a) DO ..
scanreg G:400 LG com/z80asm.b[6481] UNLESS scanreg(r.sp) DO ..
scanreg G:400 LG com/z80asm.b[6486] TEST scanreg(r.de) THEN .. ELSE ..
scanreg G:400 LG com/z80asm.b[6489] UNLESS scanreg(r.hl) DO ..
scanreg G:400 LG com/z80asm.b[6491] TEST scanreg(r.af) THEN .. ELSE ..
scanreg G:400 LG com/z80asm.b[6671] TEST scanreg(r.c) THEN .. ELSE ..
scanreg G:400 LG com/z80asm.b[6692] TEST scanreg(r.c) THEN .. ELSE ..
scanreg G:400 LG com/z80asm.b[6705] UNLESS scanreg(r.a) DO ..
scb_blength M:14 DEF libhdr.h[516] scb_blength=
scb_block M:9 DEF libhdr.h[511] scb_block=
scb_buf M:3 DEF libhdr.h[505] scb_buf=
scb_bufend M:11 DEF libhdr.h[513] scb_bufend=
scb_encoding M:20 DEF libhdr.h[527] scb_encoding=
scb_end M:5 DEF libhdr.h[507] scb_end=
scb_endfn M:8 DEF libhdr.h[510] scb_endfn=
scb_fd M:16 DEF libhdr.h[518] scb_fd=
scb_fd1 M:17 DEF libhdr.h[519] scb_fd1=
scb_id M:0 DEF libhdr.h[502] scb_id=0
scb_lblock M:12 DEF libhdr.h[514] scb_lblock=
scb_ldata M:13 DEF libhdr.h[515] scb_ldata=
scb_maxnamelen M:31 DEF libhdr.h[500] scb_maxnamelen=31
scb_maxnamelen M:31 MAN libhdr.h[531]
    scb_nameeend=scb_name+scb_maxnamelen/bytesperword
scb_name M:21 DEF libhdr.h[529] scb_name=
scb_name M:21 MAN libhdr.h[531]
    scb_nameeend=scb_name+scb_maxnamelen/bytesperword
scb_nameeend M:28 DEF libhdr.h[531]
    scb_nameeend=scb_name+scb_maxnamelen/bytesperword
scb_pos M:4 DEF libhdr.h[506] scb_pos=
scb_rdfn M:6 DEF libhdr.h[508] scb_rdfn=
scb_reclen M:15 DEF libhdr.h[517] scb_reclen=
scb_size M:29 DEF libhdr.h[534] scb_size=
scb_size M:29 MAN libhdr.h[535] scb_upb=scb_size-1
scb_task M:2 DEF libhdr.h[504] scb_task=
scb_timeout M:18 DEF libhdr.h[520] scb_timeout=
scb_timeoutact M:19 DEF libhdr.h[523] scb_timeoutact=
scb_type M:1 DEF libhdr.h[503] scb_type=
scb_upb M:28 DEF libhdr.h[535] scb_upb=scb_size-1
scb_wrfn M:7 DEF libhdr.h[509] scb_wrfn=
scb_write M:10 DEF libhdr.h[512] scb_write=
scbt_console M:-1 DEF libhdr.h[496] scbt_console=-1
scbt_file M:1 DEF libhdr.h[494] scbt_file=1
scbt_mbx M:-2 DEF libhdr.h[497] scbt_mbx=-2
scbt_net M:2 DEF libhdr.h[493] scbt_net=2
scbt_ram M:0 DEF libhdr.h[495] scbt_ram=0
scbt_tcp M:-3 DEF libhdr.h[498] scbt_tcp=-3
second M:0 DEF com/z80asm.b[298] second=FALSE
second M:0 MAN com/z80asm.b[1033] IF pass=second&(ty&flag.temp)=0 DO ..
second M:0 MAN com/z80asm.b[1038]
    TEST pass=second&(ty&flag.temp)=0 THEN .. ELSE ..
second M:0 MAN com/z80asm.b[1046]
    TEST pass=second&(t!t.type&flag.double)~=0 THEN .. ELSE ..
second M:0 MAN com/z80asm.b[1068] IF pass=second&symty=type.none DO ..
second M:0 MAN com/z80asm.b[1074]
    TEST (ty&type.mask)=type.ref&(pass=second|(ty&flag.needs)~=0) THEN .. ELSE ..
second M:0 MAN com/z80asm.b[1171]
    IF ans=null&pass=second|ans~=null&(ans!t.type&type.mask)~=ty DO ..
second M:0 MAN com/z80asm.b[2470]
    TEST pass=second&lineno~=line.just.outlined THEN .. ELSE ..
second M:0 MAN com/z80asm.b[2899] IF pass=second DO ..
second M:0 MAN com/z80asm.b[2914] IF pass=second DO ..
second M:0 MAN com/z80asm.b[3003] IF pass=second DO ..
second M:0 MAN com/z80asm.b[3365] IF pass=second DO ..
second M:0 MAN com/z80asm.b[4348] pass:=second
second M:0 MAN com/z80asm.b[4377] pass:=second
second M:0 MAN com/z80asm.b[4770]
    IF pass=second&(ansvec!1=type.none|~iden.valid) DO ..
second M:0 MAN com/z80asm.b[4994] IF pass=second DO ..
second M:0 MAN com/z80asm.b[5035] UNLESS lab=null|pass=second DO ..
second M:0 MAN com/z80asm.b[5045] UNLESS lab=null|pass=second DO ..
second M:0 MAN com/z80asm.b[5118] IF pass=second DO ..
second M:0 MAN com/z80asm.b[5128] IF pass=second DO ..
second M:0 MAN com/z80asm.b[5141] IF pass=second DO ..
second M:0 MAN com/z80asm.b[5496] IF pass=second DO ..
second M:0 MAN com/z80asm.b[971]
    iden.valid:=~(t=null->pass=second,...~=0&rel.pos>=0)
sectno G:350 DEF com/z80asm.b[187] sectno=ug+150
sectno G:350 LG com/z80asm.b[1277] writef("*n*nNam'on %N:*n*n",sectno)
sectno G:350 LG com/z80asm.b[4420] sectno:=sectno+1
sectno G:350 LG com/z80asm.b[4476]
    writef("****** B'tion %N*n",name,pass=first->"first","second",sectno)
sectno G:350 LG com/z80asm.b[4925] IF done<sectno DO ..
sectno G:350 LG com/z80asm.b[4931] done:=sectno
sectno G:350 LG com/z80asm.b[4938] UNLESS done<sectno DO ..
sectno G:350 LG com/z80asm.b[4941] done:=sectno
sectno G:350 SG com/z80asm.b[4298] sectno:=1
sectno G:350 SG com/z80asm.b[4420] sectno:=sectno+1
sectword M:64991 DEF libhdr.h[265] sectword=64991
selectinput G:56 DEF libhdr.h[92] selectinput=56
selectinput G:56 LG com/z80asm.b[4322] selectinput(pass.first)
selectinput G:56 LG com/z80asm.b[4360] selectinput(pass.first)
selectinput G:56 LG com/z80asm.b[4362] selectinput(pass.second)
selectinput G:56 LG com/z80asm.b[4401] selectinput(state!in.second)
selectinput G:56 LG com/z80asm.b[4421] selectinput(state!in.first)
selectinput G:56 LG com/z80asm.b[5172] selectinput(s)
selectinput G:56 LG com/z80asm.b[5178] selectinput(savein)
selectoutput G:57 DEF libhdr.h[93] selectoutput=57
selectoutput G:57 LG com/z80asm.b[1732] selectoutput(binfile)
selectoutput G:57 LG com/z80asm.b[1757] selectoutput(binfile)
selectoutput G:57 LG com/z80asm.b[1787] selectoutput(saveout)
selectoutput G:57 LG com/z80asm.b[1806] selectoutput(saveout)
selectoutput G:57 LG com/z80asm.b[1821] selectoutput(saveout)
selectoutput G:57 LG com/z80asm.b[1833] selectoutput(saveout)
selectoutput G:57 LG com/z80asm.b[1843] selectoutput(saveout)
selectoutput G:57 LG com/z80asm.b[1852] selectoutput(saveout)
selectoutput G:57 LG com/z80asm.b[1862] selectoutput(saveout)
selectoutput G:57 LG com/z80asm.b[1873] selectoutput(saveout)
selectoutput G:57 LG com/z80asm.b[1879] selectoutput(binfile)
selectoutput G:57 LG com/z80asm.b[1882] selectoutput(saveout)
selectoutput G:57 LG com/z80asm.b[1889] selectoutput(binfile)
selectoutput G:57 LG com/z80asm.b[1898] selectoutput(saveout)
selectoutput G:57 LG com/z80asm.b[2425] selectoutput(out)
selectoutput G:57 LG com/z80asm.b[2432] selectoutput(saveout)
selectoutput G:57 LG com/z80asm.b[3366] selectoutput(out)
selectoutput G:57 LG com/z80asm.b[3368] selectoutput(saveout)
selectoutput G:57 LG com/z80asm.b[4352] selectoutput(out)
selectoutput G:57 LG com/z80asm.b[4358] selectoutput(save.out)
selectoutput G:57 LG com/z80asm.b[4387] selectoutput(out)
selectoutput G:57 LG com/z80asm.b[4389] selectoutput(saveout)
selectoutput G:57 LG com/z80asm.b[4928] selectoutput(out)
selectoutput G:57 LG com/z80asm.b[4930] selectoutput(savout)
selectoutput G:57 LG com/z80asm.b[5483] selectoutput(listfile)
selectoutput G:57 LG com/z80asm.b[5495] selectoutput(out)
selectoutput G:57 LG com/z80asm.b[5512] selectoutput(listfile)
selectoutput G:57 LG com/z80asm.b[5516] selectoutput(binfile)
selectoutput G:57 LG com/z80asm.b[5519] selectoutput(out)
sendpkt G:165 DEF libhdr.h[215] sendpkt=165
sepch G:373 DEF com/z80asm.b[213] sepch=ug+173
sepch G:373 LG com/z80asm.b[3328] new.label%2:=sepch
sepch G:373 LG com/z80asm.b[3329] new.label%3:=sepch
sepch G:373 LG com/z80asm.b[4073]
    .. REPEATWHILE 65<=ch&ch<=90|ch=sepch|48<=ch&ch<=57
sepch G:373 SG com/z80asm.b[5438] sepch:=46
set_process_name G:175 DEF libhdr.h[223] set_process_name=175
setbit G:112 DEF libhdr.h[149] setbit=112
setbulk G:122 DEF libhdr.h[159] setbulk=122
setflags G:156 DEF libhdr.h[207] setflags=156
setlogname G:117 DEF libhdr.h[154] setlogname=117
setproc G:299 DEF com/z80asm.b[129] setproc=ug+99
setproc G:299 LG com/z80asm.b[6925] code.put("DEFL",setproc,0)
setproc G:299 RT com/z80asm.b[4962] LET setproc(lab)BE..
setrecordlength G:68 DEF libhdr.h[104] setrecordlength=68
setseed G:35 DEF libhdr.h[71] setseed=35
settimeout G:55 DEF libhdr.h[91] settimeout=55
settimeoutact G:124 DEF libhdr.h[161] settimeoutact=124
setvec G:181 DEF libhdr.h[228] setvec=181
sheli M:134 DEF com/z80asm.b[6145] sheli=134
sheli M:134 MAN com/z80asm.b[6160]
    UNLESS getrorind(putf(info,f.source,sheli),f.dest,fn.normal) DO ..
sheln M:198 DEF com/z80asm.b[6144] sheln=198
sheln M:198 MAN com/z80asm.b[6163] putword(putf(info,f.source,sheln))
shifte F:1035 FN com/z80asm.b[4672] LET shifte(ansvec)=..
shifte F:1035 LF com/z80asm.b[4661] shifte(ansvec)
shifte F:1035 LF com/z80asm.b[4664] ansvec!0:=ansvec!0&shifte(s)
short G:387 DEF com/z80asm.b[229] short=ug+187
short G:387 LG com/z80asm.b[2401] neads(short->2,3)
short G:387 LG com/z80asm.b[2410] UNLESS short DO ..
short G:387 SG com/z80asm.b[5273] short:=TRUE
short G:387 SG com/z80asm.b[5453] short:=FALSE
simplegetvec G:343 DEF com/z80asm.b[178] simplegetvec=ug+143
simplegetvec G:343 FN com/z80asm.b[746] LET simplegetvec(n)=..
simplegetvec G:343 LG com/z80asm.b[1025] simplegetvec(tentrysize+length)
simplegetvec G:343 LG com/z80asm.b[2900] simplegetvec(2+s%0/2)
simplegetvec G:343 LG com/z80asm.b[3038] simplegetvec(t.size-1)
simplegetvec G:343 LG com/z80asm.b[3085] simplegetvec(l-1)
simplegetvec G:343 LG com/z80asm.b[3216]
    macro:=simplegetvec(macrosize-1)
simplegetvec G:343 LG com/z80asm.b[3248] simplegetvec(text.size-1)
simplegetvec G:343 LG com/z80asm.b[3433]
    simplegetvec(1+parm%0/bytesperword)
simplegetvec G:343 LG com/z80asm.b[4285]
    linbuf:=simplegetvec(linbufsize/bytesperword+1)
simplegetvec G:343 LG com/z80asm.b[4288]
    lex.space:=simplegetvec(256/bytesperword-1)
simplegetvec G:343 LG com/z80asm.b[4289]
    lab.space:=simplegetvec(256/bytesperword-1)
simplegetvec G:343 LG com/z80asm.b[4290]
    binbuf:=simplegetvec(binbufsize+b.nextmod)
simplegetvec G:343 LG com/z80asm.b[4303] files:=simplegetvec(max.files)
simplegetvec G:343 LG com/z80asm.b[4926]
    pagetitle:=getstr(strexp(null,...),simplegetvec)
simplegetvec G:343 LG com/z80asm.b[4927]
    modulename:=lab=null->pagetitle,getstr(lab,simplegetvec)
simplegetvec G:343 LG com/z80asm.b[4982]
    putlab(lab,getstr(str,simplegetvec),type.text)
simplegetvec G:343 LG com/z80asm.b[919]
    hash.table:=simplegetvec(hash.table.size)
sort.list F:95 LF com/z80asm.b[1267]
    sort.list(@list,null,null,t.link,compare)
sort.list F:95 LF com/z80asm.b[1508]
    sort.list(first.elem+link.field,last.elem.link,null.elem,link.field,compare)
sort.list F:95 LF com/z80asm.b[1516]
    sort.list(first.elem.ptr,first.elem,null.elem,link.field,compare)
sort.list F:95 RT com/z80asm.b[1432]
    LET sort.list(first.elem.ptr,last.elem.link,null.elem,link.field,compare)BE..
spaceproc G:312 DEF com/z80asm.b[142] spaceproc=ug+112
spaceproc G:312 LG com/z80asm.b[6936] code.put("SPACE",spaceproc,0)
spaceproc G:312 RT com/z80asm.b[5124] LET spaceproc(lab)BE..
spec.size M:2 DEF com/z80asm.b[436] spec.size=2
spec.size M:2 MAN com/z80asm.b[4601] LET spec=VEC spec.size
spec.size M:2 MAN com/z80asm.b[4610] LET spec=VEC spec.size
spec.size M:2 MAN com/z80asm.b[4906] LET spec=VEC spec.size
spec.size M:2 MAN com/z80asm.b[4952] LET spec=VEC spec.size
spec.size M:2 MAN com/z80asm.b[4966] LET spec=VEC spec.size
spec.size M:2 MAN com/z80asm.b[4991] LET spec=VEC spec.size
spec.size M:2 MAN com/z80asm.b[5005] LET spec=VEC spec.size
spec.size M:2 MAN com/z80asm.b[5865] LET spec=VEC spec.size
spec.size M:2 MAN com/z80asm.b[6011] LET spec=VEC spec.size
spec.size M:2 MAN com/z80asm.b[6352] LET spec=VEC spec.size
spec.size M:2 MAN com/z80asm.b[6371] LET spec=VEC spec.size
splitname G:47 DEF libhdr.h[83] splitname=47
srchwk G:150 DEF libhdr.h[201] srchwk=150
stackfree G:123 DEF libhdr.h[160] stackfree=123
stacktext G:251 DEF com/z80asm.b[73] stacktext=ug+51
stacktext G:251 FN com/z80asm.b[2828]
    LET stacktext(activation,parm.symbol,string)=..
stacktext G:251 LG com/z80asm.b[3187]
    stacktext(macro.activation,parm+1,str)
stacktext G:251 LG com/z80asm.b[3196]
    stacktext(macro.activation,parm+1,"")
stacktext G:251 LG com/z80asm.b[3349]
    stacktext(macro.stack,item.info,gen.label())
stackword M:#xABCD1234 DEF libhdr.h[263] stackword=-#x5432EDCC
start G:1 DEF libhdr.h[36] start=1
start G:1 RT com/z80asm.b[5409] LET start(startarg)BE..
startargsize M:25 DEF com/z80asm.b[5338] startargsize=100/bytesperword
startargsize M:25 MAN com/z80asm.b[5341] getvec(startargsize)
startargsize M:25 MAN com/z80asm.b[5343]
    TEST 0=rdargs("Prog='st,Opt/k",vect,startargsize) THEN .. ELSE ..
startasm G:356 DEF com/z80asm.b[195] startasm=ug+156
startasm G:356 FN com/z80asm.b[7037] LET startasm(version)=..
startasm G:356 LG com/z80asm.b[5442] asmver:=startasm(versionno)
startco G:23 DEF libhdr.h[59] startco=23
startparse G:357 DEF com/z80asm.b[196] startparse=ug+157
startparse G:357 LG com/z80asm.b[4323] startparse()
startparse G:357 LG com/z80asm.b[4437] startparse()
startparse G:357 RT com/z80asm.b[4367] LET startparse()BE..
startpc G:352 DEF com/z80asm.b[189] startpc=ug+152
startpc G:352 LG com/z80asm.b[2529]
    TEST linbuf%1=comntch|pc=startpc+binbuf!b.top-b.nextmod THEN .. ELSE ..
startpc G:352 LG com/z80asm.b[2532] writef("%X4  ",startpc)
startpc G:352 SG com/z80asm.b[2521] startpc:=pc+bufpos-b.nextmod+1
startpc G:352 SG com/z80asm.b[4496] startpc:=pc
startpc G:352 SG com/z80asm.b[5011] startpc:=pc
startpc G:352 SG com/z80asm.b[5033] startpc:=0
startpc G:352 SG com/z80asm.b[5043] startpc:=0
state G:345 DEF com/z80asm.b[182] state=ug+145
state G:345 LG com/z80asm.b[4326] state!in.lineno:=line.of.file
state G:345 LG com/z80asm.b[4327] state!in.errcount:=errcount
state G:345 LG com/z80asm.b[4328] state!in.first:=pass.first
state G:345 LG com/z80asm.b[4329] state!in.second:=pass.second
state G:345 LG com/z80asm.b[4330] state!in.list:=list
state G:345 LG com/z80asm.b[4331] state!in.memlevel:=memory!memsize
state G:345 LG com/z80asm.b[4392] errcount:=state!in.errcount
state G:345 LG com/z80asm.b[4393] list:=state!in.list
state G:345 LG com/z80asm.b[4394] line.of.file:=state!in.lineno
state G:345 LG com/z80asm.b[4400] state!in.first:=input()
state G:345 LG com/z80asm.b[4401] selectinput(state!in.second)
state G:345 LG com/z80asm.b[4406] state!in.errcount:=errcount
state G:345 LG com/z80asm.b[4408] state!in.second:=input()
state G:345 LG com/z80asm.b[4409] state!in.list:=list
state G:345 LG com/z80asm.b[4410] state!in.lineno:=line.of.file
state G:345 LG com/z80asm.b[4421] selectinput(state!in.first)
state G:345 LG com/z80asm.b[4422] memory!memsize:=state!in.memlevel
state G:345 SG com/z80asm.b[4325] state:=TABLE 0,0,0,...
stepstream G:67 DEF libhdr.h[103] stepstream=67
stop G:2 DEF libhdr.h[37] stop=2
stop G:2 LG com/z80asm.b[5524] stop(bad.rc)
stoplab F:629 LAB com/z80asm.b[3242] stoplab:errorlabel:=savelab
stoplab F:629 LF com/z80asm.b[3240] errorlabel:=stoplab
storeproc G:311 DEF com/z80asm.b[141] storeproc=ug+111
storeproc G:311 LG com/z80asm.b[6917] code.put("DS",storeproc,0)
storeproc G:311 LG com/z80asm.b[6918] code.put("DEFS",storeproc,0)
storeproc G:311 RT com/z80asm.b[5017] LET storeproc(lab)BE..
str2numb G:101 DEF libhdr.h[138] str2numb=101
strexp G:254 DEF com/z80asm.b[78] strexp=ug+54
strexp G:254 FN com/z80asm.b[3648]
    LET strexp(buffer,startpos,allow.concatination)=..
strexp G:254 LG com/z80asm.b[3182] str:=strexp(null,0,FALSE)
strexp G:254 LG com/z80asm.b[3364] str:=strexp(null,0,TRUE)
strexp G:254 LG com/z80asm.b[3554]
    arg1:=is.string->strexp(null,0,...),expression()
strexp G:254 LG com/z80asm.b[3562]
    arg2:=is.string->strexp(null,0,FALSE),expression()
strexp G:254 LG com/z80asm.b[3736] strexp(buffer,startpos)
strexp G:254 LG com/z80asm.b[4823] strexp(null,0)
strexp G:254 LG com/z80asm.b[4892] item.info:=strexp(null,0,FALSE)
strexp G:254 LG com/z80asm.b[4926]
    pagetitle:=getstr(strexp(null,...),simplegetvec)
strexp G:254 LG com/z80asm.b[4939] str:=strexp(null,0,TRUE)
strexp G:254 LG com/z80asm.b[4981] str:=strexp(null,0,TRUE)
strexp G:254 LG com/z80asm.b[5117] str:=strexp(null,0,TRUE)
string_to_dat G:111 DEF libhdr.h[148] string_to_dat=111
string_to_number G:100 DEF libhdr.h[137] string_to_number=100
strpart F:745 FN com/z80asm.b[3707] LET strpart(buffer,startpos)=..
strpart F:745 LF com/z80asm.b[3678] ans:=strpart(buffer,startpos)
strterm F:744 FN com/z80asm.b[3675] LET strterm(buffer,startpos)=..
strterm F:744 LF com/z80asm.b[3663] ans:=strterm(buffer,startpos)
syms S:593 DEF com/z80asm.b[3117] syms=null
syms S:593 LL com/z80asm.b[3132] tree.get(syms,s)
syms S:593 LLL com/z80asm.b[3128] tree.put(@syms,reg,val)
sys G:3 DEF libhdr.h[38] sys=3
sysabort G:29 DEF libhdr.h[65] sysabort=29
syswrch G:233 DEF com/z80asm.b[53] syswrch=ug+33
syswrch G:233 LG com/z80asm.b[1778] wrch:=syswrch
syswrch G:233 LG com/z80asm.b[2616] wrch:=syswrch
syswrch G:233 SG com/z80asm.b[4281] syswrch:=wrch
t.info M:3 DEF com/z80asm.b[853] t.info=3
t.info M:3 MAN com/z80asm.b[1028] new.elem!t.info:=lineno
t.info M:3 MAN com/z80asm.b[1042] rel.posn:=t!t.info-lineno
t.info M:3 MAN com/z80asm.b[1063] t!t.info:=lineno
t.info M:3 MAN com/z80asm.b[1093] t!t.info:=lineno
t.info M:3 MAN com/z80asm.b[1146]
    iden.valid:=t=null|t!t.info>=lineno->FALSE,(t!t.type&type.mask)=ty
t.info M:3 MAN com/z80asm.b[1251] t.info!entry
t.info M:3 MAN com/z80asm.b[1279] t.info!list
t.info M:3 MAN com/z80asm.b[854] tentrysize=t.info+1
t.info M:3 MAN com/z80asm.b[966] t=null->1,t!t.info-lineno
t.left M:0 DEF com/z80asm.b[3026] t.left=0
t.left M:0 MAN com/z80asm.b[3039] newitem!t.left:=null
t.left M:0 MAN com/z80asm.b[3047] lvtree:=!lvtree+(c<0->t.left,t.right)
t.left M:0 MAN com/z80asm.b[3058] tree:=tree!(c<0->t.left,t.right)
t.link M:1 DEF com/z80asm.b[851] t.link=1
t.link M:1 MAN com/z80asm.b[1031] new.elem!t.link:=null
t.link M:1 MAN com/z80asm.b[1118] !entry:=!entry!t.link
t.link M:1 MAN com/z80asm.b[1255] entry:=t.link!entry
t.link M:1 MAN com/z80asm.b[1267]
    sort.list(@list,null,null,t.link,compare)
t.link M:1 MAN com/z80asm.b[1311] list:=t.link!list
t.link M:1 MAN com/z80asm.b[1329] entry:=t.link!entry
t.link M:1 MAN com/z80asm.b[1369] WHILE t.link!entry~=null DO ..
t.link M:1 MAN com/z80asm.b[1371] entry:=t.link!entry
t.link M:1 MAN com/z80asm.b[1379]
    t.link!entry:=hash.table!hash.table.size
t.link M:1 MAN com/z80asm.b[1425] t:=t.link!t
t.link M:1 MAN com/z80asm.b[924]
    dicposn:=hash.chain.anchor(string)-t.link
t.link M:1 MAN com/z80asm.b[925] WHILE t.link!dicposn~=null DO ..
t.link M:1 MAN com/z80asm.b[926] t.str+t.link!dicposn
t.link M:1 MAN com/z80asm.b[937] dicposn:=t.link!dicposn
t.link M:1 MAN com/z80asm.b[939] dicposn:=dicposn+t.link
t.right M:1 DEF com/z80asm.b[3027] t.right=1
t.right M:1 MAN com/z80asm.b[3039] newitem!t.right:=null
t.right M:1 MAN com/z80asm.b[3047] lvtree:=!lvtree+(c<0->t.left,t.right)
t.right M:1 MAN com/z80asm.b[3058] tree:=tree!(c<0->t.left,t.right)
t.size M:4 DEF com/z80asm.b[3030] t.size=4
t.size M:4 MAN com/z80asm.b[3038] simplegetvec(t.size-1)
t.str M:2 DEF com/z80asm.b[3028] t.str=2
t.str M:2 MAN com/z80asm.b[3040] newitem!t.str:=name
t.str M:2 MAN com/z80asm.b[3045] compstring(!lvtree!t.str,name)
t.str M:2 MAN com/z80asm.b[3056] compstring(tree!t.str,name)
t.str M:4 DEF com/z80asm.b[855] t.str=tentrysize
t.str M:4 MAN com/z80asm.b[1030] (new.elem+t.str)!i:=string!i
t.str M:4 MAN com/z80asm.b[1057] warn(e.doublelab,t+t.str)
t.str M:4 MAN com/z80asm.b[1266] compstring(elem1+t.str,elem2+t.str)
t.str M:4 MAN com/z80asm.b[1282] t.str+list
t.str M:4 MAN com/z80asm.b[1411] t.str+t
t.str M:4 MAN com/z80asm.b[926] t.str+t.link!dicposn
t.type M:0 DEF com/z80asm.b[850] t.type=0
t.type M:0 MAN com/z80asm.b[1029] new.elem!t.type:=ty
t.type M:0 MAN com/z80asm.b[1041] symty:=t!t.type&type.mask
t.type M:0 MAN com/z80asm.b[1046]
    TEST pass=second&(t!t.type&flag.double)~=0 THEN .. ELSE ..
t.type M:0 MAN com/z80asm.b[1054] t!t.type:=t!t.type|flag.double
t.type M:0 MAN com/z80asm.b[1059]
    t!t.type:=symty=type.ref->type.def,t!t.type|flag.def
t.type M:0 MAN com/z80asm.b[1064] symty:=t!t.type&type.mask
t.type M:0 MAN com/z80asm.b[1079] t!t.type:=t!t.type|flag.needs
t.type M:0 MAN com/z80asm.b[1090] deletetype(t!t.type,t!t.val)
t.type M:0 MAN com/z80asm.b[1094]
    t!t.type:=ty|t!t.type&(flag.double|flag.def)
t.type M:0 MAN com/z80asm.b[1097] deletetype(t!t.type,t!t.val)
t.type M:0 MAN com/z80asm.b[1099] t!t.type:=t!t.type|flag.double
t.type M:0 MAN com/z80asm.b[1116]
    TEST (!entry!t.type&type.mask)=(ty&type.mask) THEN .. ELSE ..
t.type M:0 MAN com/z80asm.b[1117] deletetype(!entry!t.type,!entry!t.val)
t.type M:0 MAN com/z80asm.b[1146]
    iden.valid:=t=null|t!t.info>=lineno->FALSE,(t!t.type&type.mask)=ty
t.type M:0 MAN com/z80asm.b[1160] ans:=(sym!t.type&type.mask)=ty
t.type M:0 MAN com/z80asm.b[1171]
    IF ans=null&pass=second|ans~=null&(ans!t.type&type.mask)~=ty DO ..
t.type M:0 MAN com/z80asm.b[1252]
    IF allsyms|file.number(@line.no)=0|(t.type!entry&flag.double)~=0 DO ..
t.type M:0 MAN com/z80asm.b[1281] t.type!list
t.type M:0 MAN com/z80asm.b[1328]
    deletetype(t.type!entry&type.mask,t.val!entry)
t.type M:0 MAN com/z80asm.b[1409] t.type!t
t.type M:0 MAN com/z80asm.b[965] t=null->type.none,t!t.type&type.mask
t.type M:0 MAN com/z80asm.b[967]
    IF t=null|rel.pos>=0|symty=type.ref|symty=type.none|(t!t.type&flag.fwd)~=0 DO ..
t.type M:0 MAN com/z80asm.b[971]
    iden.valid:=~(t=null->pass=second,...~=0&rel.pos>=0)
t.type M:0 MAN com/z80asm.b[987]
    ansvec!0:=(ans!t.type&type.mask)>=type.->valtype(...&type.mask,ans!t.val),ans!t.val
t.type M:0 MAN com/z80asm.b[989] ansvec!1:=ans!t.type&~flag.double
t.val M:2 DEF com/z80asm.b[852] t.val=2
t.val M:2 MAN com/z80asm.b[1027] new.elem!t.val:=v
t.val M:2 MAN com/z80asm.b[1078] t!t.val:=v
t.val M:2 MAN com/z80asm.b[1090] deletetype(t!t.type,t!t.val)
t.val M:2 MAN com/z80asm.b[1092] t!t.val:=v
t.val M:2 MAN com/z80asm.b[1097] deletetype(t!t.type,t!t.val)
t.val M:2 MAN com/z80asm.b[1117] deletetype(!entry!t.type,!entry!t.val)
t.val M:2 MAN com/z80asm.b[1147] RESULTIS iden.valid->t!t.val,0
t.val M:2 MAN com/z80asm.b[1176] RESULTIS ans=null->-1,ans!t.val
t.val M:2 MAN com/z80asm.b[1297]
    writetype(typecode&type.mask,t.val!list)
t.val M:2 MAN com/z80asm.b[1328]
    deletetype(t.type!entry&type.mask,t.val!entry)
t.val M:2 MAN com/z80asm.b[1410] t.val!t
t.val M:2 MAN com/z80asm.b[987]
    ansvec!0:=(ans!t.type&type.mask)>=type.->valtype(...&type.mask,ans!t.val),ans!t.val
t.val M:2 MAN com/z80asm.b[990] ansvec!2:=@ans!t.val
t.val M:3 DEF com/z80asm.b[3029] t.val=3
t.val M:3 MAN com/z80asm.b[3041] newitem!t.val:=item
t.val M:3 MAN com/z80asm.b[3096] RESULTIS t=null->null,t!t.val
t.val M:3 MAN com/z80asm.b[3133] RESULTIS t=null->r.bad,t!t.val
t_bhunk M:3000 DEF libhdr.h[259] t_bhunk=3000
t_bhunk64 M:4000 DEF libhdr.h[260] t_bhunk64=4000
t_end M:1002 DEF libhdr.h[255] t_end=1002
t_end64 M:2002 DEF libhdr.h[258] t_end64=2002
t_hunk M:1000 DEF libhdr.h[253] t_hunk=1000
t_hunk64 M:2000 DEF libhdr.h[256] t_hunk64=2000
t_reloc M:1001 DEF libhdr.h[254] t_reloc=1001
t_reloc64 M:2001 DEF libhdr.h[257] t_reloc64=2001
tab.rdch F:367 FN com/z80asm.b[2305] LET tab.rdch()=..
tab.rdch F:367 LF com/z80asm.b[2315] saved.rdch:=tab.rdch
tab.rdch F:367 LF com/z80asm.b[2340] rdch:=tab.rdch
taskid G:152 DEF libhdr.h[203] taskid=152
taskwait G:160 DEF libhdr.h[211] taskwait=160
tcb G:151 DEF libhdr.h[202] tcb=151
tcb_a M:11 DEF libhdr.h[635] tcb_a=tcb_regs
tcb_active M:10 DEF libhdr.h[632] tcb_active=10
tcb_b M:12 DEF libhdr.h[636] tcb_b=12
tcb_c M:13 DEF libhdr.h[637] tcb_c=13
tcb_count M:18 DEF libhdr.h[642] tcb_count=18
tcb_flags M:5 DEF libhdr.h[627] tcb_flags=5
tcb_g M:15 DEF libhdr.h[639] tcb_g=15
tcb_gbase M:8 DEF libhdr.h[630] tcb_gbase=8
tcb_link M:0 DEF libhdr.h[622] tcb_link=0
tcb_namebase M:19 DEF libhdr.h[644] tcb_namebase=19
tcb_namebase M:19 MAN libhdr.h[646]
    tcb_upb=tcb_namebase+15/bytesperword+1
tcb_p M:14 DEF libhdr.h[638] tcb_p=14
tcb_pc M:17 DEF libhdr.h[641] tcb_pc=17
tcb_pri M:2 DEF libhdr.h[624] tcb_pri=2
tcb_regs M:11 DEF libhdr.h[634] tcb_regs=11
tcb_regs M:11 MAN libhdr.h[635] tcb_a=tcb_regs
tcb_sbase M:9 DEF libhdr.h[631] tcb_sbase=9
tcb_seglist M:7 DEF libhdr.h[629] tcb_seglist=7
tcb_st M:16 DEF libhdr.h[640] tcb_st=16
tcb_state M:4 DEF libhdr.h[626] tcb_state=4
tcb_stsiz M:6 DEF libhdr.h[628] tcb_stsiz=6
tcb_taskid M:1 DEF libhdr.h[623] tcb_taskid=1
tcb_upb M:23 DEF libhdr.h[646] tcb_upb=tcb_namebase+15/bytesperword+1
tcb_wkq M:3 DEF libhdr.h[625] tcb_wkq=3
tempgetvec G:344 DEF com/z80asm.b[179] tempgetvec=ug+144
tempgetvec G:344 FN com/z80asm.b[728] LET tempgetvec(n)=..
tempgetvec G:344 LG com/z80asm.b[2706] tempgetvec(textsize-1)
tempgetvec G:344 LG com/z80asm.b[2831] getstr(string,tempgetvec)
tempgetvec G:344 LG com/z80asm.b[2834] tempgetvec(len)
tempgetvec G:344 LG com/z80asm.b[3285] tempgetvec(macrosize-1)
tempgetvec G:344 LG com/z80asm.b[3295] tempgetvec(text.size-1)
tempgetvec G:344 LG com/z80asm.b[3391]
    write.macro->tempgetvec(-1),macro!macro.text
tempgetvec G:344 LG com/z80asm.b[3558] arg1:=getstr(arg1,tempgetvec)
tempgetvec G:344 LG com/z80asm.b[3656]
    buffer:=tempgetvec(256/bytesperword)
tempval G:11 DEF libhdr.h[46] tempval=11
tentrysize M:4 DEF com/z80asm.b[854] tentrysize=t.info+1
tentrysize M:4 MAN com/z80asm.b[1025] simplegetvec(tentrysize+length)
tentrysize M:4 MAN com/z80asm.b[855] t.str=tentrysize
term F:1038 FN com/z80asm.b[4731] LET term(ansvec)=..
term F:1038 LF com/z80asm.b[4713] term(ansvec)
term F:1038 LF com/z80asm.b[4719] TEST term(t)=0 THEN .. ELSE ..
term F:1038 LF com/z80asm.b[4722] ansvec!0:=ansvec!0*term(t)
testbit G:113 DEF libhdr.h[150] testbit=113
testflags G:157 DEF libhdr.h[208] testflags=157
testflags G:157 LG com/z80asm.b[4475] IF testflags(1) DO ..
text.block M:1 DEF com/z80asm.b[2691] text.block=1
text.block M:1 MAN com/z80asm.b[2717] activation!text.block:=null
text.block M:1 MAN com/z80asm.b[2753] activation!text.block:=text.area
text.block M:1 MAN com/z80asm.b[2797] ch:=this.macro!text.block%0
text.block M:1 MAN com/z80asm.b[2804]
    ch:=this.macro!text.block%this.macro!text.chptr
text.chars M:2 DEF com/z80asm.b[2692] text.chars=2
text.chars M:2 MAN com/z80asm.b[2718] activation!text.chars:=0
text.chars M:2 MAN com/z80asm.b[2754]
    activation!text.chars:=text.area=null->0,charlen
text.chars M:2 MAN com/z80asm.b[2775]
    TEST this.macro!text.chptr>this.macro!text.chars THEN .. ELSE ..
text.chars M:2 MAN com/z80asm.b[2785]
    TEST this.macro!text.chptr=this.macro!text.chars THEN .. ELSE ..
text.chars M:2 MAN com/z80asm.b[2816]
    this.macro!text.chptr:=this.macro!text.chars-1
text.chptr M:3 DEF com/z80asm.b[2693] text.chptr=3
text.chptr M:3 MAN com/z80asm.b[2719] activation!text.chptr:=start.pos-1
text.chptr M:3 MAN com/z80asm.b[2774]
    this.macro!text.chptr:=this.macro!text.chptr+1
text.chptr M:3 MAN com/z80asm.b[2775]
    TEST this.macro!text.chptr>this.macro!text.chars THEN .. ELSE ..
text.chptr M:3 MAN com/z80asm.b[2785]
    TEST this.macro!text.chptr=this.macro!text.chars THEN .. ELSE ..
text.chptr M:3 MAN com/z80asm.b[2794] this.macro!text.chptr:=0
text.chptr M:3 MAN com/z80asm.b[2804]
    ch:=this.macro!text.block%this.macro!text.chptr
text.chptr M:3 MAN com/z80asm.b[2816]
    this.macro!text.chptr:=this.macro!text.chars-1
text.link M:0 DEF com/z80asm.b[2690] text.link=0
text.link M:0 MAN com/z80asm.b[2711] p:=p!text.link
text.link M:0 MAN com/z80asm.b[2716] activation!text.link:=null
text.link M:0 MAN com/z80asm.b[2751] activation!text.link:=macro.stack
text.link M:0 MAN com/z80asm.b[2780] macro.stack:=macro.stack!text.link
text.parms M:5 DEF com/z80asm.b[2695] text.parms=5
text.parms M:5 MAN com/z80asm.b[2720] activation!text.parms:=null
text.parms M:5 MAN com/z80asm.b[2786] this.macro!text.parms
text.parms M:5 MAN com/z80asm.b[2841] local!0:=activation!text.parms
text.parms M:5 MAN com/z80asm.b[2842] activation!text.parms:=local
text.savch M:4 DEF com/z80asm.b[2694] text.savch=4
text.savch M:4 MAN com/z80asm.b[2755]
    activation!text.savch:=(print.expansions->32768,0)|(ch1=endstreamch->ch,0)
text.savch M:4 MAN com/z80asm.b[2799] ch:=this.macro!text.savch
text.times M:6 DEF com/z80asm.b[2696] text.times=6
text.times M:6 MAN com/z80asm.b[2721]
    activation!text.times:=expansions<0->expansions,expansions-1
text.times M:6 MAN com/z80asm.b[2791]
    TEST this.macro!text.times~=0 THEN .. ELSE ..
text.times M:6 MAN com/z80asm.b[2792]
    UNLESS this.macro!text.times<0 DO ..
text.times M:6 MAN com/z80asm.b[2793]
    this.macro!text.times:=this.macro!text.times-1
text.times M:6 MAN com/z80asm.b[2815] this.macro!text.times:=0
textproc G:305 DEF com/z80asm.b[135] textproc=ug+105
textproc G:305 LG com/z80asm.b[6926] code.put("TEXT",textproc,0)
textproc G:305 RT com/z80asm.b[4977] LET textproc(lab)BE..
textsize M:7 DEF com/z80asm.b[2697] textsize=7
textsize M:7 MAN com/z80asm.b[2706] tempgetvec(textsize-1)
tg M:190 DEF libhdr.h[237] tg=190
throws G:385 DEF com/z80asm.b[227] throws=ug+185
throws G:385 LG com/z80asm.b[2623] restartpage:=throws
throws G:385 LG com/z80asm.b[2627] UNLESS throws DO ..
throws G:385 LG com/z80asm.b[4399] restartpage:=throws
throws G:385 SG com/z80asm.b[5269] throws:=TRUE
throws G:385 SG com/z80asm.b[5451] throws:=FALSE
timeoutch M:-2 DEF libhdr.h[248] timeoutch=-2
titlproc G:297 DEF com/z80asm.b[127] titlproc=ug+97
titlproc G:297 LG com/z80asm.b[6927] code.put("TITLE",titlproc,0)
titlproc G:297 RT com/z80asm.b[4918] LET titlproc(lab)BE..
tree.get F:571 FN com/z80asm.b[3053] LET tree.get(tree,name)=..
tree.get F:571 LF com/z80asm.b[3095] tree.get(codes,s)
tree.get F:571 LF com/z80asm.b[3132] tree.get(syms,s)
tree.put F:570 LF com/z80asm.b[3090] tree.put(@codes,name,c)
tree.put F:570 LF com/z80asm.b[3128] tree.put(@syms,reg,val)
tree.put F:570 RT com/z80asm.b[3035] LET tree.put(lvtree,name,item)BE..
trim G:337 DEF com/z80asm.b[170] trim=ug+137
trim G:337 FN com/z80asm.b[2992] LET trim(no,field)=..
try.next.size F:97 LAB com/z80asm.b[911]
    try.next.size:FOR i=2 TO hash.table.size-1 DO..
try.next.size F:97 LF com/z80asm.b[916] GOTO try.next.size
type. M:7 DEF com/z80asm.b[374] type.=type.macro+1
type. M:7 MAN com/z80asm.b[987]
    ansvec!0:=(ans!t.type&type.mask)>=type.->valtype(...&type.mask,ans!t.val),ans!t.val
type.const M:1 DEF com/z80asm.b[368] type.const=1
type.const M:1 MAN com/z80asm.b[1084] CASE type.const:.. 
type.const M:1 MAN com/z80asm.b[1190] CASE type.const:.. 
type.const M:1 MAN com/z80asm.b[1210] CASE type.const:.. 
type.const M:1 MAN com/z80asm.b[387] type.relconst=type.const|flag.rel
type.const M:1 MAN com/z80asm.b[4955]
    putlab(lab,spec!0,dontknow&flag.fwd|(spec!1=0->type.const,type.relconst))
type.def M:1024 DEF com/z80asm.b[383] type.def=type.none|flag.def
type.def M:1024 MAN com/z80asm.b[1059]
    t!t.type:=symty=type.ref->type.def,t!t.type|flag.def
type.def M:1024 MAN com/z80asm.b[4772]
    TEST (ansvec!1&type.mask)=type.def THEN .. ELSE ..
type.def M:1024 MAN com/z80asm.b[5102] putlab(item.info,-1,type.def)
type.lab M:3 DEF com/z80asm.b[370] type.lab=3
type.lab M:3 MAN com/z80asm.b[1085] CASE type.lab:.. 
type.lab M:3 MAN com/z80asm.b[1192] CASE type.lab:.. 
type.lab M:3 MAN com/z80asm.b[1212] CASE type.lab:.. 
type.lab M:3 MAN com/z80asm.b[3541] type.lab
type.lab M:3 MAN com/z80asm.b[385] type.rellab=type.lab|flag.rel
type.lab M:3 MAN com/z80asm.b[4559]
    putlab(lab,pc,(mode=absolute->type.lab,type.rellab)|(def.count>0->flag.def,0))
type.lab M:3 MAN com/z80asm.b[5035] putlab(lab,pc,type.lab)
type.macro M:6 DEF com/z80asm.b[373] type.macro=6
type.macro M:6 MAN com/z80asm.b[1086] CASE type.macro:.. 
type.macro M:6 MAN com/z80asm.b[1195] CASE type.macro:.. 
type.macro M:6 MAN com/z80asm.b[1221] CASE type.macro:.. 
type.macro M:6 MAN com/z80asm.b[3218] putlab(lab,macro,type.macro)
type.macro M:6 MAN com/z80asm.b[374] type.=type.macro+1
type.macro M:6 MAN com/z80asm.b[4530]
    macro:=looktype(type.macro,item.info)
type.mask M:255 DEF com/z80asm.b[375] type.mask=byte1
type.mask M:255 MAN com/z80asm.b[1041] symty:=t!t.type&type.mask
type.mask M:255 MAN com/z80asm.b[1064] symty:=t!t.type&type.mask
type.mask M:255 MAN com/z80asm.b[1073]
    UNLESS (ty&type.mask)=type.none DO ..
type.mask M:255 MAN com/z80asm.b[1074]
    TEST (ty&type.mask)=type.ref&(pass=second|(ty&flag.needs)~=0) THEN .. ELSE ..
type.mask M:255 MAN com/z80asm.b[1087] RESULTIS (ty&type.mask)=symty
type.mask M:255 MAN com/z80asm.b[1116]
    TEST (!entry!t.type&type.mask)=(ty&type.mask) THEN .. ELSE ..
type.mask M:255 MAN com/z80asm.b[1146]
    iden.valid:=t=null|t!t.info>=lineno->FALSE,(t!t.type&type.mask)=ty
type.mask M:255 MAN com/z80asm.b[1160] ans:=(sym!t.type&type.mask)=ty
type.mask M:255 MAN com/z80asm.b[1171]
    IF ans=null&pass=second|ans~=null&(ans!t.type&type.mask)~=ty DO ..
type.mask M:255 MAN com/z80asm.b[1188] SWITCHON ty&type.mask INTO..
type.mask M:255 MAN com/z80asm.b[1297]
    writetype(typecode&type.mask,t.val!list)
type.mask M:255 MAN com/z80asm.b[1328]
    deletetype(t.type!entry&type.mask,t.val!entry)
type.mask M:255 MAN com/z80asm.b[1414]
    TEST (typecode&type.mask)=type.ref THEN .. ELSE ..
type.mask M:255 MAN com/z80asm.b[1420]
    IF (typecode&flag.def)=flag.def&(typecode&type.mask)~=type.none DO ..
type.mask M:255 MAN com/z80asm.b[4772]
    TEST (ansvec!1&type.mask)=type.def THEN .. ELSE ..
type.mask M:255 MAN com/z80asm.b[4786]
    TEST (type.mask&ansvec!1)=type.ref THEN .. ELSE ..
type.mask M:255 MAN com/z80asm.b[965]
    t=null->type.none,t!t.type&type.mask
type.mask M:255 MAN com/z80asm.b[987]
    ansvec!0:=(ans!t.type&type.mask)>=type.->valtype(...&type.mask,ans!t.val),ans!t.val
type.none M:0 DEF com/z80asm.b[367] type.none=0
type.none M:0 MAN com/z80asm.b[1068]
    IF pass=second&symty=type.none DO ..
type.none M:0 MAN com/z80asm.b[1073]
    UNLESS (ty&type.mask)=type.none DO ..
type.none M:0 MAN com/z80asm.b[1083] CASE type.none:.. 
type.none M:0 MAN com/z80asm.b[1189] CASE type.none:.. 
type.none M:0 MAN com/z80asm.b[1209] CASE type.none:.. 
type.none M:0 MAN com/z80asm.b[1420]
    IF (typecode&flag.def)=flag.def&(typecode&type.mask)~=type.none DO ..
type.none M:0 MAN com/z80asm.b[383] type.def=type.none|flag.def
type.none M:0 MAN com/z80asm.b[4770]
    IF pass=second&(ansvec!1=type.none|~iden.valid) DO ..
type.none M:0 MAN com/z80asm.b[965] t=null->type.none,t!t.type&type.mask
type.none M:0 MAN com/z80asm.b[967]
    IF t=null|rel.pos>=0|symty=type.ref|symty=type.none|(t!t.type&flag.fwd)~=0 DO ..
type.ref M:4 DEF com/z80asm.b[371] type.ref=4
type.ref M:4 MAN com/z80asm.b[1043] ans:=rel.posn>=0|symty=type.ref
type.ref M:4 MAN com/z80asm.b[1053]
    TEST symty~=type.ref&rel.posn<0 THEN .. ELSE ..
type.ref M:4 MAN com/z80asm.b[1059]
    t!t.type:=symty=type.ref->type.def,t!t.type|flag.def
type.ref M:4 MAN com/z80asm.b[1060] IF symty=type.ref DO ..
type.ref M:4 MAN com/z80asm.b[1074]
    TEST (ty&type.mask)=type.ref&(pass=second|(ty&flag.needs)~=0) THEN .. ELSE ..
type.ref M:4 MAN com/z80asm.b[1077] IF symty=type.ref DO ..
type.ref M:4 MAN com/z80asm.b[1193] CASE type.ref:.. 
type.ref M:4 MAN com/z80asm.b[1213] CASE type.ref:.. 
type.ref M:4 MAN com/z80asm.b[1414]
    TEST (typecode&type.mask)=type.ref THEN .. ELSE ..
type.ref M:4 MAN com/z80asm.b[384] type.wref=type.ref|flag.weak
type.ref M:4 MAN com/z80asm.b[4786]
    TEST (type.mask&ansvec!1)=type.ref THEN .. ELSE ..
type.ref M:4 MAN com/z80asm.b[5062] declaration.list(lab,65535,type.ref)
type.ref M:4 MAN com/z80asm.b[5081]
    putlab(item.info,65535,type.ref|flag.needs)
type.ref M:4 MAN com/z80asm.b[967]
    IF t=null|rel.pos>=0|symty=type.ref|symty=type.none|(t!t.type&flag.fwd)~=0 DO ..
type.ref M:4 MAN com/z80asm.b[970] IF symty=type.ref&rel.pos>=0 DO ..
type.relconst M:513 DEF com/z80asm.b[387]
    type.relconst=type.const|flag.rel
type.relconst M:513 MAN com/z80asm.b[4955]
    putlab(lab,spec!0,dontknow&flag.fwd|(spec!1=0->type.const,type.relconst))
type.rellab M:515 DEF com/z80asm.b[385] type.rellab=type.lab|flag.rel
type.rellab M:515 MAN com/z80asm.b[4559]
    putlab(lab,pc,(mode=absolute->type.lab,type.rellab)|(def.count>0->flag.def,0))
type.rellab M:515 MAN com/z80asm.b[5045] putlab(lab,pc,type.rellab)
type.relvar M:514 DEF com/z80asm.b[386] type.relvar=type.var|flag.rel
type.relvar M:514 MAN com/z80asm.b[4970]
    putlab(lab,spec!0,spec!1=0->type.var,type.relvar)
type.text M:5 DEF com/z80asm.b[372] type.text=5
type.text M:5 MAN com/z80asm.b[1194] CASE type.text:.. 
type.text M:5 MAN com/z80asm.b[1218] CASE type.text:.. 
type.text M:5 MAN com/z80asm.b[2824] deletelab(text.symbol,type.text)
type.text M:5 MAN com/z80asm.b[2843]
    forward:=putlab(local+1,parm.value,type.text|flag.temp)
type.text M:5 MAN com/z80asm.b[3715] looktype(type.text,item.info)
type.text M:5 MAN com/z80asm.b[4082]
    macro:=looktype(type.text,item.info)
type.text M:5 MAN com/z80asm.b[4982]
    putlab(lab,getstr(str,simplegetvec),type.text)
type.var M:2 DEF com/z80asm.b[369] type.var=2
type.var M:2 MAN com/z80asm.b[1191] CASE type.var:.. 
type.var M:2 MAN com/z80asm.b[1211] CASE type.var:.. 
type.var M:2 MAN com/z80asm.b[386] type.relvar=type.var|flag.rel
type.var M:2 MAN com/z80asm.b[4970]
    putlab(lab,spec!0,spec!1=0->type.var,type.relvar)
type.wref M:8196 DEF com/z80asm.b[384] type.wref=type.ref|flag.weak
type.wref M:8196 MAN com/z80asm.b[5066]
    declaration.list(lab,65535,type.wref)
ug M:200 DEF libhdr.h[238] ug=200
ug M:200 MAN com/z80asm.b[100] fatal=ug+73
ug M:200 MAN com/z80asm.b[101] warning=ug+74
ug M:200 MAN com/z80asm.b[102] warnvec=ug+75
ug M:200 MAN com/z80asm.b[103] errcount=ug+76
ug M:200 MAN com/z80asm.b[105] item.type=ug+77
ug M:200 MAN com/z80asm.b[106] item.info=ug+78
ug M:200 MAN com/z80asm.b[107] item.start=ug+79
ug M:200 MAN com/z80asm.b[108] getitem=ug+80
ug M:200 MAN com/z80asm.b[109] scan=ug+81
ug M:200 MAN com/z80asm.b[110] checkandskip=ug+82
ug M:200 MAN com/z80asm.b[111] bracketed=ug+83
ug M:200 MAN com/z80asm.b[112] dontknow=ug+84
ug M:200 MAN com/z80asm.b[113] expression=ug+85
ug M:200 MAN com/z80asm.b[114] label.expression=ug+86
ug M:200 MAN com/z80asm.b[115] pcrel.expression=ug+87
ug M:200 MAN com/z80asm.b[116] get.and.declare=ug+88
ug M:200 MAN com/z80asm.b[117] is.type=ug+89
ug M:200 MAN com/z80asm.b[118] is.expression=ug+90
ug M:200 MAN com/z80asm.b[119] finishpass=ug+91
ug M:200 MAN com/z80asm.b[120] nextpass=ug+92
ug M:200 MAN com/z80asm.b[121] read.to.mnem=ug+93
ug M:200 MAN com/z80asm.b[122] parseline=ug+94
ug M:200 MAN com/z80asm.b[123] parse=ug+95
ug M:200 MAN com/z80asm.b[126] dataproc=ug+96
ug M:200 MAN com/z80asm.b[127] titlproc=ug+97
ug M:200 MAN com/z80asm.b[128] equproc=ug+98
ug M:200 MAN com/z80asm.b[129] setproc=ug+99
ug M:200 MAN com/z80asm.b[130] defproc=ug+100
ug M:200 MAN com/z80asm.b[131] refproc=ug+101
ug M:200 MAN com/z80asm.b[132] wrefproc=ug+102
ug M:200 MAN com/z80asm.b[133] needsproc=ug+103
ug M:200 MAN com/z80asm.b[134] pragproc=ug+104
ug M:200 MAN com/z80asm.b[135] textproc=ug+105
ug M:200 MAN com/z80asm.b[136] getproc=ug+106
ug M:200 MAN com/z80asm.b[137] endproc=ug+107
ug M:200 MAN com/z80asm.b[138] absproc=ug+108
ug M:200 MAN com/z80asm.b[139] relproc=ug+109
ug M:200 MAN com/z80asm.b[140] orgproc=ug+110
ug M:200 MAN com/z80asm.b[141] storeproc=ug+111
ug M:200 MAN com/z80asm.b[142] spaceproc=ug+112
ug M:200 MAN com/z80asm.b[143] ejectproc=ug+113
ug M:200 MAN com/z80asm.b[144] listproc=ug+114
ug M:200 MAN com/z80asm.b[146] file.id=ug+115
ug M:200 MAN com/z80asm.b[147] max.files=ug+116
ug M:200 MAN com/z80asm.b[148] files=ug+117
ug M:200 MAN com/z80asm.b[149] line.of.file=ug+118
ug M:200 MAN com/z80asm.b[150] newfile=ug+119
ug M:200 MAN com/z80asm.b[151] endfile=ug+120
ug M:200 MAN com/z80asm.b[152] printfiles=ug+121
ug M:200 MAN com/z80asm.b[153] resetfiles=ug+122
ug M:200 MAN com/z80asm.b[154] file.number=ug+123
ug M:200 MAN com/z80asm.b[157] compstring=ug+124
ug M:200 MAN com/z80asm.b[158] getstr=ug+125
ug M:200 MAN com/z80asm.b[159] capitalch=ug+126
ug M:200 MAN com/z80asm.b[160] codes=ug+127
ug M:200 MAN com/z80asm.b[161] code.put=ug+128
ug M:200 MAN com/z80asm.b[162] getcode=ug+129
ug M:200 MAN com/z80asm.b[163] compcode=ug+130
ug M:200 MAN com/z80asm.b[164] reg.put=ug+131
ug M:200 MAN com/z80asm.b[165] getreg=ug+132
ug M:200 MAN com/z80asm.b[166] newf=ug+133
ug M:200 MAN com/z80asm.b[167] getf=ug+134
ug M:200 MAN com/z80asm.b[168] putf=ug+135
ug M:200 MAN com/z80asm.b[169] putwordf=ug+136
ug M:200 MAN com/z80asm.b[16] dicposn=ug+0
ug M:200 MAN com/z80asm.b[170] trim=ug+137
ug M:200 MAN com/z80asm.b[171] fitsmask=ug+138
ug M:200 MAN com/z80asm.b[174] lex.space=ug+139
ug M:200 MAN com/z80asm.b[175] lab.space=ug+140
ug M:200 MAN com/z80asm.b[176] memory=ug+141
ug M:200 MAN com/z80asm.b[177] max.temp.used=ug+142
ug M:200 MAN com/z80asm.b[178] simplegetvec=ug+143
ug M:200 MAN com/z80asm.b[179] tempgetvec=ug+144
ug M:200 MAN com/z80asm.b[17] getlab=ug+1
ug M:200 MAN com/z80asm.b[182] state=ug+145
ug M:200 MAN com/z80asm.b[183] pagetitle=ug+146
ug M:200 MAN com/z80asm.b[184] modulename=ug+147
ug M:200 MAN com/z80asm.b[185] mode=ug+148
ug M:200 MAN com/z80asm.b[186] pass=ug+149
ug M:200 MAN com/z80asm.b[187] sectno=ug+150
ug M:200 MAN com/z80asm.b[188] pc=ug+151
ug M:200 MAN com/z80asm.b[189] startpc=ug+152
ug M:200 MAN com/z80asm.b[18] putlab=ug+2
ug M:200 MAN com/z80asm.b[190] def.count=ug+153
ug M:200 MAN com/z80asm.b[193] initsyms=ug+154
ug M:200 MAN com/z80asm.b[194] initcodes=ug+155
ug M:200 MAN com/z80asm.b[195] startasm=ug+156
ug M:200 MAN com/z80asm.b[196] startparse=ug+157
ug M:200 MAN com/z80asm.b[197] newsection=ug+158
ug M:200 MAN com/z80asm.b[198] endsection=ug+159
ug M:200 MAN com/z80asm.b[199] endparse=ug+160
ug M:200 MAN com/z80asm.b[19] printlabs=ug+3
ug M:200 MAN com/z80asm.b[200] endasm=ug+161
ug M:200 MAN com/z80asm.b[201] useropt=ug+162
ug M:200 MAN com/z80asm.b[204] name=ug+163
ug M:200 MAN com/z80asm.b[205] i.here=ug+164
ug M:200 MAN com/z80asm.b[206] i.elbkt=ug+165
ug M:200 MAN com/z80asm.b[207] i.erbkt=ug+166
ug M:200 MAN com/z80asm.b[208] i.strlbkt=ug+167
ug M:200 MAN com/z80asm.b[209] i.strrbkt=ug+168
ug M:200 MAN com/z80asm.b[20] deletelab=ug+4
ug M:200 MAN com/z80asm.b[210] i.endlab=ug+169
ug M:200 MAN com/z80asm.b[211] comntch=ug+171
ug M:200 MAN com/z80asm.b[212] comntcheck=ug+172
ug M:200 MAN com/z80asm.b[213] sepch=ug+173
ug M:200 MAN com/z80asm.b[214] binbufwidth=ug+174
ug M:200 MAN com/z80asm.b[215] mscharfirst=ug+175
ug M:200 MAN com/z80asm.b[216] msbytefirst=ug+176
ug M:200 MAN com/z80asm.b[217] bytesperasmword=ug+177
ug M:200 MAN com/z80asm.b[218] wordsperaddress=ug+178
ug M:200 MAN com/z80asm.b[219] cvtchar=ug+179
ug M:200 MAN com/z80asm.b[21] deletelabs=ug+5
ug M:200 MAN com/z80asm.b[222] fromfile=ug+180
ug M:200 MAN com/z80asm.b[223] binfile=ug+181
ug M:200 MAN com/z80asm.b[224] out=ug+182
ug M:200 MAN com/z80asm.b[225] memsize=ug+183
ug M:200 MAN com/z80asm.b[226] pw=ug+184
ug M:200 MAN com/z80asm.b[227] throws=ug+185
ug M:200 MAN com/z80asm.b[228] allsyms=ug+186
ug M:200 MAN com/z80asm.b[229] short=ug+187
ug M:200 MAN com/z80asm.b[22] valtype=ug+6
ug M:200 MAN com/z80asm.b[232] get.time=ug+188
ug M:200 MAN com/z80asm.b[233] findasmin=ug+189
ug M:200 MAN com/z80asm.b[234] findgetin=ug+190
ug M:200 MAN com/z80asm.b[23] freetype=ug+7
ug M:200 MAN com/z80asm.b[24] printtype=ug+8
ug M:200 MAN com/z80asm.b[25] checktype=ug+9
ug M:200 MAN com/z80asm.b[26] gettype=ug+10
ug M:200 MAN com/z80asm.b[27] looktype=ug+11
ug M:200 MAN com/z80asm.b[28] iden.valid=ug+12
ug M:200 MAN com/z80asm.b[29] badlabs=ug+13
ug M:200 MAN com/z80asm.b[30] gen.defs=ug+14
ug M:200 MAN com/z80asm.b[33] binbuf=ug+15
ug M:200 MAN com/z80asm.b[34] putword=ug+16
ug M:200 MAN com/z80asm.b[35] putaddress=ug+17
ug M:200 MAN com/z80asm.b[36] putlabelspec=ug+18
ug M:200 MAN com/z80asm.b[37] movebinword=ug+19
ug M:200 MAN com/z80asm.b[38] hexoutwidth=ug+20
ug M:200 MAN com/z80asm.b[39] outhex=ug+21
ug M:200 MAN com/z80asm.b[40] code.gen=ug+22
ug M:200 MAN com/z80asm.b[41] entrypoint=ug+23
ug M:200 MAN com/z80asm.b[44] ch=ug+24
ug M:200 MAN com/z80asm.b[45] linbufsize=ug+25
ug M:200 MAN com/z80asm.b[46] linbuf=ug+26
ug M:200 MAN com/z80asm.b[47] linbuf.out=ug+27
ug M:200 MAN com/z80asm.b[48] linbuf.top=ug+28
ug M:200 MAN com/z80asm.b[49] print.expansions=ug+29
ug M:200 MAN com/z80asm.b[50] rch=ug+30
ug M:200 MAN com/z80asm.b[51] putch=ug+31
ug M:200 MAN com/z80asm.b[52] mywrch=ug+32
ug M:200 MAN com/z80asm.b[53] syswrch=ug+33
ug M:200 MAN com/z80asm.b[54] deleteline=ug+34
ug M:200 MAN com/z80asm.b[55] restartpage=ug+35
ug M:200 MAN com/z80asm.b[56] list=ug+36
ug M:200 MAN com/z80asm.b[57] outline=ug+37
ug M:200 MAN com/z80asm.b[58] newlyne=ug+38
ug M:200 MAN com/z80asm.b[59] position.ch=ug+39
ug M:200 MAN com/z80asm.b[60] outpos=ug+40
ug M:200 MAN com/z80asm.b[61] lineno=ug+41
ug M:200 MAN com/z80asm.b[62] neads=ug+42
ug M:200 MAN com/z80asm.b[65] macro.stack=ug+43
ug M:200 MAN com/z80asm.b[66] filling.macro=ug+44
ug M:200 MAN com/z80asm.b[67] expand.text=ug+45
ug M:200 MAN com/z80asm.b[68] macro.rdch=ug+46
ug M:200 MAN com/z80asm.b[69] macro.var=ug+47
ug M:200 MAN com/z80asm.b[70] call.macro=ug+48
ug M:200 MAN com/z80asm.b[71] end.macro.var=ug+49
ug M:200 MAN com/z80asm.b[72] add.local.text=ug+50
ug M:200 MAN com/z80asm.b[73] stacktext=ug+51
ug M:200 MAN com/z80asm.b[74] endline=ug+52
ug M:200 MAN com/z80asm.b[77] macro.wrch=ug+53
ug M:200 MAN com/z80asm.b[78] strexp=ug+54
ug M:200 MAN com/z80asm.b[79] is.strexp=ug+55
ug M:200 MAN com/z80asm.b[80] find.mnem=ug+170
ug M:200 MAN com/z80asm.b[81] callmacroproc=ug+56
ug M:200 MAN com/z80asm.b[82] macroproc=ug+57
ug M:200 MAN com/z80asm.b[83] endmacroproc=ug+58
ug M:200 MAN com/z80asm.b[84] rptmacroproc=ug+59
ug M:200 MAN com/z80asm.b[85] breakmacroproc=ug+60
ug M:200 MAN com/z80asm.b[86] ifproc=ug+61
ug M:200 MAN com/z80asm.b[87] elseproc=ug+62
ug M:200 MAN com/z80asm.b[88] fiproc=ug+63
ug M:200 MAN com/z80asm.b[89] optproc=ug+64
ug M:200 MAN com/z80asm.b[90] localproc=ug+65
ug M:200 MAN com/z80asm.b[91] printproc=ug+66
ug M:200 MAN com/z80asm.b[94] errormess=ug+67
ug M:200 MAN com/z80asm.b[95] geterror=ug+68
ug M:200 MAN com/z80asm.b[96] error=ug+69
ug M:200 MAN com/z80asm.b[97] warn=ug+70
ug M:200 MAN com/z80asm.b[98] errorlabel=ug+71
ug M:200 MAN com/z80asm.b[99] errorlevel=ug+72
uletter M:-55 DEF com/z80asm.b[4030] uletter=10-65
uletter M:-55 MAN com/z80asm.b[4203]
    48<=ch&ch<=57->ch-48,65<=ch&ch<=70->ch+uletter,97<=ch&ch<=102->ch+lletter,999
unhold G:159 DEF libhdr.h[210] unhold=159
unloadseg G:106 DEF libhdr.h[143] unloadseg=106
unpackstring G:31 DEF libhdr.h[67] unpackstring=31
unrdch G:40 DEF libhdr.h[76] unrdch=40
unstacktext F:492 LF com/z80asm.b[2788] unstacktext(parms+1)
unstacktext F:492 RT com/z80asm.b[2824] LET unstacktext(text.symbol)BE..
useropt G:362 DEF com/z80asm.b[201] useropt=ug+162
useropt G:362 FN com/z80asm.b[5257] LET useropt(ch)=..
useropt G:362 LG com/z80asm.b[5265] TEST useropt(s%p) THEN .. ELSE ..
valtype G:206 DEF com/z80asm.b[22] valtype=ug+6
valtype G:206 FN com/z80asm.b[1180] LET valtype(ty,v)=..
valtype G:206 LG com/z80asm.b[987]
    ansvec!0:=(ans!t.type&type.mask)>=type.->valtype(...&type.mask,ans!t.val),ans!t.val
warn G:270 DEF com/z80asm.b[97] warn=ug+70
warn G:270 LG com/z80asm.b[1057] warn(e.doublelab,t+t.str)
warn G:270 LG com/z80asm.b[1100] warn(e.doublelab,string)
warn G:270 LG com/z80asm.b[1173] warn(e.badtype)
warn G:270 LG com/z80asm.b[1181] warn(e.notlab)
warn G:270 LG com/z80asm.b[1631] warn(e.badbyte)
warn G:270 LG com/z80asm.b[2987] warn(e.ftoosmall,no)
warn G:270 LG com/z80asm.b[3228] warn(e.nolab)
warn G:270 LG com/z80asm.b[3234] warn(e.nocomnt,comntch)
warn G:270 LG com/z80asm.b[3667] warn(e.nostr)
warn G:270 LG com/z80asm.b[3683] warn(e.forward)
warn G:270 LG com/z80asm.b[3684] warn(e.posnum)
warn G:270 LG com/z80asm.b[3687] warn(e.forward)
warn G:270 LG com/z80asm.b[3688] warn(e.posnum)
warn G:270 LG com/z80asm.b[3719] warn(e.badtype)
warn G:270 LG com/z80asm.b[3720] warn(e.badlab)
warn G:270 LG com/z80asm.b[3727] warn(e.fullstring)
warn G:270 LG com/z80asm.b[3737] warn(e.expected,44)
warn G:270 LG com/z80asm.b[3744] warn(e.forward)
warn G:270 LG com/z80asm.b[3748] warn(e.badbase,58)
warn G:270 LG com/z80asm.b[3750] warn(e.badbase,item.info%3)
warn G:270 LG com/z80asm.b[3755] warn(e.badbase,widthch)
warn G:270 LG com/z80asm.b[3774] warn(e.fullstring)
warn G:270 LG com/z80asm.b[4603] warn(e.badrel)
warn G:270 LG com/z80asm.b[4614] warn(e.badrel)
warn G:270 LG com/z80asm.b[4653] warn(e.badrel)
warn G:270 LG com/z80asm.b[4665] warn(e.badrel)
warn G:270 LG com/z80asm.b[4682] warn(e.badrel)
warn G:270 LG com/z80asm.b[4703] warn(e.badext)
warn G:270 LG com/z80asm.b[4720] warn(e.divzero)
warn G:270 LG com/z80asm.b[4723] warn(e.badrel)
warn G:270 LG com/z80asm.b[4771] warn(e.badlab)
warn G:270 LG com/z80asm.b[4794] warn(e.badlab)
warn G:270 LG com/z80asm.b[4951] warn(e.badnum)
warn G:270 LG com/z80asm.b[6431] warn(e.range)
warn G:270 LG com/z80asm.b[970] warn(e.forward)
warn G:270 RT com/z80asm.b[2441] LET warn(arg1,arg2,arg3,arg4)BE..
warning G:274 DEF com/z80asm.b[101] warning=ug+74
warning G:274 LG com/z80asm.b[2387] IF warning DO ..
warning G:274 LG com/z80asm.b[2441] UNLESS warning DO ..
warning G:274 LG com/z80asm.b[3236] TEST warning THEN .. ELSE ..
warning G:274 LG com/z80asm.b[4471] IF warning DO ..
warning G:274 SG com/z80asm.b[2392] warning:=FALSE
warning G:274 SG com/z80asm.b[2442] warning:=TRUE
warning G:274 SG com/z80asm.b[4497] warning:=FALSE
warnvec G:275 DEF com/z80asm.b[102] warnvec=ug+75
warnvec G:275 LG com/z80asm.b[2388] arg1:=warnvec!1
warnvec G:275 LG com/z80asm.b[2389] arg2:=warnvec!2
warnvec G:275 LG com/z80asm.b[2390] arg3:=warnvec!3
warnvec G:275 LG com/z80asm.b[2391] arg4:=warnvec!4
warnvec G:275 LG com/z80asm.b[2393] pos:=warnvec!0
warnvec G:275 LG com/z80asm.b[2443] warnvec!1:=arg1
warnvec G:275 LG com/z80asm.b[2444] warnvec!2:=arg2
warnvec G:275 LG com/z80asm.b[2445] warnvec!3:=arg3
warnvec G:275 LG com/z80asm.b[2446] warnvec!4:=arg4
warnvec G:275 LG com/z80asm.b[2447] warnvec!0:=item.start
warnvec G:275 SG com/z80asm.b[4282] warnvec:=TABLE 0,0,0,...
wordsperaddress G:378 DEF com/z80asm.b[218] wordsperaddress=ug+178
wordsperaddress G:378 LG com/z80asm.b[1638]
    n&~(1<<8*wordsperaddress*bytesperasmword)-1
wordsperaddress G:378 LG com/z80asm.b[1639]
    FOR i=1 TO wordsperaddress DO..
wordsperaddress G:378 LG com/z80asm.b[1642] m:=m<<8*wordsperaddress
wordsperaddress G:378 LG com/z80asm.b[1644]
    putword(n>>8*bytesperasmword*(wordsperaddress-i)&m)
wordsperaddress G:378 LG com/z80asm.b[1645]
    UNLESS sign=0|sign=(-1&(1<<...*bytesperasmword)-1) DO ..
wordsperaddress G:378 LG com/z80asm.b[1745]
    FOR i=wordsperaddress-1 TO 0 BY -1 DO..
wordsperaddress G:378 LG com/z80asm.b[4380]
    code.gen(cd.code,name,(bytesperasmword&15)<<12|(...&15)<<8|(msbytefirst->1,0))
wordsperaddress G:378 SG com/z80asm.b[5440] wordsperaddress:=2
wrbin F:747 FN com/z80asm.b[3819]
    LET wrbin(n,width,buffer,maxpos,power)=..
wrbin F:747 LF com/z80asm.b[3764] RESULTIS wrbin
wrbin F:747 LF com/z80asm.b[3766] RESULTIS wrbin
wrbin F:747 LF com/z80asm.b[3768] RESULTIS wrbin
wrbin F:747 LF com/z80asm.b[3822]
    wrbin(n>>power,width-1,buffer,maxpos,power)
wrch G:41 DEF libhdr.h[77] wrch=41
wrch G:41 LG com/z80asm.b[1276] wrch(12)
wrch G:41 LG com/z80asm.b[1285] wrch(10)
wrch G:41 LG com/z80asm.b[1286] wrch(12)
wrch G:41 LG com/z80asm.b[1295] wrch(string%0>=i->string%i,32)
wrch G:41 LG com/z80asm.b[1296] wrch(32)
wrch G:41 LG com/z80asm.b[1298] wrch((typecode&flag.double)=0->32,42)
wrch G:41 LG com/z80asm.b[1299] wrch((typecode&flag.rel)=0->32,82)
wrch G:41 LG com/z80asm.b[1300]
    wrch((typecode&flag.def)~=0->68,(typecode&flag.weak)~=0->87,32)
wrch G:41 LG com/z80asm.b[1319] wrch(10)
wrch G:41 LG com/z80asm.b[1734] wrch(36)
wrch G:41 LG com/z80asm.b[1737] wrch(ch)
wrch G:41 LG com/z80asm.b[1749] wrch(10)
wrch G:41 LG com/z80asm.b[1762] wrch(type=cd.data->58,36)
wrch G:41 LG com/z80asm.b[1771] wrch(10)
wrch G:41 LG com/z80asm.b[1777] wrch
wrch G:41 LG com/z80asm.b[1832] wrch(10)
wrch G:41 LG com/z80asm.b[1891] wrch(36)
wrch G:41 LG com/z80asm.b[1895] wrch(ch)
wrch G:41 LG com/z80asm.b[2402] wrch(12)
wrch G:41 LG com/z80asm.b[2413] wrch(32)
wrch G:41 LG com/z80asm.b[2417] wrch(32)
wrch G:41 LG com/z80asm.b[2422] wrch(10)
wrch G:41 LG com/z80asm.b[2431] wrch(10)
wrch G:41 LG com/z80asm.b[2505] wrch(12)
wrch G:41 LG com/z80asm.b[2509] wrch(firstchar)
wrch G:41 LG com/z80asm.b[2515] wrch(file.id=0->32,43)
wrch G:41 LG com/z80asm.b[2538] wrch(32)
wrch G:41 LG com/z80asm.b[2541] wrch(32)
wrch G:41 LG com/z80asm.b[2550] wrch(linbuf%i)
wrch G:41 LG com/z80asm.b[2558] wrch(10)
wrch G:41 LG com/z80asm.b[2559] wrch(10)
wrch G:41 LG com/z80asm.b[2615] wrch
wrch G:41 LG com/z80asm.b[2618] wrch(c)
wrch G:41 LG com/z80asm.b[2622] wrch(c)
wrch G:41 LG com/z80asm.b[2631] wrch(12)
wrch G:41 LG com/z80asm.b[2636] wrch(32)
wrch G:41 LG com/z80asm.b[2641] wrch(32)
wrch G:41 LG com/z80asm.b[2921] wrch(12)
wrch G:41 LG com/z80asm.b[4275] wrch
wrch G:41 LG com/z80asm.b[4281] syswrch:=wrch
wrch G:41 LG com/z80asm.b[4388] wrch(10)
wrch G:41 SG com/z80asm.b[1778] wrch:=syswrch
wrch G:41 SG com/z80asm.b[1904] wrch:=savewrch
wrch G:41 SG com/z80asm.b[2616] wrch:=syswrch
wrch G:41 SG com/z80asm.b[2646] wrch:=savewrch
wrch G:41 SG com/z80asm.b[4310] wrch:=mywrch
wrch G:41 SG com/z80asm.b[4347] wrch:=savewrch
wrchr F:748 FN com/z80asm.b[3836]
    LET wrchr(n,width,buffer,maxpos,dummy)=..
wrchr F:748 LF com/z80asm.b[3769] RESULTIS wrchr
wrchr F:748 LF com/z80asm.b[3840] wrchr(n>>8,width-1,buffer,maxpos)
wrefproc G:302 DEF com/z80asm.b[132] wrefproc=ug+102
wrefproc G:302 LG com/z80asm.b[6922] code.put("WREF",wrefproc,0)
wrefproc G:302 RT com/z80asm.b[5066] LET wrefproc(lab)BE..
wrint F:746 FN com/z80asm.b[3784]
    LET wrint(n,width,buffer,maxpos,dummy)=..
wrint F:746 LF com/z80asm.b[3762] RESULTIS wrint
writed G:85 DEF libhdr.h[121] writed=85
writee G:180 DEF libhdr.h[227] writee=180
writef G:94 DEF libhdr.h[131] writef=94
writef G:94 LG com/z80asm.b[1228] writef(string,val)
writef G:94 LG com/z80asm.b[1233] writef("%I5 %I5",ty,val)
writef G:94 LG com/z80asm.b[1277] writef("*n*nNam'on %N:*n*n",sectno)
writef G:94 LG com/z80asm.b[1291]
    writef(file.no=0->"   ",file.no<10->"+%I1 ","+%I2",file.no)
writef G:94 LG com/z80asm.b[1294] writef("%I4 ",line)
writef G:94 LG com/z80asm.b[1740] writef("%X2%X4",type,info)
writef G:94 LG com/z80asm.b[1741] writef("%X2%X2",type,info)
writef G:94 LG com/z80asm.b[1830] writef(":00%X401",arg)
writef G:94 LG com/z80asm.b[1881]
    writef("$%X2%'11%S%X2*n",arg%0,arg1,arg,sum)
writef G:94 LG com/z80asm.b[1897]
    writef("%X2%X2%S%X2*n",type,arg%0,arg,sum)
writef G:94 LG com/z80asm.b[2418] writef("%C Error: ",comntch)
writef G:94 LG com/z80asm.b[2420] writef("number %N")
writef G:94 LG com/z80asm.b[2421] writef(error.message,arg2,arg3,arg4)
writef G:94 LG com/z80asm.b[2426]
    writef("*n*nFat'ne %N): ",file.id,line.of.file)
writef G:94 LG com/z80asm.b[2429] writef("number %N",-arg1)
writef G:94 LG com/z80asm.b[2430] writef(error.message,arg2,arg3,arg4)
writef G:94 LG com/z80asm.b[2523] writef("  %I5 ",line.of.file)
writef G:94 LG com/z80asm.b[2526]
    writef("%I1  %I4 ",file.id,line.of.file)
writef G:94 LG com/z80asm.b[2527]
    writef("%I2 %I4 ",file.id,line.of.file)
writef G:94 LG com/z80asm.b[2532] writef("%X4  ",startpc)
writef G:94 LG com/z80asm.b[2632] writef("%S as'mbler %S",name,dat)
writef G:94 LG com/z80asm.b[2642]
    writef("Page %I3*n*n*n",(outpos&byte2)>>8)
writef G:94 LG com/z80asm.b[2922]
    writef("file ' lines)*n",i-first.file+1,files!i+2,files!i!1-files!i!0)
writef G:94 LG com/z80asm.b[3367] writef("%S: %S*n",name,str)
writef G:94 LG com/z80asm.b[4357] writef("Maxim'N words*n",max.mem)
writef G:94 LG com/z80asm.b[4476]
    writef("****** B'tion %N*n",name,pass=first->"first","second",sectno)
writef G:94 LG com/z80asm.b[4929] writef("Assem'ng *"%S*" ",pagetitle)
writef G:94 LG com/z80asm.b[5301] writef("Unkno' - '%C'*n",s%p)
writef G:94 LG com/z80asm.b[5358] writef("Can't'n '%S': ",file.name)
writef G:94 LG com/z80asm.b[5415] writef("*nz80a'written*n")
writef G:94 LG com/z80asm.b[5416] writef("for t'Girling*n")
writef G:94 LG com/z80asm.b[5417] writef("betwe'mily of*n")
writef G:94 LG com/z80asm.b[5418] writef("assem'he 8080*n")
writef G:94 LG com/z80asm.b[5419] writef("This 'intcode*n")
writef G:94 LG com/z80asm.b[5420] writef("syste'guage.*n*n")
writef G:94 LG com/z80asm.b[5421] writef("This 'lopment*n")
writef G:94 LG com/z80asm.b[5422] writef("and d'ot work*n")
writef G:94 LG com/z80asm.b[5444]
    writef("Incom' id: %S*n",versionid,asmver)
writef G:94 LG com/z80asm.b[5462] writef("Bad a'sembler*n",name)
writef G:94 LG com/z80asm.b[5464] writef("Bad O'sembler*n",name)
writef G:94 LG com/z80asm.b[5467]
    writef("%S as'er.  %S*n",name,versionid)
writef G:94 LG com/z80asm.b[5475]
    writef("Can't' output*n",outfile=0->"OUTPUT stream",outfile)
writef G:94 LG com/z80asm.b[5489] writef("calli'itcodes*n")
writef G:94 LG com/z80asm.b[5492] writef("calling parse*n")
writef G:94 LG com/z80asm.b[5502]
    writef("%N error%S ",errcount,errcount=1->"","s")
writef G:94 LG com/z80asm.b[5505]
    writef("%N ba'label%S ",badlabs,badlabs=1->"","s")
writeflt G:73 DEF libhdr.h[109] writeflt=73
writehex G:87 DEF libhdr.h[123] writehex=87
writehex G:87 LG com/z80asm.b[1663] writehex(n>>i*8&byte1,2)
writehex G:87 LG com/z80asm.b[1744] writehex(type,2)
writehex G:87 LG com/z80asm.b[1763] writehex(blocklen,2)
writehex G:87 LG com/z80asm.b[1764] writehex(blockaddr,4)
writehex G:87 LG com/z80asm.b[1765] writehex(type,2)
writen G:86 DEF libhdr.h[122] writen=86
writeoct G:88 DEF libhdr.h[124] writeoct=88
writes G:89 DEF libhdr.h[125] writes=89
writes G:89 LG com/z80asm.b[1307] writes("  ")
writes G:89 LG com/z80asm.b[1313] writes("*n*n*n")
writes G:89 LG com/z80asm.b[1315] writes("** - m'd label*n")
writes G:89 LG com/z80asm.b[1316] writes("R - r'e value*n")
writes G:89 LG com/z80asm.b[1317] writes("D - i'd value*n")
writes G:89 LG com/z80asm.b[1318] writes("W - w'ference*n")
writes G:89 LG com/z80asm.b[2409] writes("*n*n*n")
writes G:89 LG com/z80asm.b[2411] writes(crosses)
writes G:89 LG com/z80asm.b[2414] writes("|*n")
writes G:89 LG com/z80asm.b[2416] writes(crosses)
writes G:89 LG com/z80asm.b[2531] writes("      ")
writes G:89 LG com/z80asm.b[2547] writes("  ")
writes G:89 LG com/z80asm.b[2638] writes(pagetitle)
writes G:89 LG com/z80asm.b[4354] writes("END d'missing*n")
writes G:89 LG com/z80asm.b[5473] writes("Insuf'ecution*n")
writes G:89 LG com/z80asm.b[5498] writes("No errors ")
writes G:89 LG com/z80asm.b[5503] writes("and ")
writes G:89 LG com/z80asm.b[5507] writes("in th'ssembly*n")
writet G:90 DEF libhdr.h[126] writet=90
writetype F:89 LF com/z80asm.b[1297]
    writetype(typecode&type.mask,t.val!list)
writetype F:89 RT com/z80asm.b[1206] LET writetype(ty,val)BE..
writeu G:91 DEF libhdr.h[127] writeu=91
writewords G:45 DEF libhdr.h[81] writewords=45
writez G:92 DEF libhdr.h[128] writez=92
xit F:992 LAB com/z80asm.b[4473] xit:IF testflags(1) DO ..
xit F:992 LF com/z80asm.b[4451] errorlabel:=xit
