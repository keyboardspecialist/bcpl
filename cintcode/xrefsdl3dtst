Ass_dev M:4 DEF libhdr.h[713] Ass_dev=4
Ass_dir M:2 DEF libhdr.h[711] Ass_dir=2
Ass_link M:0 DEF libhdr.h[709] Ass_link=0
Ass_name M:5 DEF libhdr.h[714] Ass_name=5
Ass_task M:1 DEF libhdr.h[710] Ass_task=1
Ass_type M:3 DEF libhdr.h[712] Ass_type=3
B2Wsh M:2 DEF libhdr.h[26] B2Wsh=1+32/32
B2Wsh M:2 MAN libhdr.h[240] bytesperword=1<<B2Wsh
CloseObj M:1 DEF libhdr.h[289] CloseObj=1
Dcb_arg M:4 DEF libhdr.h[653] Dcb_arg=4
Dcb_cvp M:16 DEF libhdr.h[667] Dcb_cvp=16
Dcb_devid M:1 DEF libhdr.h[650] Dcb_devid=1
Dcb_flag M:7 DEF libhdr.h[656] Dcb_flag=7
Dcb_intson M:6 DEF libhdr.h[655] Dcb_intson=6
Dcb_irq M:5 DEF libhdr.h[654] Dcb_irq=5
Dcb_op M:3 DEF libhdr.h[652] Dcb_op=3
Dcb_threadp M:14 DEF libhdr.h[666] Dcb_threadp=14
Dcb_type M:0 DEF libhdr.h[649] Dcb_type=0
Dcb_upb M:17 DEF libhdr.h[671] Dcb_upb=17
Dcb_var0 M:8 DEF libhdr.h[660] Dcb_var0=8
Dcb_var1 M:9 DEF libhdr.h[661] Dcb_var1=9
Dcb_var2 M:10 DEF libhdr.h[662] Dcb_var2=10
Dcb_var3 M:11 DEF libhdr.h[663] Dcb_var3=11
Dcb_var4 M:12 DEF libhdr.h[664] Dcb_var4=12
Dcb_wkq M:2 DEF libhdr.h[651] Dcb_wkq=2
Devc_create M:1 DEF libhdr.h[681] Devc_create=1
Devc_destroy M:2 DEF libhdr.h[682] Devc_destroy=2
Devc_setintson M:5 DEF libhdr.h[685] Devc_setintson=5
Devc_start M:3 DEF libhdr.h[683] Devc_start=3
Devc_stop M:4 DEF libhdr.h[684] Devc_stop=4
Devt_clk M:1 DEF libhdr.h[674] Devt_clk=1
Devt_fileop M:4 DEF libhdr.h[677] Devt_fileop=4
Devt_tcpdev M:5 DEF libhdr.h[678] Devt_tcpdev=5
Devt_ttyin M:2 DEF libhdr.h[675] Devt_ttyin=2
Devt_ttyout M:3 DEF libhdr.h[676] Devt_ttyout=3
GB2312 M:-2 DEF libhdr.h[582] GB2312=-2
InitObj M:0 DEF libhdr.h[288] InitObj=0
ON64 M:0 DEF libhdr.h[28] ON64=32=64
State_dead M:12 DEF libhdr.h[700] State_dead=12
State_hold M:2 DEF libhdr.h[697] State_hold=2
State_int M:8 DEF libhdr.h[699] State_int=8
State_pkt M:1 DEF libhdr.h[696] State_pkt=1
State_wait M:4 DEF libhdr.h[698] State_wait=4
Sys_buttons M:56 DEF libhdr.h[460] Sys_buttons=56
Sys_callc M:59 DEF libhdr.h[463] Sys_callc=59
Sys_callnative M:53 DEF libhdr.h[457] Sys_callnative=53
Sys_close M:16 DEF libhdr.h[423] Sys_close=16
Sys_cputime M:30 DEF libhdr.h[436] Sys_cputime=30
Sys_datstamp M:44 DEF libhdr.h[448] Sys_datstamp=44
Sys_delay M:57 DEF libhdr.h[461] Sys_delay=57
Sys_deletefile M:17 DEF libhdr.h[424] Sys_deletefile=17
Sys_devcom M:43 DEF libhdr.h[447] Sys_devcom=43
Sys_dumpmem M:52 DEF libhdr.h[456] Sys_dumpmem=52
Sys_ext M:68 DEF libhdr.h[474] Sys_ext=68
Sys_filemodtime M:31 DEF libhdr.h[437] Sys_filemodtime=31
Sys_filesize M:46 DEF libhdr.h[450] Sys_filesize=46
Sys_flt M:63 DEF libhdr.h[468] Sys_flt=63
Sys_freevec M:22 DEF libhdr.h[429] Sys_freevec=22
Sys_getpid M:51 DEF libhdr.h[455] Sys_getpid=51
Sys_getprefix M:33 DEF libhdr.h[439] Sys_getprefix=33
Sys_getsysval M:48 DEF libhdr.h[452] Sys_getsysval=48
Sys_gettrval M:62 DEF libhdr.h[467] Sys_gettrval=62
Sys_getvec M:21 DEF libhdr.h[428] Sys_getvec=21
Sys_gl M:67 DEF libhdr.h[473] Sys_gl=67
Sys_globin M:24 DEF libhdr.h[431] Sys_globin=24
Sys_graphics M:34 DEF libhdr.h[440] Sys_graphics=34
Sys_inc M:55 DEF libhdr.h[459] Sys_inc=55
Sys_incdcount M:65 DEF libhdr.h[470] Sys_incdcount=65
Sys_interpret M:7 DEF libhdr.h[415] Sys_interpret=7
Sys_intflag M:28 DEF libhdr.h[434] Sys_intflag=28
Sys_joy M:69 DEF libhdr.h[475] Sys_joy=69
Sys_loadseg M:23 DEF libhdr.h[430] Sys_loadseg=23
Sys_lockirq M:41 DEF libhdr.h[445] Sys_lockirq=41
Sys_muldiv M:26 DEF libhdr.h[433] Sys_muldiv=26
Sys_openappend M:19 DEF libhdr.h[426] Sys_openappend=19
Sys_openread M:14 DEF libhdr.h[421] Sys_openread=14
Sys_openreadwrite M:47 DEF libhdr.h[451] Sys_openreadwrite=47
Sys_openwrite M:15 DEF libhdr.h[422] Sys_openwrite=15
Sys_platform M:54 DEF libhdr.h[458] Sys_platform=54
Sys_pollsardch M:64 DEF libhdr.h[469] Sys_pollsardch=64
Sys_putsysval M:49 DEF libhdr.h[453] Sys_putsysval=49
Sys_quit M:0 DEF libhdr.h[408] Sys_quit=0
Sys_read M:12 DEF libhdr.h[419] Sys_read=12
Sys_renamefile M:18 DEF libhdr.h[425] Sys_renamefile=18
Sys_rti M:1 DEF libhdr.h[409] Sys_rti=1
Sys_sardch M:10 DEF libhdr.h[417] Sys_sardch=10
Sys_saveregs M:2 DEF libhdr.h[410] Sys_saveregs=2
Sys_sawrch M:11 DEF libhdr.h[418] Sys_sawrch=11
Sys_sdl M:66 DEF libhdr.h[472] Sys_sdl=66
Sys_sdl M:66 MAN com/sdl3dtst.b[60] sys(Sys_sdl,sdl_quit)
Sys_sdl M:66 MAN sdl.b[115]
    sys(Sys_sdl,sdl_getsurfaceinfo,@screen,@flags)
Sys_sdl M:66 MAN sdl.b[126] sys(Sys_sdl,sdl_maprgb,@format,r,g,b)
Sys_sdl M:66 MAN sdl.b[128] sys(Sys_sdl,sdl_wm_setcaption,title,0)
Sys_sdl M:66 MAN sdl.b[136] sys(Sys_sdl,sdl_quit)
Sys_sdl M:66 MAN sdl.b[144] sys(Sys_sdl,sdl_setcolourkey,surfptr,col)
Sys_sdl M:66 MAN sdl.b[148]
    sys(Sys_sdl,sdl_mksurface,@format,w,h,surfptr)
Sys_sdl M:66 MAN sdl.b[152] sys(Sys_sdl,sdl_freesurface,surfptr)
Sys_sdl M:66 MAN sdl.b[363]
    sys(Sys_sdl,sdl_fillrect,@currsurf,x,currysize-y,1,...)
Sys_sdl M:66 MAN sdl.b[378]
    sys(Sys_sdl,sdl_fillrect,@currsurf,x,currysize-y,1,...)
Sys_sdl M:66 MAN sdl.b[385]
    RESULTIS sys(Sys_sdl,sdl_pollevent,@eventtype)
Sys_sdl M:66 MAN sdl.b[389] sys(Sys_sdl,sdl_delay,msecs)
Sys_sdl M:66 MAN sdl.b[392] sys(Sys_sdl,sdl_getticks)
Sys_sdl M:66 MAN sdl.b[396] sys(Sys_sdl,sdl_hidecursor)
Sys_sdl M:66 MAN sdl.b[398] sys(Sys_sdl,sdl_showcursor)
Sys_sdl M:66 MAN sdl.b[401] sys(Sys_sdl,sdl_flip,@screen)
Sys_sdl M:66 MAN sdl.b[411]
    sys(Sys_sdl,sdl_blitsurface,srcptr,0,dstptr,@dx)
Sys_sdl M:66 MAN sdl.b[420]
    sys(Sys_sdl,sdl_blitsurface,srcptr,0,dstptr,@dx)
Sys_sdl M:66 MAN sdl.b[424] sys(Sys_sdl,sdl_fillsurf,@currsurf,col)
Sys_sdl M:66 MAN sdl.b[45]
    IF sys(Sys_sdl,sdl_init,sdl_init_everything) DO ..
Sys_sdl M:66 MAN sdl.b[46] sys(Sys_sdl,sdl_geterror,mes)
Sys_sdl M:66 MAN sdl.b[760]
    sys(Sys_sdl,sdl_fillrect,@currsurf,xmin,currysize-ymax,...,...)
Sys_sdl M:66 MAN sdl.b[86]
    ok:=sys(Sys_sdl,sdl_setvideomode,screenxsize,...)
Sys_sdl M:66 MAN sdl.b[938]
    sys(Sys_sdl,sdl_drawfillcircle,@currsurf,x,currysize-y,radius,currcolour)
Sys_sdl M:66 MAN sdl.b[97] sys(Sys_sdl,sdl_geterror,mes)
Sys_seek M:38 DEF libhdr.h[442] Sys_seek=38
Sys_setcount M:-1 DEF libhdr.h[407] Sys_setcount=-1
Sys_setprefix M:32 DEF libhdr.h[438] Sys_setprefix=32
Sys_setraster M:29 DEF libhdr.h[435] Sys_setraster=29
Sys_setst M:3 DEF libhdr.h[411] Sys_setst=3
Sys_settracing M:70 DEF libhdr.h[476] Sys_settracing=70
Sys_settrcount M:61 DEF libhdr.h[466] Sys_settrcount=61
Sys_shellcom M:50 DEF libhdr.h[454] Sys_shellcom=50
Sys_sound M:58 DEF libhdr.h[462] Sys_sound=58
Sys_tally M:6 DEF libhdr.h[414] Sys_tally=6
Sys_tell M:39 DEF libhdr.h[443] Sys_tell=39
Sys_tracing M:4 DEF libhdr.h[412] Sys_tracing=4
Sys_trpush M:60 DEF libhdr.h[465] Sys_trpush=60
Sys_unloadseg M:25 DEF libhdr.h[432] Sys_unloadseg=25
Sys_unlockirq M:42 DEF libhdr.h[446] Sys_unlockirq=42
Sys_waitirq M:40 DEF libhdr.h[444] Sys_waitirq=40
Sys_watch M:5 DEF libhdr.h[413] Sys_watch=5
Sys_write M:13 DEF libhdr.h[420] Sys_write=13
Task_cli M:1 DEF libhdr.h[688] Task_cli=1
Task_consolehandler M:3 DEF libhdr.h[690] Task_consolehandler=3
Task_debug M:2 DEF libhdr.h[689] Task_debug=2
Task_filehandler M:4 DEF libhdr.h[691] Task_filehandler=4
Task_mbxhandler M:5 DEF libhdr.h[692] Task_mbxhandler=5
Task_tcphandler M:6 DEF libhdr.h[693] Task_tcphandler=6
UTF8 M:-1 DEF libhdr.h[581] UTF8=-1
abort G:28 DEF libhdr.h[64] abort=28
abort G:28 LG com/sdl3dtst.b[55] abort(5557)
abort G:28 LG sdl.b[547] abort(999)
abort G:28 LG sdl.b[649] abort(5556)
abort G:28 LG sdl.b[654] abort(4227)
abort G:28 LG sdl.b[994] abort(999)
alloc2dvecs F:38 LF sdl.b[559] alloc2dvecs()
alloc2dvecs F:38 RT sdl.b[539] LET alloc2dvecs()BE..
alloc3dvecs F:42 LF sdl.b[697] alloc3dvecs()
alloc3dvecs F:42 RT sdl.b[665] LET alloc3dvecs()BE..
appendstream G:66 DEF libhdr.h[102] appendstream=66
binrdch G:39 DEF libhdr.h[75] binrdch=39
binwrch G:42 DEF libhdr.h[78] binwrch=42
bitsperbyte M:8 DEF libhdr.h[241] bitsperbyte=8
bitsperbyte M:8 MAN libhdr.h[242] bitsperword=bitsperbyte*bytesperword
bitsperword M:32 DEF libhdr.h[242] bitsperword=bitsperbyte*bytesperword
bitsperword M:32 MAN libhdr.h[244] minint=1<<bitsperword-1
blitsurf G:508 DEF sdl.h[162] blitsurf=
blitsurf G:508 RT sdl.b[403] LET blitsurf(srcptr,dstptr,x,y)BE..
blitsurfrect G:509 DEF sdl.h[163] blitsurfrect=
blitsurfrect G:509 RT sdl.b[415]
    LET blitsurfrect(srcptr,srcrect,dstptr,x,y)BE..
bootregs M:11 DEF libhdr.h[479] bootregs=11
bytesperword M:4 DEF libhdr.h[240] bytesperword=1<<B2Wsh
bytesperword M:4 MAN com/sdl3dtst.b[21] LET mes=VEC 256/bytesperword
bytesperword M:4 MAN libhdr.h[242] bitsperword=bitsperbyte*bytesperword
bytesperword M:4 MAN libhdr.h[243] mcaddrinc=bytesperword
bytesperword M:4 MAN libhdr.h[531]
    scb_nameeend=scb_name+scb_maxnamelen/bytesperword
bytesperword M:4 MAN libhdr.h[646]
    tcb_upb=tcb_namebase+15/bytesperword+1
bytesperword M:4 MAN sdl.b[438] LET s=VEC 256/bytesperword
bytesperword M:4 MAN sdl.b[43] LET mes=VEC 256/bytesperword
bytesperword M:4 MAN sdl.b[78] LET mes=VEC 256/bytesperword
callco G:19 DEF libhdr.h[55] callco=19
callseg G:107 DEF libhdr.h[144] callseg=107
capitalch G:96 DEF libhdr.h[133] capitalch=96
changeco G:6 DEF libhdr.h[41] changeco=6
changepri G:155 DEF libhdr.h[206] changepri=155
cis G:12 DEF libhdr.h[48] cis=12
clear_words G:115 DEF libhdr.h[152] clear_words=115
cli_commanddir G:136 DEF libhdr.h[176] cli_commanddir=136
cli_commandfile G:143 DEF libhdr.h[187] cli_commandfile=143
cli_commandname G:138 DEF libhdr.h[182] cli_commandname=138
cli_currentinput G:142 DEF libhdr.h[186] cli_currentinput=142
cli_currentoutput G:146 DEF libhdr.h[193] cli_currentoutput=146
cli_data G:135 DEF libhdr.h[175] cli_data=135
cli_defaultstack G:147 DEF libhdr.h[194] cli_defaultstack=147
cli_faillevel G:139 DEF libhdr.h[183] cli_faillevel=139
cli_init G:133 DEF libhdr.h[173] cli_init=133
cli_initialfaillevel M:10 DEF libhdr.h[590]
    cli_initialfaillevel=return_hard
cli_initialstack M:50000 DEF libhdr.h[589] cli_initialstack=50000
cli_module G:149 DEF libhdr.h[196] cli_module=149
cli_module_gn M:149 DEF libhdr.h[588] cli_module_gn=149
cli_preloadlist G:145 DEF libhdr.h[192] cli_preloadlist=145
cli_prompt G:140 DEF libhdr.h[184] cli_prompt=140
cli_result2 G:134 DEF libhdr.h[174] cli_result2=134
cli_returncode G:137 DEF libhdr.h[177] cli_returncode=137
cli_standardinput G:141 DEF libhdr.h[185] cli_standardinput=141
cli_standardoutput G:148 DEF libhdr.h[195] cli_standardoutput=148
cli_status G:144 DEF libhdr.h[189] cli_status=144
cli_tallyflag G:132 DEF libhdr.h[172] cli_tallyflag=132
clibit_comcom M:4 DEF libhdr.h[595] clibit_comcom=4
clibit_endcli M:256 DEF libhdr.h[601] clibit_endcli=256
clibit_eofdel M:2 DEF libhdr.h[594] clibit_eofdel=2
clibit_maincli M:8 DEF libhdr.h[596] clibit_maincli=8
clibit_mbxcli M:64 DEF libhdr.h[599] clibit_mbxcli=64
clibit_newcli M:16 DEF libhdr.h[597] clibit_newcli=16
clibit_noprompt M:1 DEF libhdr.h[593] clibit_noprompt=1
clibit_runcli M:32 DEF libhdr.h[598] clibit_runcli=32
clibit_tcpcli M:128 DEF libhdr.h[600] clibit_tcpcli=128
clihook G:4 DEF libhdr.h[39] clihook=4
cliregs M:21 DEF libhdr.h[480] cliregs=21
closesdl G:494 DEF sdl.h[125] closesdl=
closesdl G:494 RT sdl.b[130] LET closesdl()BE..
co_c M:5 DEF libhdr.h[286] co_c=
co_fn M:3 DEF libhdr.h[284] co_fn=
co_list M:2 DEF libhdr.h[283] co_list=
co_parent M:1 DEF libhdr.h[282] co_parent=
co_pptr M:0 DEF libhdr.h[281] co_pptr=0
co_size M:4 DEF libhdr.h[285] co_size=
codewrch G:126 DEF libhdr.h[163] codewrch=126
colist G:8 DEF libhdr.h[43] colist=8
compch G:97 DEF libhdr.h[134] compch=97
compstring G:98 DEF libhdr.h[135] compstring=98
consoletask G:171 DEF libhdr.h[219] consoletask=171
copy_bytes G:116 DEF libhdr.h[153] copy_bytes=116
copy_words G:114 DEF libhdr.h[151] copy_words=114
copydir G:79 DEF libhdr.h[115] copydir=79
copyobj G:75 DEF libhdr.h[111] copyobj=75
copystring G:99 DEF libhdr.h[136] copystring=99
cos G:13 DEF libhdr.h[49] cos=13
cowait G:20 DEF libhdr.h[56] cowait=20
createco G:17 DEF libhdr.h[53] createco=17
createdev G:172 DEF libhdr.h[220] createdev=172
createdir G:82 DEF libhdr.h[118] createdir=82
createtask G:153 DEF libhdr.h[204] createtask=153
currco G:7 DEF libhdr.h[42] currco=7
currcolour G:472 DEF sdl.h[87] currcolour=
currcolour G:472 LG sdl.b[308] currcolour
currcolour G:472 LG sdl.b[363]
    sys(Sys_sdl,sdl_fillrect,@currsurf,x,currysize-y,1,...)
currcolour G:472 LG sdl.b[378]
    sys(Sys_sdl,sdl_fillrect,@currsurf,x,currysize-y,1,...)
currcolour G:472 LG sdl.b[760]
    sys(Sys_sdl,sdl_fillrect,@currsurf,xmin,currysize-ymax,...,...)
currcolour G:472 LG sdl.b[938]
    sys(Sys_sdl,sdl_drawfillcircle,@currsurf,x,currysize-y,radius,currcolour)
currcolour G:472 SG sdl.b[141] currcolour:=col
current_language G:190 DEF libhdr.h[231] current_language=190
currentdir G:14 DEF libhdr.h[50] currentdir=14
currsurf G:452 DEF sdl.h[47] currsurf=
currsurf G:452 LLG sdl.b[363]
    sys(Sys_sdl,sdl_fillrect,@currsurf,x,currysize-y,1,...)
currsurf G:452 LLG sdl.b[378]
    sys(Sys_sdl,sdl_fillrect,@currsurf,x,currysize-y,1,...)
currsurf G:452 LLG sdl.b[424] sys(Sys_sdl,sdl_fillsurf,@currsurf,col)
currsurf G:452 LLG sdl.b[760]
    sys(Sys_sdl,sdl_fillrect,@currsurf,xmin,currysize-ymax,...,...)
currsurf G:452 LLG sdl.b[938]
    sys(Sys_sdl,sdl_drawfillcircle,@currsurf,x,currysize-y,radius,currcolour)
currsurf G:452 SG sdl.b[155] currsurf:=surfptr!0
currsurf1 G:453 DEF sdl.h[47] currsurf1=
currsurf1 G:453 SG sdl.b[155] currsurf1:=surfptr!1
currsz3d G:477 DEF sdl.h[99] currsz3d=
currsz3d G:477 LG sdl.b[352] currsz3d:=currsz3d+FIX dz*zfac
currsz3d G:477 LG sdl.b[356]
    drawto3d(currx3d+FIX dx,curry3d+FIX dy,currsz3d+FIX dz*zfac)
currsz3d G:477 LG sdl.b[457] currsz3d
currsz3d G:477 SG sdl.b[347] currsz3d:=FIX z*zfac
currsz3d G:477 SG sdl.b[352] currsz3d:=currsz3d+FIX dz*zfac
currsz3d G:477 SG sdl.b[474] currsz3d:=sz1
currsz3d G:477 SG sdl.b[66] currsz3d:=0
currx G:473 DEF sdl.h[89] currx=
currx G:473 LG sdl.b[162] moveto(currx+dx,curry+dy)
currx G:473 LG sdl.b[168] ABS x-currx
currx G:473 LG sdl.b[170] currx<x->1,-1
currx G:473 LG sdl.b[175] drawpoint(currx,curry)
currx G:473 LG sdl.b[176] IF currx=x&curry=y DO ..
currx G:473 LG sdl.b[181] currx:=currx+sx
currx G:473 LG sdl.b[190] drawto(currx+dx,curry+dy)
currx G:473 LG sdl.b[196] write_ch_slice(currx,curry+11-line,ch,line)
currx G:473 LG sdl.b[197] currx:=currx+9
currx G:473 LG sdl.b[203] currx
currx G:473 LG sdl.b[556] currx
currx G:473 SG sdl.b[161] currx:=x
currx G:473 SG sdl.b[181] currx:=currx+sx
currx G:473 SG sdl.b[193] currx:=10
currx G:473 SG sdl.b[197] currx:=currx+9
currx G:473 SG sdl.b[338] currx:=cx
currx G:473 SG sdl.b[593] currx:=oldcurrx
currx G:473 SG sdl.b[65] currx:=0
currx G:473 SG sdl.b[751] currx:=x0
currx G:473 SG sdl.b[763] currx:=x0
currx G:473 SG sdl.b[822] currx:=x0
currx G:473 SG sdl.b[893] currx:=x0
currx3d G:475 DEF sdl.h[96] currx3d=
currx3d G:475 LG sdl.b[350] currx3d:=currx3d+FIX dx
currx3d G:475 LG sdl.b[356]
    drawto3d(currx3d+FIX dx,curry3d+FIX dy,currsz3d+FIX dz*zfac)
currx3d G:475 LG sdl.b[457] currx3d
currx3d G:475 SG sdl.b[347] currx3d:=FIX x
currx3d G:475 SG sdl.b[350] currx3d:=currx3d+FIX dx
currx3d G:475 SG sdl.b[474] currx3d:=x1
currx3d G:475 SG sdl.b[474] currx3d:=y1
currx3d G:475 SG sdl.b[66] currx3d:=0
currxsize G:478 DEF sdl.h[104] currxsize=
currxsize G:478 LG sdl.b[158] depthvupb:=currxsize*currysize-1
currxsize G:478 LG sdl.b[362] IF 0<=x&x<currxsize&0<=y&y<currysize DO ..
currxsize G:478 LG sdl.b[371] IF 0<=x&x<currxsize&0<=y&y<currysize DO ..
currxsize G:478 LG sdl.b[373] @depthv!(x+y*currxsize)
currxsize G:478 LG sdl.b[62] depthvupb:=currxsize*currysize-1
currxsize G:478 LG sdl.b[730] leftxv!y:=currxsize
currxsize G:478 SG sdl.b[156] currxsize:=xsize
currxsize G:478 SG sdl.b[61] currxsize:=600
curry G:474 DEF sdl.h[90] curry=
curry G:474 LG sdl.b[162] moveto(currx+dx,curry+dy)
curry G:474 LG sdl.b[169] ABS y-curry
curry G:474 LG sdl.b[171] curry<y->1,-1
curry G:474 LG sdl.b[175] drawpoint(currx,curry)
curry G:474 LG sdl.b[176] IF currx=x&curry=y DO ..
curry G:474 LG sdl.b[185] curry:=curry+sy
curry G:474 LG sdl.b[190] drawto(currx+dx,curry+dy)
curry G:474 LG sdl.b[193] curry:=curry-14
curry G:474 LG sdl.b[196] write_ch_slice(currx,curry+11-line,ch,line)
curry G:474 LG sdl.b[203] curry
curry G:474 LG sdl.b[556] curry
curry G:474 SG sdl.b[161] curry:=y
curry G:474 SG sdl.b[185] curry:=curry+sy
curry G:474 SG sdl.b[193] curry:=curry-14
curry G:474 SG sdl.b[338] curry:=cy
curry G:474 SG sdl.b[593] curry:=oldcurry
curry G:474 SG sdl.b[65] curry:=0
curry G:474 SG sdl.b[751] curry:=y0
curry G:474 SG sdl.b[763] curry:=y0
curry G:474 SG sdl.b[822] curry:=y0
curry G:474 SG sdl.b[893] curry:=y0
curry3d G:476 DEF sdl.h[97] curry3d=
curry3d G:476 LG sdl.b[351] curry3d:=curry3d+FIX dy
curry3d G:476 LG sdl.b[356]
    drawto3d(currx3d+FIX dx,curry3d+FIX dy,currsz3d+FIX dz*zfac)
curry3d G:476 LG sdl.b[457] curry3d
curry3d G:476 SG sdl.b[347] curry3d:=FIX y
curry3d G:476 SG sdl.b[351] curry3d:=curry3d+FIX dy
curry3d G:476 SG sdl.b[66] curry3d:=0
currysize G:479 DEF sdl.h[105] currysize=
currysize G:479 LG sdl.b[157] curryupb:=currysize-1
currysize G:479 LG sdl.b[158] depthvupb:=currxsize*currysize-1
currysize G:479 LG sdl.b[362] IF 0<=x&x<currxsize&0<=y&y<currysize DO ..
currysize G:479 LG sdl.b[363]
    sys(Sys_sdl,sdl_fillrect,@currsurf,x,currysize-y,1,...)
currysize G:479 LG sdl.b[371] IF 0<=x&x<currxsize&0<=y&y<currysize DO ..
currysize G:479 LG sdl.b[378]
    sys(Sys_sdl,sdl_fillrect,@currsurf,x,currysize-y,1,...)
currysize G:479 LG sdl.b[406] currysize-y-1
currysize G:479 LG sdl.b[419] currysize-y-1
currysize G:479 LG sdl.b[516] IF 0<=y&y<currysize DO ..
currysize G:479 LG sdl.b[540] currysize-1
currysize G:479 LG sdl.b[545] sawritef("Unabl'ize=%i3*n",currysize)
currysize G:479 LG sdl.b[565] miny:=currysize
currysize G:479 LG sdl.b[589] leftxv!y:=currysize-1
currysize G:479 LG sdl.b[62] depthvupb:=currxsize*currysize-1
currysize G:479 LG sdl.b[669] FOR y=0 TO currysize-1 DO..
currysize G:479 LG sdl.b[670] leftxv!y:=currysize
currysize G:479 LG sdl.b[677] leftzv!y:=currysize
currysize G:479 LG sdl.b[702] miny:=currysize
currysize G:479 LG sdl.b[760]
    sys(Sys_sdl,sdl_fillrect,@currsurf,xmin,currysize-ymax,...,...)
currysize G:479 LG sdl.b[937] IF y>=currysize-radius DO ..
currysize G:479 LG sdl.b[937] y:=currysize-radius
currysize G:479 LG sdl.b[938]
    sys(Sys_sdl,sdl_drawfillcircle,@currsurf,x,currysize-y,radius,currcolour)
currysize G:479 SG sdl.b[156] currysize:=ysize
currysize G:479 SG sdl.b[61] currysize:=400
curryupb G:480 DEF sdl.h[106] curryupb=
curryupb G:480 LG sdl.b[626] IF 0<=y&y<=curryupb DO ..
curryupb G:480 LG sdl.b[667] leftxv:=getvec(curryupb)
curryupb G:480 LG sdl.b[668] rightxv:=getvec(curryupb)
curryupb G:480 LG sdl.b[674] leftzv:=getvec(curryupb)
curryupb G:480 LG sdl.b[675] rightzv:=getvec(curryupb)
curryupb G:480 LG sdl.b[676] FOR y=0 TO curryupb DO..
curryupb G:480 SG sdl.b[157] curryupb:=currysize-1
dat_to_strings G:110 DEF libhdr.h[147] dat_to_strings=110
datstamp G:109 DEF libhdr.h[146] datstamp=109
datstring G:108 DEF libhdr.h[145] datstring=108
deadcode M:#xDEADC0DE DEF libhdr.h[264] deadcode=-#x21523F22
delay G:128 DEF libhdr.h[165] delay=128
delayuntil G:129 DEF libhdr.h[166] delayuntil=129
deleteco G:18 DEF libhdr.h[54] deleteco=18
deletedev G:173 DEF libhdr.h[221] deletedev=173
deletefile G:76 DEF libhdr.h[112] deletefile=76
deleteself G:125 DEF libhdr.h[162] deleteself=125
deletetask G:154 DEF libhdr.h[205] deletetask=154
deplete G:43 DEF libhdr.h[79] deplete=43
depthv G:460 DEF sdl.h[65] depthv=
depthv G:460 LG sdl.b[135] IF depthv DO ..
depthv G:460 LG sdl.b[135] freevec(depthv)
depthv G:460 LG sdl.b[373] @depthv!(x+y*currxsize)
depthv G:460 LG sdl.b[425] IF depthv DO ..
depthv G:460 LG sdl.b[425] depthv!p:=maxdepth
depthv G:460 LG sdl.b[480] UNLESS depthv DO ..
depthv G:460 LG sdl.b[482] depthv!i:=maxdepth
depthv G:460 LG sdl.b[680] UNLESS depthv DO ..
depthv G:460 LG sdl.b[682] depthv!i:=maxdepth
depthv G:460 LG sdl.b[697] UNLESS depthv DO ..
depthv G:460 SG sdl.b[481] depthv:=getvec(depthvupb)
depthv G:460 SG sdl.b[63] depthv:=0
depthv G:460 SG sdl.b[681] depthv:=getvec(depthvupb)
depthvupb G:461 DEF sdl.h[67] depthvupb=
depthvupb G:461 LG sdl.b[425] FOR p=0 TO depthvupb DO..
depthvupb G:461 LG sdl.b[481] depthv:=getvec(depthvupb)
depthvupb G:461 LG sdl.b[482] FOR i=0 TO depthvupb DO..
depthvupb G:461 LG sdl.b[681] depthv:=getvec(depthvupb)
depthvupb G:461 LG sdl.b[682] FOR i=0 TO depthvupb DO..
depthvupb G:461 SG sdl.b[158] depthvupb:=currxsize*currysize-1
depthvupb G:461 SG sdl.b[62] depthvupb:=currxsize*currysize-1
drawby G:503 DEF sdl.h[140] drawby=
drawby G:503 RT sdl.b[190] LET drawby(dx,dy)BE..
drawby3d G:527 DEF sdl.h[206] drawby3d=
drawby3d G:527 RT sdl.b[355] LET drawby3d(FLT dx,FLT dy,FLT dz)BE..
drawch G:504 DEF sdl.h[143] drawch=
drawch G:504 LG sdl.b[432] drawch(s%i)
drawch G:504 RT sdl.b[192] LET drawch(ch)BE..
drawcircle G:515 DEF sdl.h[179] drawcircle=
drawcircle G:515 RT sdl.b[896] LET drawcircle(x0,y0,radius)BE..
drawellipse G:518 DEF sdl.h[183] drawellipse=
drawf G:540 DEF sdl.h[248] drawf=
drawf G:540 LG com/sdl3dtst.b[41]
    drawf(170,25,"%i2, ' zfac=%n",FIX x0,FIX y0,0,...)
drawf G:540 LG com/sdl3dtst.b[48]
    drawf(170,10,"%i2, ' zfac=%n",FIX x0,...+i,i,...)
drawf G:540 RT sdl.b[435] LET drawf(x,y,form,a,b,c,d,...)BE..
drawfillcircle G:519 DEF sdl.h[185] drawfillcircle=
drawfillcircle G:519 RT sdl.b[942] LET drawfillcircle(x0,y0,radius)BE..
drawfillcircle1 F:50 RT sdl.b[932] LET drawfillcircle1(x,y,radius)BE..
drawfillellipse G:522 DEF sdl.h[188] drawfillellipse=
drawfillrect G:520 DEF sdl.h[186] drawfillrect=
drawfillrect G:520 RT sdl.b[754] LET drawfillrect(x0,y0,x1,y1)BE..
drawfillrndrect G:521 DEF sdl.h[187] drawfillrndrect=
drawfillrndrect G:521 RT sdl.b[825]
    LET drawfillrndrect(x0,y0,x1,y1,radius)BE..
drawfstr G:541 DEF sdl.h[250] drawfstr=
drawfstr G:541 LG sdl.b[440] drawfstr%0:=0
drawfstr G:541 LG sdl.b[444] drawstr(x,y,drawfstr)
drawfstr G:541 LG sdl.b[448] drawfstr%0+1
drawfstr G:541 LG sdl.b[449] drawfstr%strlen:=ch
drawfstr G:541 LG sdl.b[450] drawfstr%0:=strlen
drawfstr G:541 SG sdl.b[439] drawfstr:=s
drawpoint G:510 DEF sdl.h[168] drawpoint=
drawpoint G:510 LG sdl.b[175] drawpoint(currx,curry)
drawpoint G:510 LG sdl.b[324] drawpoint(x,y)
drawpoint G:510 LG sdl.b[325] drawpoint(x+1,y)
drawpoint G:510 LG sdl.b[326] drawpoint(x+2,y)
drawpoint G:510 LG sdl.b[327] drawpoint(x+3,y)
drawpoint G:510 LG sdl.b[328] drawpoint(x+4,y)
drawpoint G:510 LG sdl.b[329] drawpoint(x+5,y)
drawpoint G:510 LG sdl.b[330] drawpoint(x+6,y)
drawpoint G:510 LG sdl.b[331] drawpoint(x+7,y)
drawpoint G:510 LG sdl.b[744] drawpoint(x,ymin)
drawpoint G:510 LG sdl.b[745] drawpoint(x,ymax)
drawpoint G:510 LG sdl.b[748] drawpoint(xmin,y)
drawpoint G:510 LG sdl.b[749] drawpoint(xmax,y)
drawpoint G:510 LG sdl.b[779] drawpoint(x,ymin)
drawpoint G:510 LG sdl.b[780] drawpoint(x,ymax)
drawpoint G:510 LG sdl.b[783] drawpoint(xmin,y)
drawpoint G:510 LG sdl.b[784] drawpoint(xmax,y)
drawpoint G:510 LG sdl.b[795] drawpoint(xmax,ymin+r)
drawpoint G:510 LG sdl.b[796] drawpoint(xmin,ymin+r)
drawpoint G:510 LG sdl.b[797] drawpoint(xmax,ymax-r)
drawpoint G:510 LG sdl.b[798] drawpoint(xmin,ymax-r)
drawpoint G:510 LG sdl.b[812] drawpoint(xmax-r+x,ymax-r+y)
drawpoint G:510 LG sdl.b[813] drawpoint(xmin+r-x,ymax-r+y)
drawpoint G:510 LG sdl.b[814] drawpoint(xmax-r+x,ymin+r-y)
drawpoint G:510 LG sdl.b[815] drawpoint(xmin+r-x,ymin+r-y)
drawpoint G:510 LG sdl.b[816] drawpoint(xmax-r+y,ymax-r+x)
drawpoint G:510 LG sdl.b[817] drawpoint(xmin+r-y,ymax-r+x)
drawpoint G:510 LG sdl.b[818] drawpoint(xmax-r+y,ymin+r-x)
drawpoint G:510 LG sdl.b[819] drawpoint(xmin+r-y,ymin+r-x)
drawpoint G:510 LG sdl.b[839] drawpoint(x,y)
drawpoint G:510 LG sdl.b[840] drawpoint(x,y)
drawpoint G:510 LG sdl.b[852] drawpoint(xmax,ymin+r)
drawpoint G:510 LG sdl.b[853] drawpoint(xmin,ymin+r)
drawpoint G:510 LG sdl.b[854] drawpoint(xmax,ymax-r)
drawpoint G:510 LG sdl.b[855] drawpoint(xmin,ymax-r)
drawpoint G:510 LG sdl.b[869] drawpoint(xmax-r+x,ymax-r+y)
drawpoint G:510 LG sdl.b[870] drawpoint(xmin+r-x,ymax-r+y)
drawpoint G:510 LG sdl.b[871] drawpoint(xmax-r+x,ymin+r-y)
drawpoint G:510 LG sdl.b[872] drawpoint(xmin+r-x,ymin+r-y)
drawpoint G:510 LG sdl.b[873] drawpoint(xmax-r+y,ymax-r+x)
drawpoint G:510 LG sdl.b[874] drawpoint(xmin+r-y,ymax-r+x)
drawpoint G:510 LG sdl.b[875] drawpoint(xmax-r+y,ymin+r-x)
drawpoint G:510 LG sdl.b[876] drawpoint(xmin+r-y,ymin+r-x)
drawpoint G:510 LG sdl.b[880] drawpoint(fx,ymax-r+x)
drawpoint G:510 LG sdl.b[881] drawpoint(fx,ymin+r-x)
drawpoint G:510 LG sdl.b[887] drawpoint(fx,ymax-r+y)
drawpoint G:510 LG sdl.b[888] drawpoint(fx,ymin+r-y)
drawpoint G:510 LG sdl.b[904] drawpoint(x0,y0+radius)
drawpoint G:510 LG sdl.b[905] drawpoint(x0,y0-radius)
drawpoint G:510 LG sdl.b[906] drawpoint(x0+radius,y0)
drawpoint G:510 LG sdl.b[907] drawpoint(x0-radius,y0)
drawpoint G:510 LG sdl.b[921] drawpoint(x0+x,y0+y)
drawpoint G:510 LG sdl.b[922] drawpoint(x0-x,y0+y)
drawpoint G:510 LG sdl.b[923] drawpoint(x0+x,y0-y)
drawpoint G:510 LG sdl.b[924] drawpoint(x0-x,y0-y)
drawpoint G:510 LG sdl.b[925] drawpoint(x0+y,y0+x)
drawpoint G:510 LG sdl.b[926] drawpoint(x0-y,y0+x)
drawpoint G:510 LG sdl.b[927] drawpoint(x0+y,y0-x)
drawpoint G:510 LG sdl.b[928] drawpoint(x0-y,y0-x)
drawpoint G:510 LG sdl.b[951] drawpoint(x0,y0+radius)
drawpoint G:510 LG sdl.b[952] drawpoint(x0,y0-radius)
drawpoint G:510 LG sdl.b[953] drawpoint(x,y0)
drawpoint G:510 LG sdl.b[967] drawpoint(x0+x,y0+y)
drawpoint G:510 LG sdl.b[968] drawpoint(x0-x,y0+y)
drawpoint G:510 LG sdl.b[969] drawpoint(x0+x,y0-y)
drawpoint G:510 LG sdl.b[970] drawpoint(x0-x,y0-y)
drawpoint G:510 LG sdl.b[971] drawpoint(x0+y,y0+x)
drawpoint G:510 LG sdl.b[972] drawpoint(x0-y,y0+x)
drawpoint G:510 LG sdl.b[973] drawpoint(x0+y,y0-x)
drawpoint G:510 LG sdl.b[974] drawpoint(x0-y,y0-x)
drawpoint G:510 LG sdl.b[977] drawpoint(fx,y0+x)
drawpoint G:510 LG sdl.b[978] drawpoint(fx,y0-x)
drawpoint G:510 LG sdl.b[984] drawpoint(fx,y0+y)
drawpoint G:510 LG sdl.b[985] drawpoint(fx,y0-y)
drawpoint G:510 RT sdl.b[358] LET drawpoint(x,y)BE..
drawpoint3d G:528 DEF sdl.h[212] drawpoint3d=
drawpoint3d G:528 RT sdl.b[366] LET drawpoint3d(FLT x,FLT y,FLT z)BE..
drawpoint3di G:532 DEF sdl.h[232] drawpoint3di=
drawpoint3di G:532 LG sdl.b[367] drawpoint3di(FIX x,FIX y,FIX z*zfac)
drawpoint3di G:532 LG sdl.b[486] drawpoint3di(x,y,sz)
drawpoint3di G:532 LG sdl.b[721] drawpoint3di(x0,y,sz)
drawpoint3di G:532 LG sdl.b[726] drawpoint3di(x0+s,y,sz)
drawpoint3di G:532 RT sdl.b[369] LET drawpoint3di(x,y,sz)BE..
drawquad G:513 DEF sdl.h[172] drawquad=
drawquad G:513 RT sdl.b[596] LET drawquad(x1,y1,x2,y2,x3,y3,x4,y4)BE..
drawquad3d G:530 DEF sdl.h[220] drawquad3d=
drawquad3d G:530 RT sdl.b[686]
    LET drawquad3d(x1,y1,z1,x2,y2,z2,x3,...)BE..
drawrect G:516 DEF sdl.h[181] drawrect=
drawrect G:516 RT sdl.b[737] LET drawrect(x0,y0,x1,y1)BE..
drawrndrect G:517 DEF sdl.h[182] drawrndrect=
drawrndrect G:517 RT sdl.b[766] LET drawrndrect(x0,y0,x1,y1,radius)BE..
drawstr G:511 DEF sdl.h[169] drawstr=
drawstr G:511 LG sdl.b[444] drawstr(x,y,drawfstr)
drawstr G:511 RT sdl.b[430] LET drawstr(x,y,s)BE..
drawto G:502 DEF sdl.h[138] drawto=
drawto G:502 LG sdl.b[190] drawto(currx+dx,curry+dy)
drawto G:502 LG sdl.b[587] drawto(rightxv!y,y)
drawto G:502 RT sdl.b[164] LET drawto(x,y)BE..
drawto3d G:525 DEF sdl.h[201] drawto3d=
drawto3d G:525 LG sdl.b[356]
    drawto3d(currx3d+FIX dx,curry3d+FIX dy,currsz3d+FIX dz*zfac)
drawto3d G:525 RT sdl.b[453] LET drawto3d(FLT x,FLT y,FLT z)BE..
drawto3di G:526 DEF sdl.h[203] drawto3di=
drawto3di G:526 LG sdl.b[454] drawto3di(FIX x,FIX y,FIX z*zfac)
drawto3di G:526 RT sdl.b[456] LET drawto3di(x1,y1,sz1)BE..
drawtriangle G:512 DEF sdl.h[170] drawtriangle=
drawtriangle G:512 LG sdl.b[598] drawtriangle(x1,y1,x2,y2,x3,y3)
drawtriangle G:512 LG sdl.b[599] drawtriangle(x2,y2,x3,y3,x4,y4)
drawtriangle G:512 RT sdl.b[554] LET drawtriangle(x1,y1,x2,y2,x3,y3)BE..
drawtriangle3d G:529 DEF sdl.h[215] drawtriangle3d=
drawtriangle3d G:529 LG com/sdl3dtst.b[40]
    drawtriangle3d(x0,y0, 0.000,x1#- 20.000,y1, 0.000,...)
drawtriangle3d G:529 LG com/sdl3dtst.b[47]
    drawtriangle3d(x0,y0#+i,i,x1#+ 20.000,y1,j,...)
drawtriangle3d G:529 LG sdl.b[688] drawtriangle3d(x1,y1,z1,x2,y2,z2,...)
drawtriangle3d G:529 LG sdl.b[689] drawtriangle3d(x1,y1,z1,x3,y3,z3,...)
drawtriangle3d G:529 RT sdl.b[692]
    LET drawtriangle3d(FLT x1,FLT y1,FLT z1,FLT x2,FLT y2,FLT z2,FLT x3,...)BE..
drawwrch F:34 LF sdl.b[441] wrch:=drawwrch
drawwrch F:34 RT sdl.b[447] LET drawwrch(ch)BE..
endread G:60 DEF libhdr.h[96] endread=60
endstream G:62 DEF libhdr.h[98] endstream=62
endstreamch M:-1 DEF libhdr.h[247] endstreamch=-1
endtask G:162 DEF libhdr.h[213] endtask=162
endwrite G:61 DEF libhdr.h[97] endwrite=61
entryword M:57311 DEF libhdr.h[266] entryword=57311
eventa1 G:485 DEF sdl.h[114] eventa1=
eventa2 G:486 DEF sdl.h[115] eventa2=
eventa3 G:487 DEF sdl.h[116] eventa3=
eventa4 G:488 DEF sdl.h[117] eventa4=
eventa5 G:489 DEF sdl.h[118] eventa5=
eventtype G:484 DEF sdl.h[113] eventtype=
eventtype G:484 LLG sdl.b[385]
    RESULTIS sys(Sys_sdl,sdl_pollevent,@eventtype)
fault G:174 DEF libhdr.h[222] fault=174
fillsurf G:506 DEF sdl.h[152] fillsurf=
fillsurf G:506 LG com/sdl3dtst.b[38] fillsurf(col_blue)
fillsurf G:506 RT sdl.b[423] LET fillsurf(col)BE..
findappend G:130 DEF libhdr.h[167] findappend=130
findarg G:104 DEF libhdr.h[141] findarg=104
findinoutput G:50 DEF libhdr.h[86] findinoutput=50
findinput G:48 DEF libhdr.h[84] findinput=48
findoutput G:49 DEF libhdr.h[85] findoutput=49
findstream G:52 DEF libhdr.h[88] findstream=52
findupdate G:51 DEF libhdr.h[87] findupdate=51
fl_64to32 M:45 DEF libhdr.h[577] fl_64to32=
fl_F2N M:42 DEF libhdr.h[574] fl_F2N=
fl_N2F M:41 DEF libhdr.h[573] fl_N2F=
fl_abs M:5 DEF libhdr.h[544] fl_abs=
fl_acos M:20 DEF libhdr.h[549] fl_acos=20
fl_add M:9 DEF libhdr.h[546] fl_add=
fl_asin M:21 DEF libhdr.h[550] fl_asin=
fl_atan M:22 DEF libhdr.h[551] fl_atan=
fl_atan2 M:23 DEF libhdr.h[552] fl_atan2=
fl_avail M:0 DEF libhdr.h[542] fl_avail=0
fl_ceil M:38 DEF libhdr.h[567] fl_ceil=
fl_cos M:24 DEF libhdr.h[553] fl_cos=
fl_cosh M:27 DEF libhdr.h[556] fl_cosh=
fl_div M:7 DEF libhdr.h[545] fl_div=
fl_eq M:13 DEF libhdr.h[547] fl_eq=
fl_exp M:30 DEF libhdr.h[559] fl_exp=
fl_fix M:4 DEF libhdr.h[544] fl_fix=
fl_float M:3 DEF libhdr.h[544] fl_float=
fl_floor M:39 DEF libhdr.h[568] fl_floor=
fl_frexp M:31 DEF libhdr.h[560] fl_frexp=
fl_ge M:18 DEF libhdr.h[547] fl_ge=
fl_gr M:16 DEF libhdr.h[547] fl_gr=
fl_ldexp M:32 DEF libhdr.h[561] fl_ldexp=
fl_le M:17 DEF libhdr.h[547] fl_le=
fl_log M:33 DEF libhdr.h[562] fl_log=
fl_log10 M:34 DEF libhdr.h[563] fl_log10=
fl_ls M:15 DEF libhdr.h[547] fl_ls=
fl_mk M:1 DEF libhdr.h[543] fl_mk=
fl_mod M:8 DEF libhdr.h[545] fl_mod=
fl_modf M:40 DEF libhdr.h[569] fl_modf=
fl_mul M:6 DEF libhdr.h[545] fl_mul=
fl_ne M:14 DEF libhdr.h[547] fl_ne=
fl_neg M:12 DEF libhdr.h[546] fl_neg=
fl_pos M:11 DEF libhdr.h[546] fl_pos=
fl_pow M:36 DEF libhdr.h[565] fl_pow=36
fl_radius2 M:43 DEF libhdr.h[575] fl_radius2=
fl_radius3 M:44 DEF libhdr.h[576] fl_radius3=
fl_sin M:25 DEF libhdr.h[554] fl_sin=
fl_sinh M:28 DEF libhdr.h[557] fl_sinh=
fl_sqrt M:37 DEF libhdr.h[566] fl_sqrt=
fl_sub M:10 DEF libhdr.h[546] fl_sub=
fl_tan M:26 DEF libhdr.h[555] fl_tan=
fl_tanh M:29 DEF libhdr.h[558] fl_tanh=
fl_unmk M:2 DEF libhdr.h[543] fl_unmk=
flag_a M:1 DEF libhdr.h[702] flag_a=1<<0
flag_b M:2 DEF libhdr.h[703] flag_b=1<<1
flag_c M:4 DEF libhdr.h[704] flag_c=1<<2
flag_d M:8 DEF libhdr.h[705] flag_d=1<<3
flag_e M:16 DEF libhdr.h[706] flag_e=1<<4
format G:454 DEF sdl.h[50] format=
format G:454 LLG sdl.b[126] sys(Sys_sdl,sdl_maprgb,@format,r,g,b)
format G:454 LLG sdl.b[148]
    sys(Sys_sdl,sdl_mksurface,@format,w,h,surfptr)
format G:454 SG sdl.b[118] format:=fmt
format1 G:455 DEF sdl.h[51] format1=
format1 G:455 SG sdl.b[118] format1:=fmt1
freeobj G:78 DEF libhdr.h[114] freeobj=78
freesurface G:498 DEF sdl.h[132] freesurface=
freesurface G:498 RT sdl.b[152] LET freesurface(surfptr)BE..
freevec G:27 DEF libhdr.h[63] freevec=27
freevec G:27 LG sdl.b[131] freevec(leftxv)
freevec G:27 LG sdl.b[132] freevec(rightxv)
freevec G:27 LG sdl.b[133] freevec(leftzv)
freevec G:27 LG sdl.b[134] freevec(rightzv)
freevec G:27 LG sdl.b[135] freevec(depthv)
fscreenxsize G:470 DEF sdl.h[84] fscreenxsize=
fscreenxsize G:470 SG sdl.b[84] fscreenxsize#:=FLOAT xsize
fscreenysize G:471 DEF sdl.h[85] fscreenysize=
fscreenysize G:471 SG sdl.b[84] fscreenysize#:=FLOAT ysize
g_colist M:8 DEF libhdr.h[272] g_colist=8
g_currco M:7 DEF libhdr.h[271] g_currco=7
g_extbase M:950 DEF libhdr.h[720] g_extbase=950
g_glbase M:450 DEF libhdr.h[718] g_glbase=450
g_globsize M:0 DEF libhdr.h[269] g_globsize=0
g_grbase M:450 DEF libhdr.h[716] g_grbase=450
g_keyboard M:20 DEF libhdr.h[276] g_keyboard=20
g_memsize M:14 DEF libhdr.h[275] g_memsize=14
g_rootnode M:9 DEF libhdr.h[273] g_rootnode=9
g_screen M:21 DEF libhdr.h[277] g_screen=21
g_sdlbase M:450 DEF libhdr.h[717] g_sdlbase=450
g_sdlbase M:450 MAN sdl.h[44] screen=g_sdlbase
g_sndbase M:450 DEF libhdr.h[719] g_sndbase=450
g_sys M:3 DEF libhdr.h[270] g_sys=3
get_record G:71 DEF libhdr.h[107] get_record=71
get_text G:93 DEF libhdr.h[130] get_text=93
get_textblib G:93 DEF libhdr.h[129] get_textblib=93
getevent G:534 DEF sdl.h[239] getevent=
getevent G:534 FN sdl.b[383] LET getevent()=..
getlogname G:118 DEF libhdr.h[155] getlogname=118
getmousestate G:533 DEF sdl.h[238] getmousestate=
getmousestate G:533 FN sdl.b[992] LET getmousestate()=..
getremipaddr G:54 DEF libhdr.h[90] getremipaddr=54
getvec G:25 DEF libhdr.h[61] getvec=25
getvec G:25 LG sdl.b[481] depthv:=getvec(depthvupb)
getvec G:25 LG sdl.b[542] leftxv:=getvec(curryupb)
getvec G:25 LG sdl.b[543] rightxv:=getvec(curryupb)
getvec G:25 LG sdl.b[667] leftxv:=getvec(curryupb)
getvec G:25 LG sdl.b[668] rightxv:=getvec(curryupb)
getvec G:25 LG sdl.b[674] leftzv:=getvec(curryupb)
getvec G:25 LG sdl.b[675] rightzv:=getvec(curryupb)
getvec G:25 LG sdl.b[681] depthv:=getvec(depthvupb)
getword G:32 DEF libhdr.h[68] getword=32
globin G:24 DEF libhdr.h[60] globin=24
globsize G:0 DEF libhdr.h[35] globsize=0
globword M:#x8F8F0000 DEF libhdr.h[262] globword=-#x70710000
hidecursor G:537 DEF sdl.h[244] hidecursor=
hidecursor G:537 FN sdl.b[396] LET hidecursor()=..
hold G:158 DEF libhdr.h[209] hold=158
id_appendscb M:132 DEF libhdr.h[491] id_appendscb=132
id_inoutscb M:131 DEF libhdr.h[490] id_inoutscb=131
id_inscb M:129 DEF libhdr.h[488] id_inscb=129
id_outscb M:130 DEF libhdr.h[489] id_outscb=130
initco G:22 DEF libhdr.h[58] initco=22
initio G:46 DEF libhdr.h[82] initio=46
initsdl G:490 DEF sdl.h[121] initsdl=
initsdl G:490 FN sdl.b[42] LET initsdl()=..
initsdl G:490 LG com/sdl3dtst.b[25] initsdl()
input G:58 DEF libhdr.h[94] input=58
instrcount G:121 DEF libhdr.h[158] instrcount=121
intflag G:119 DEF libhdr.h[156] intflag=119
isrregs M:41 DEF libhdr.h[486] isrregs=41
joystick G:466 DEF sdl.h[79] joystick=
joystick1 G:467 DEF sdl.h[79] joystick1=
klibregs M:21 DEF libhdr.h[481] klibregs=21
leftxv G:456 DEF sdl.h[53] leftxv=
leftxv G:456 LG sdl.b[131] IF leftxv DO ..
leftxv G:456 LG sdl.b[131] freevec(leftxv)
leftxv G:456 LG sdl.b[518] IF leftxv!y>x DO ..
leftxv G:456 LG sdl.b[518] leftxv!y:=x
leftxv G:456 LG sdl.b[544] UNLESS leftxv&rightxv DO ..
leftxv G:456 LG sdl.b[551] leftxv!y:=curryupb
leftxv G:456 LG sdl.b[559] UNLESS leftxv DO ..
leftxv G:456 LG sdl.b[586] moveto(leftxv!y,y)
leftxv G:456 LG sdl.b[589] leftxv!y:=currysize-1
leftxv G:456 LG sdl.b[629]
    writef("left '%i4 %i4*n",leftxv!y,leftzv!y,rightxv!y,rightzv!y)
leftxv G:456 LG sdl.b[633] IF leftxv!y>=x DO ..
leftxv G:456 LG sdl.b[634] leftxv!y:=x
leftxv G:456 LG sdl.b[645]
    writef("left 'axy=%i2*n",leftxv!y,leftzv!y,rightxv!y,rightzv!y,miny,maxy)
leftxv G:456 LG sdl.b[666] UNLESS leftxv DO ..
leftxv G:456 LG sdl.b[670] leftxv!y:=currysize
leftxv G:456 LG sdl.b[713] leftxv!y
leftxv G:456 LG sdl.b[730] leftxv!y:=currxsize
leftxv G:456 SG sdl.b[542] leftxv:=getvec(curryupb)
leftxv G:456 SG sdl.b[58] leftxv:=0
leftxv G:456 SG sdl.b[667] leftxv:=getvec(curryupb)
leftzv G:457 DEF sdl.h[55] leftzv=
leftzv G:457 LG sdl.b[133] IF leftzv DO ..
leftzv G:457 LG sdl.b[133] freevec(leftzv)
leftzv G:457 LG sdl.b[629]
    writef("left '%i4 %i4*n",leftxv!y,leftzv!y,rightxv!y,rightzv!y)
leftzv G:457 LG sdl.b[635] leftzv!y:=smax->sz0+...*s/smax,sz0
leftzv G:457 LG sdl.b[645]
    writef("left 'axy=%i2*n",leftxv!y,leftzv!y,rightxv!y,rightzv!y,miny,maxy)
leftzv G:457 LG sdl.b[673] UNLESS leftzv DO ..
leftzv G:457 LG sdl.b[677] leftzv!y:=currysize
leftzv G:457 LG sdl.b[713] leftzv!y
leftzv G:457 LG sdl.b[731] leftzv!y:=0
leftzv G:457 SG sdl.b[59] leftzv:=0
leftzv G:457 SG sdl.b[674] leftzv:=getvec(curryupb)
level G:15 DEF libhdr.h[51] level=15
loadseg G:105 DEF libhdr.h[142] loadseg=105
locatedir G:80 DEF libhdr.h[116] locatedir=80
locateobj G:81 DEF libhdr.h[117] locateobj=81
longjump G:16 DEF libhdr.h[52] longjump=16
maprgb G:492 DEF sdl.h[123] maprgb=
maprgb G:492 FN sdl.b[126] LET maprgb(r,g,b)=..
maprgb G:492 LG com/sdl3dtst.b[31] maprgb(255,0,0)
maprgb G:492 LG com/sdl3dtst.b[32] maprgb(0,255,0)
maprgb G:492 LG com/sdl3dtst.b[33] maprgb(150,150,255)
maxdepth G:462 DEF sdl.h[68] maxdepth=
maxdepth G:462 LG sdl.b[425] depthv!p:=maxdepth
maxdepth G:462 LG sdl.b[482] depthv!i:=maxdepth
maxdepth G:462 LG sdl.b[682] depthv!i:=maxdepth
maxdepth G:462 SG sdl.b[64] maxdepth:=-#x3B9ACA00
maxint M:#x7FFFFFFF DEF libhdr.h[245] maxint=minint-1
maxy G:465 DEF sdl.h[76] maxy=
maxy G:465 LG sdl.b[521] IF maxy<y DO ..
maxy G:465 LG sdl.b[582] FOR y=miny TO maxy DO..
maxy G:465 LG sdl.b[637] IF y>maxy DO ..
maxy G:465 LG sdl.b[643] IF y>maxy DO ..
maxy G:465 LG sdl.b[645]
    writef("left 'axy=%i2*n",leftxv!y,leftzv!y,rightxv!y,rightzv!y,miny,maxy)
maxy G:465 LG sdl.b[711] FOR y=miny TO maxy DO..
maxy G:465 SG sdl.b[521] maxy:=y
maxy G:465 SG sdl.b[565] maxy:=-1
maxy G:465 SG sdl.b[637] maxy:=y
maxy G:465 SG sdl.b[643] maxy:=y
maxy G:465 SG sdl.b[67] maxy:=0
maxy G:465 SG sdl.b[702] maxy:=-1
mcaddrinc M:4 DEF libhdr.h[243] mcaddrinc=bytesperword
memoryfree G:131 DEF libhdr.h[168] memoryfree=131
minint M:#x80000000 DEF libhdr.h[244] minint=1<<bitsperword-1
minint M:#x80000000 MAN libhdr.h[245] maxint=minint-1
miny G:464 DEF sdl.h[75] miny=
miny G:464 LG sdl.b[520] IF miny>y DO ..
miny G:464 LG sdl.b[582] FOR y=miny TO maxy DO..
miny G:464 LG sdl.b[636] IF y<miny DO ..
miny G:464 LG sdl.b[642] IF y<miny DO ..
miny G:464 LG sdl.b[645]
    writef("left 'axy=%i2*n",leftxv!y,leftzv!y,rightxv!y,rightzv!y,miny,maxy)
miny G:464 LG sdl.b[711] FOR y=miny TO maxy DO..
miny G:464 SG sdl.b[520] miny:=y
miny G:464 SG sdl.b[565] miny:=currysize
miny G:464 SG sdl.b[636] miny:=y
miny G:464 SG sdl.b[642] miny:=y
miny G:464 SG sdl.b[67] miny:=0
miny G:464 SG sdl.b[702] miny:=currysize
mkscreen G:491 DEF sdl.h[122] mkscreen=
mkscreen G:491 FN sdl.b[72] LET mkscreen(title,xsize,ysize)=..
mkscreen G:491 LG com/sdl3dtst.b[26] mkscreen("SDL 3D Test",800,700)
mksurface G:497 DEF sdl.h[131] mksurface=
mksurface G:497 FN sdl.b[146] LET mksurface(w,h,surfptr)=..
mousebuttons G:483 DEF sdl.h[110] mousebuttons=
mousex G:481 DEF sdl.h[108] mousex=
mousey G:482 DEF sdl.h[109] mousey=
moveby G:501 DEF sdl.h[137] moveby=
moveby G:501 RT sdl.b[162] LET moveby(dx,dy)BE..
moveby3d G:524 DEF sdl.h[199] moveby3d=
moveby3d G:524 RT sdl.b[349] LET moveby3d(FLT dx,FLT dy,FLT dz)BE..
movesurf G:507 DEF sdl.h[156] movesurf=
moveto G:500 DEF sdl.h[136] moveto=
moveto G:500 LG sdl.b[162] moveto(currx+dx,curry+dy)
moveto G:500 LG sdl.b[431] moveto(x,y)
moveto G:500 LG sdl.b[586] moveto(leftxv!y,y)
moveto G:500 RT sdl.b[161] LET moveto(x,y)BE..
moveto3d G:523 DEF sdl.h[196] moveto3d=
moveto3d G:523 RT sdl.b[346] LET moveto3d(FLT x,FLT y,FLT z)BE..
muldiv G:5 DEF libhdr.h[40] muldiv=5
newline G:84 DEF libhdr.h[120] newline=84
newline G:84 LG sdl.b[653] newline()
newpage G:120 DEF libhdr.h[157] newpage=120
note G:63 DEF libhdr.h[99] note=63
notinuse M:-1 DEF libhdr.h[604] notinuse=-1
output G:59 DEF libhdr.h[95] output=59
packstring G:30 DEF libhdr.h[66] packstring=30
pathfindinput G:53 DEF libhdr.h[89] pathfindinput=53
peercom G:179 DEF libhdr.h[225] peercom=179
pkt_a1 M:5 DEF libhdr.h[613] pkt_a1=5
pkt_a2 M:6 DEF libhdr.h[614] pkt_a2=6
pkt_a3 M:7 DEF libhdr.h[615] pkt_a3=7
pkt_a4 M:8 DEF libhdr.h[616] pkt_a4=8
pkt_a5 M:9 DEF libhdr.h[617] pkt_a5=9
pkt_a6 M:10 DEF libhdr.h[618] pkt_a6=10
pkt_arg1 M:5 DEF libhdr.h[613] pkt_arg1=5
pkt_arg2 M:6 DEF libhdr.h[614] pkt_arg2=6
pkt_arg3 M:7 DEF libhdr.h[615] pkt_arg3=7
pkt_arg4 M:8 DEF libhdr.h[616] pkt_arg4=8
pkt_arg5 M:9 DEF libhdr.h[617] pkt_arg5=9
pkt_arg6 M:10 DEF libhdr.h[618] pkt_arg6=10
pkt_devid M:1 DEF libhdr.h[609] pkt_devid=1
pkt_devtaskid M:1 DEF libhdr.h[609] pkt_devtaskid=1
pkt_id M:1 DEF libhdr.h[609] pkt_id=1
pkt_link M:0 DEF libhdr.h[608] pkt_link=0
pkt_op M:2 DEF libhdr.h[610] pkt_op=2
pkt_r1 M:3 DEF libhdr.h[611] pkt_r1=3
pkt_r2 M:4 DEF libhdr.h[612] pkt_r2=4
pkt_res1 M:3 DEF libhdr.h[611] pkt_res1=3
pkt_res2 M:4 DEF libhdr.h[612] pkt_res2=4
pkt_taskid M:1 DEF libhdr.h[609] pkt_taskid=1
pkt_type M:2 DEF libhdr.h[610] pkt_type=2
point G:64 DEF libhdr.h[100] point=64
pollingch M:-3 DEF libhdr.h[249] pollingch=-3
put_record G:72 DEF libhdr.h[108] put_record=72
putword G:33 DEF libhdr.h[69] putword=33
qpkt G:161 DEF libhdr.h[212] qpkt=161
randno G:34 DEF libhdr.h[70] randno=34
randseed G:127 DEF libhdr.h[164] randseed=127
rdargs G:102 DEF libhdr.h[139] rdargs=102
rdargs2 G:26 DEF libhdr.h[62] rdargs2=26
rdch G:38 DEF libhdr.h[74] rdch=38
rditem G:103 DEF libhdr.h[140] rditem=103
readflt G:74 DEF libhdr.h[110] readflt=74
readn G:83 DEF libhdr.h[119] readn=83
readwords G:44 DEF libhdr.h[80] readwords=44
recordnote G:70 DEF libhdr.h[106] recordnote=70
recordpoint G:69 DEF libhdr.h[105] recordpoint=69
release G:159 DEF libhdr.h[210] release=159
renamefile G:77 DEF libhdr.h[113] renamefile=77
resizescreen G:505 DEF sdl.h[149] resizescreen=
result2 G:10 DEF libhdr.h[45] result2=10
resumeco G:21 DEF libhdr.h[57] resumeco=21
return_hard M:10 DEF libhdr.h[585] return_hard=10
return_hard M:10 MAN libhdr.h[590] cli_initialfaillevel=return_hard
return_ok M:0 DEF libhdr.h[587] return_ok=0
return_severe M:20 DEF libhdr.h[584] return_severe=20
return_soft M:5 DEF libhdr.h[586] return_soft=5
returnpkt G:169 DEF libhdr.h[217] returnpkt=169
rewindstream G:65 DEF libhdr.h[101] rewindstream=65
rightxv G:458 DEF sdl.h[59] rightxv=
rightxv G:458 LG sdl.b[132] IF rightxv DO ..
rightxv G:458 LG sdl.b[132] freevec(rightxv)
rightxv G:458 LG sdl.b[519] IF rightxv!y<x DO ..
rightxv G:458 LG sdl.b[519] rightxv!y:=x
rightxv G:458 LG sdl.b[544] UNLESS leftxv&rightxv DO ..
rightxv G:458 LG sdl.b[551] rightxv!y:=0
rightxv G:458 LG sdl.b[587] drawto(rightxv!y,y)
rightxv G:458 LG sdl.b[589] rightxv!y:=0
rightxv G:458 LG sdl.b[629]
    writef("left '%i4 %i4*n",leftxv!y,leftzv!y,rightxv!y,rightzv!y)
rightxv G:458 LG sdl.b[639] IF rightxv!y<x DO ..
rightxv G:458 LG sdl.b[640] rightxv!y:=x
rightxv G:458 LG sdl.b[645]
    writef("left 'axy=%i2*n",leftxv!y,leftzv!y,rightxv!y,rightzv!y,miny,maxy)
rightxv G:458 LG sdl.b[670] rightxv!y:=-1
rightxv G:458 LG sdl.b[714] rightxv!y
rightxv G:458 LG sdl.b[730] rightxv!y:=-1
rightxv G:458 SG sdl.b[543] rightxv:=getvec(curryupb)
rightxv G:458 SG sdl.b[58] rightxv:=0
rightxv G:458 SG sdl.b[668] rightxv:=getvec(curryupb)
rightzv G:459 DEF sdl.h[61] rightzv=
rightzv G:459 LG sdl.b[134] IF rightzv DO ..
rightzv G:459 LG sdl.b[134] freevec(rightzv)
rightzv G:459 LG sdl.b[629]
    writef("left '%i4 %i4*n",leftxv!y,leftzv!y,rightxv!y,rightzv!y)
rightzv G:459 LG sdl.b[641] rightzv!y:=smax->sz0+...*s/smax,sz0
rightzv G:459 LG sdl.b[645]
    writef("left 'axy=%i2*n",leftxv!y,leftzv!y,rightxv!y,rightzv!y,miny,maxy)
rightzv G:459 LG sdl.b[677] rightzv!y:=-1
rightzv G:459 LG sdl.b[714] rightzv!y
rightzv G:459 LG sdl.b[731] rightzv!y:=0
rightzv G:459 SG sdl.b[59] rightzv:=0
rightzv G:459 SG sdl.b[675] rightzv:=getvec(curryupb)
rootnode G:9 DEF libhdr.h[44] rootnode=9
rootnodeaddr M:100 DEF libhdr.h[293] rootnodeaddr=100
rtn_abortcode M:27 DEF libhdr.h[329] rtn_abortcode=
rtn_adjclock M:33 DEF libhdr.h[347] rtn_adjclock=
rtn_blib M:19 DEF libhdr.h[318] rtn_blib=
rtn_blklist M:4 DEF libhdr.h[300] rtn_blklist=
rtn_boot M:17 DEF libhdr.h[316] rtn_boot=
rtn_boottrace M:39 DEF libhdr.h[362] rtn_boottrace=
rtn_bptaddr M:9 DEF libhdr.h[307] rtn_bptaddr=
rtn_bptinstr M:10 DEF libhdr.h[308] rtn_bptinstr=
rtn_clkintson M:6 DEF libhdr.h[303] rtn_clkintson=
rtn_clwkq M:12 DEF libhdr.h[311] rtn_clwkq=
rtn_context M:28 DEF libhdr.h[330] rtn_context=
rtn_crntask M:3 DEF libhdr.h[299] rtn_crntask=
rtn_days M:40 DEF libhdr.h[365] rtn_days=
rtn_dbgvars M:11 DEF libhdr.h[309] rtn_dbgvars=
rtn_dcountv M:34 DEF libhdr.h[349] rtn_dcountv=
rtn_devtab M:1 DEF libhdr.h[297] rtn_devtab=
rtn_dumpflag M:25 DEF libhdr.h[326] rtn_dumpflag=
rtn_envlist M:26 DEF libhdr.h[327] rtn_envlist=
rtn_gvecsize M:63 DEF libhdr.h[398] rtn_gvecsize=
rtn_hdrsvar M:37 DEF libhdr.h[358] rtn_hdrsvar=
rtn_hostaddsize M:62 DEF libhdr.h[395] rtn_hostaddsize=
rtn_icount M:48 DEF libhdr.h[378] rtn_icount=
rtn_idletcb M:32 DEF libhdr.h[346] rtn_idletcb=
rtn_info M:15 DEF libhdr.h[314] rtn_info=
rtn_insadebug M:8 DEF libhdr.h[305] rtn_insadebug=
rtn_intflag M:24 DEF libhdr.h[325] rtn_intflag=
rtn_joyaxis0 M:55 DEF libhdr.h[387] rtn_joyaxis0=
rtn_joyaxis1 M:56 DEF libhdr.h[388] rtn_joyaxis1=
rtn_joyaxis2 M:57 DEF libhdr.h[389] rtn_joyaxis2=
rtn_joyaxis3 M:58 DEF libhdr.h[390] rtn_joyaxis3=
rtn_joyaxis4 M:59 DEF libhdr.h[391] rtn_joyaxis4=
rtn_joyaxis5 M:60 DEF libhdr.h[392] rtn_joyaxis5=
rtn_joyaxis6 M:61 DEF libhdr.h[393] rtn_joyaxis6=
rtn_joyaxiscount M:52 DEF libhdr.h[384] rtn_joyaxiscount=
rtn_joybuttoncount M:51 DEF libhdr.h[383] rtn_joybuttoncount=
rtn_joybuttons M:54 DEF libhdr.h[386] rtn_joybuttons=
rtn_joycurrbuttons M:53 DEF libhdr.h[385] rtn_joycurrbuttons=
rtn_joystickfd M:49 DEF libhdr.h[381] rtn_joystickfd=
rtn_joystickfd1 M:50 DEF libhdr.h[382] rtn_joystickfd1=
rtn_keyboard M:20 DEF libhdr.h[319] rtn_keyboard=
rtn_klib M:18 DEF libhdr.h[317] rtn_klib=
rtn_lastch M:7 DEF libhdr.h[304] rtn_lastch=
rtn_mc0 M:43 DEF libhdr.h[370] rtn_mc0=
rtn_mc1 M:44 DEF libhdr.h[372] rtn_mc1=
rtn_mc2 M:45 DEF libhdr.h[373] rtn_mc2=
rtn_mc3 M:46 DEF libhdr.h[374] rtn_mc3=
rtn_membase M:13 DEF libhdr.h[312] rtn_membase=
rtn_memsize M:14 DEF libhdr.h[313] rtn_memsize=
rtn_mins M:41 DEF libhdr.h[367] rtn_mins=rtn_msecs
rtn_msecs M:41 DEF libhdr.h[366] rtn_msecs=
rtn_msecs M:41 MAN libhdr.h[367] rtn_mins=rtn_msecs
rtn_pathvar M:36 DEF libhdr.h[356] rtn_pathvar=
rtn_rootvar M:35 DEF libhdr.h[354] rtn_rootvar=
rtn_screen M:21 DEF libhdr.h[320] rtn_screen=
rtn_scriptsvar M:38 DEF libhdr.h[360] rtn_scriptsvar=
rtn_sys M:16 DEF libhdr.h[315] rtn_sys=
rtn_sysg M:30 DEF libhdr.h[339] rtn_sysg=
rtn_sysp M:29 DEF libhdr.h[338] rtn_sysp=
rtn_sysst M:31 DEF libhdr.h[340] rtn_sysst=
rtn_system M:47 DEF libhdr.h[376] rtn_system=
rtn_tallyv M:5 DEF libhdr.h[301] rtn_tallyv=
rtn_tasktab M:0 DEF libhdr.h[296] rtn_tasktab=0
rtn_tcblist M:2 DEF libhdr.h[298] rtn_tcblist=
rtn_ticks M:42 DEF libhdr.h[368] rtn_ticks=
rtn_upb M:80 DEF libhdr.h[404] rtn_upb=80
rtn_vecstatsv M:22 DEF libhdr.h[322] rtn_vecstatsv=
rtn_vecstatsvupb M:23 DEF libhdr.h[323] rtn_vecstatsvupb=
sardch G:36 DEF libhdr.h[72] sardch=36
saveregs M:31 DEF libhdr.h[482] saveregs=31
sawrch G:37 DEF libhdr.h[73] sawrch=37
sawritef G:95 DEF libhdr.h[132] sawritef=95
sawritef G:95 LG sdl.b[545] sawritef("Unabl'ize=%i3*n",currysize)
scb_blength M:14 DEF libhdr.h[516] scb_blength=
scb_block M:9 DEF libhdr.h[511] scb_block=
scb_buf M:3 DEF libhdr.h[505] scb_buf=
scb_bufend M:11 DEF libhdr.h[513] scb_bufend=
scb_encoding M:20 DEF libhdr.h[527] scb_encoding=
scb_end M:5 DEF libhdr.h[507] scb_end=
scb_endfn M:8 DEF libhdr.h[510] scb_endfn=
scb_fd M:16 DEF libhdr.h[518] scb_fd=
scb_fd1 M:17 DEF libhdr.h[519] scb_fd1=
scb_id M:0 DEF libhdr.h[502] scb_id=0
scb_lblock M:12 DEF libhdr.h[514] scb_lblock=
scb_ldata M:13 DEF libhdr.h[515] scb_ldata=
scb_maxnamelen M:31 DEF libhdr.h[500] scb_maxnamelen=31
scb_maxnamelen M:31 MAN libhdr.h[531]
    scb_nameeend=scb_name+scb_maxnamelen/bytesperword
scb_name M:21 DEF libhdr.h[529] scb_name=
scb_name M:21 MAN libhdr.h[531]
    scb_nameeend=scb_name+scb_maxnamelen/bytesperword
scb_nameeend M:28 DEF libhdr.h[531]
    scb_nameeend=scb_name+scb_maxnamelen/bytesperword
scb_pos M:4 DEF libhdr.h[506] scb_pos=
scb_rdfn M:6 DEF libhdr.h[508] scb_rdfn=
scb_reclen M:15 DEF libhdr.h[517] scb_reclen=
scb_size M:29 DEF libhdr.h[534] scb_size=
scb_size M:29 MAN libhdr.h[535] scb_upb=scb_size-1
scb_task M:2 DEF libhdr.h[504] scb_task=
scb_timeout M:18 DEF libhdr.h[520] scb_timeout=
scb_timeoutact M:19 DEF libhdr.h[523] scb_timeoutact=
scb_type M:1 DEF libhdr.h[503] scb_type=
scb_upb M:28 DEF libhdr.h[535] scb_upb=scb_size-1
scb_wrfn M:7 DEF libhdr.h[509] scb_wrfn=
scb_write M:10 DEF libhdr.h[512] scb_write=
scbt_console M:-1 DEF libhdr.h[496] scbt_console=-1
scbt_file M:1 DEF libhdr.h[494] scbt_file=1
scbt_mbx M:-2 DEF libhdr.h[497] scbt_mbx=-2
scbt_net M:2 DEF libhdr.h[493] scbt_net=2
scbt_ram M:0 DEF libhdr.h[495] scbt_ram=0
scbt_tcp M:-3 DEF libhdr.h[498] scbt_tcp=-3
screen G:450 DEF sdl.h[44] screen=g_sdlbase
screen G:450 LLG sdl.b[115]
    sys(Sys_sdl,sdl_getsurfaceinfo,@screen,@flags)
screen G:450 LLG sdl.b[122] selectsurface(@screen,xsize,ysize)
screen G:450 LLG sdl.b[401] sys(Sys_sdl,sdl_flip,@screen)
screen G:450 LLG sdl.b[86]
    ok:=sys(Sys_sdl,sdl_setvideomode,screenxsize,...)
screen1 G:451 DEF sdl.h[45] screen1=
screenxsize G:468 DEF sdl.h[82] screenxsize=
screenxsize G:468 LG sdl.b[86]
    ok:=sys(Sys_sdl,sdl_setvideomode,screenxsize,...)
screenxsize G:468 SG sdl.b[83] screenxsize:=xsize
screenysize G:469 DEF sdl.h[83] screenysize=
screenysize G:469 LG sdl.b[86]
    ok:=sys(Sys_sdl,sdl_setvideomode,screenxsize,...)
screenysize G:469 SG sdl.b[83] screenysize:=ysize
sdl_ANYFORMAT M:#x10000000 DEF sdl.h[360] sdl_ANYFORMAT=#x10000000
sdl_DOUBLEBUF M:#x40000000 DEF sdl.h[362] sdl_DOUBLEBUF=#x40000000
sdl_FULLSCREEN M:#x80000000 DEF sdl.h[363] sdl_FULLSCREEN=-#x80000000
sdl_HWPALETTE M:#x20000000 DEF sdl.h[361] sdl_HWPALETTE=#x20000000
sdl_HWSURFACE M:1 DEF sdl.h[358] sdl_HWSURFACE=1
sdl_NOFRAME M:32 DEF sdl.h[367] sdl_NOFRAME=32
sdl_OPENGL M:2 DEF sdl.h[364] sdl_OPENGL=2
sdl_OPENGLBLIT M:10 DEF sdl.h[365] sdl_OPENGLBLIT=10
sdl_RESIZABLE M:16 DEF sdl.h[366] sdl_RESIZABLE=16
sdl_SWSURFACE M:0 DEF sdl.h[357] sdl_SWSURFACE=0
sdl_SWSURFACE M:0 MAN sdl.b[86]
    ok:=sys(Sys_sdl,sdl_setvideomode,screenxsize,...)
sdl_avail M:0 DEF sdl.h[258] sdl_avail=0
sdl_blitsurface M:11 DEF sdl.h[271] sdl_blitsurface=
sdl_blitsurface M:11 MAN sdl.b[411]
    sys(Sys_sdl,sdl_blitsurface,srcptr,0,dstptr,@dx)
sdl_blitsurface M:11 MAN sdl.b[420]
    sys(Sys_sdl,sdl_blitsurface,srcptr,0,dstptr,@dx)
sdl_delay M:16 DEF sdl.h[276] sdl_delay=
sdl_delay M:16 MAN sdl.b[389] sys(Sys_sdl,sdl_delay,msecs)
sdl_displayformat M:18 DEF sdl.h[278] sdl_displayformat=
sdl_drawcircle M:30 DEF sdl.h[293] sdl_drawcircle=
sdl_drawellipse M:33 DEF sdl.h[296] sdl_drawellipse=
sdl_drawfillcircle M:37 DEF sdl.h[300] sdl_drawfillcircle=
sdl_drawfillcircle M:37 MAN sdl.b[938]
    sys(Sys_sdl,sdl_drawfillcircle,@currsurf,x,currysize-y,radius,currcolour)
sdl_drawfillellipse M:34 DEF sdl.h[297] sdl_drawfillellipse=
sdl_drawfillrect M:38 DEF sdl.h[301] sdl_drawfillrect=
sdl_drawfillround M:36 DEF sdl.h[299] sdl_drawfillround=
sdl_drawhline M:28 DEF sdl.h[291] sdl_drawhline=
sdl_drawline M:27 DEF sdl.h[290] sdl_drawline=
sdl_drawpixel M:32 DEF sdl.h[295] sdl_drawpixel=
sdl_drawrect M:31 DEF sdl.h[294] sdl_drawrect=
sdl_drawround M:35 DEF sdl.h[298] sdl_drawround=
sdl_drawvline M:29 DEF sdl.h[292] sdl_drawvline=
sdl_enable M:1 DEF sdl.h[332] sdl_enable=1
sdl_fillrect M:39 DEF sdl.h[303] sdl_fillrect=
sdl_fillrect M:39 MAN sdl.b[363]
    sys(Sys_sdl,sdl_fillrect,@currsurf,x,currysize-y,1,...)
sdl_fillrect M:39 MAN sdl.b[378]
    sys(Sys_sdl,sdl_fillrect,@currsurf,x,currysize-y,1,...)
sdl_fillrect M:39 MAN sdl.b[760]
    sys(Sys_sdl,sdl_fillrect,@currsurf,xmin,currysize-ymax,...,...)
sdl_fillsurf M:40 DEF sdl.h[304] sdl_fillsurf=
sdl_fillsurf M:40 MAN sdl.b[424] sys(Sys_sdl,sdl_fillsurf,@currsurf,col)
sdl_flip M:17 DEF sdl.h[277] sdl_flip=
sdl_flip M:17 MAN sdl.b[401] sys(Sys_sdl,sdl_flip,@screen)
sdl_freesurface M:13 DEF sdl.h[273] sdl_freesurface=
sdl_freesurface M:13 MAN sdl.b[152] sys(Sys_sdl,sdl_freesurface,surfptr)
sdl_freewav M:23 DEF sdl.h[285] sdl_freewav=
sdl_geterror M:8 DEF sdl.h[268] sdl_geterror=
sdl_geterror M:8 MAN sdl.b[46] sys(Sys_sdl,sdl_geterror,mes)
sdl_geterror M:8 MAN sdl.b[97] sys(Sys_sdl,sdl_geterror,mes)
sdl_getfmtinfo M:7 DEF sdl.h[265] sdl_getfmtinfo=
sdl_getmousestate M:21 DEF sdl.h[283] sdl_getmousestate=
sdl_getsurfaceinfo M:6 DEF sdl.h[264] sdl_getsurfaceinfo=
sdl_getsurfaceinfo M:6 MAN sdl.b[115]
    sys(Sys_sdl,sdl_getsurfaceinfo,@screen,@flags)
sdl_getticks M:50 DEF sdl.h[318] sdl_getticks=
sdl_getticks M:50 MAN sdl.b[392] sys(Sys_sdl,sdl_getticks)
sdl_hidecursor M:52 DEF sdl.h[321] sdl_hidecursor=
sdl_hidecursor M:52 MAN sdl.b[396] sys(Sys_sdl,sdl_hidecursor)
sdl_ignore M:0 DEF sdl.h[331] sdl_ignore=0
sdl_imgload M:15 DEF sdl.h[275] sdl_imgload=
sdl_init M:1 DEF sdl.h[259] sdl_init=
sdl_init M:1 MAN sdl.b[45]
    IF sys(Sys_sdl,sdl_init,sdl_init_everything) DO ..
sdl_init_everything M:65535 DEF sdl.h[355] sdl_init_everything=65535
sdl_init_everything M:65535 MAN sdl.b[45]
    IF sys(Sys_sdl,sdl_init,sdl_init_everything) DO ..
sdl_joystickclose M:43 DEF sdl.h[309] sdl_joystickclose=
sdl_joystickeventstate M:49 DEF sdl.h[317] sdl_joystickeventstate=
sdl_joystickgetaxis M:56 DEF sdl.h[326] sdl_joystickgetaxis=
sdl_joystickgetball M:57 DEF sdl.h[327] sdl_joystickgetball=
sdl_joystickgetbutton M:55 DEF sdl.h[325] sdl_joystickgetbutton=
sdl_joystickgethat M:58 DEF sdl.h[328] sdl_joystickgethat=
sdl_joystickname M:44 DEF sdl.h[310] sdl_joystickname=
sdl_joysticknumaxes M:45 DEF sdl.h[311] sdl_joysticknumaxes=
sdl_joysticknumballs M:47 DEF sdl.h[313] sdl_joysticknumballs=
sdl_joysticknumbuttons M:46 DEF sdl.h[312] sdl_joysticknumbuttons=
sdl_joysticknumhats M:48 DEF sdl.h[314] sdl_joysticknumhats=
sdl_joystickopen M:42 DEF sdl.h[308] sdl_joystickopen=
sdl_loadbmp M:10 DEF sdl.h[270] sdl_loadbmp=
sdl_loadwav M:22 DEF sdl.h[284] sdl_loadwav=
sdl_locksurface M:4 DEF sdl.h[262] sdl_locksurface=
sdl_maprgb M:26 DEF sdl.h[289] sdl_maprgb=
sdl_maprgb M:26 MAN sdl.b[126] sys(Sys_sdl,sdl_maprgb,@format,r,g,b)
sdl_mksurface M:53 DEF sdl.h[322] sdl_mksurface=
sdl_mksurface M:53 MAN sdl.b[148]
    sys(Sys_sdl,sdl_mksurface,@format,w,h,surfptr)
sdl_numjoysticks M:41 DEF sdl.h[307] sdl_numjoysticks=
sdl_pollevent M:20 DEF sdl.h[281] sdl_pollevent=
sdl_pollevent M:20 MAN sdl.b[385]
    RESULTIS sys(Sys_sdl,sdl_pollevent,@eventtype)
sdl_quit M:3 DEF sdl.h[261] sdl_quit=
sdl_quit M:3 MAN com/sdl3dtst.b[60] sys(Sys_sdl,sdl_quit)
sdl_quit M:3 MAN sdl.b[136] sys(Sys_sdl,sdl_quit)
sdl_setalpha M:14 DEF sdl.h[274] sdl_setalpha=
sdl_setcolourkey M:12 DEF sdl.h[272] sdl_setcolourkey=
sdl_setcolourkey M:54 DEF sdl.h[323] sdl_setcolourkey=
sdl_setcolourkey M:54 MAN sdl.b[144]
    sys(Sys_sdl,sdl_setcolourkey,surfptr,col)
sdl_setvideomode M:2 DEF sdl.h[260] sdl_setvideomode=
sdl_setvideomode M:2 MAN sdl.b[86]
    ok:=sys(Sys_sdl,sdl_setvideomode,screenxsize,...)
sdl_showcursor M:51 DEF sdl.h[320] sdl_showcursor=
sdl_showcursor M:51 MAN sdl.b[398] sys(Sys_sdl,sdl_showcursor)
sdl_unlocksurface M:5 DEF sdl.h[263] sdl_unlocksurface=
sdl_updaterect M:9 DEF sdl.h[269] sdl_updaterect=
sdl_videoinfo M:25 DEF sdl.h[288] sdl_videoinfo=
sdl_waitevent M:19 DEF sdl.h[279] sdl_waitevent=
sdl_wm_setcaption M:24 DEF sdl.h[287] sdl_wm_setcaption=
sdl_wm_setcaption M:24 MAN sdl.b[128]
    sys(Sys_sdl,sdl_wm_setcaption,title,0)
sdldelay G:535 DEF sdl.h[241] sdldelay=
sdldelay G:535 LG com/sdl3dtst.b[56] sdldelay(1000)
sdldelay G:535 RT sdl.b[388] LET sdldelay(msecs)BE..
sdle_active M:1 DEF sdl.h[334] sdle_active=1
sdle_arrowdown M:274 DEF sdl.h[351] sdle_arrowdown=274
sdle_arrowleft M:276 DEF sdl.h[353] sdle_arrowleft=276
sdle_arrowright M:275 DEF sdl.h[352] sdle_arrowright=275
sdle_arrowup M:273 DEF sdl.h[350] sdle_arrowup=273
sdle_joyaxismotion M:7 DEF sdl.h[340] sdle_joyaxismotion=7
sdle_joyballmotion M:8 DEF sdl.h[341] sdle_joyballmotion=8
sdle_joybuttondown M:10 DEF sdl.h[343] sdle_joybuttondown=10
sdle_joybuttonup M:11 DEF sdl.h[344] sdle_joybuttonup=11
sdle_joyhatmotion M:9 DEF sdl.h[342] sdle_joyhatmotion=9
sdle_keydown M:2 DEF sdl.h[335] sdle_keydown=2
sdle_keyup M:3 DEF sdl.h[336] sdle_keyup=3
sdle_mousebuttondown M:5 DEF sdl.h[338] sdle_mousebuttondown=5
sdle_mousebuttonup M:6 DEF sdl.h[339] sdle_mousebuttonup=6
sdle_mousemotion M:4 DEF sdl.h[337] sdle_mousemotion=4
sdle_quit M:12 DEF sdl.h[345] sdle_quit=12
sdle_syswmevent M:13 DEF sdl.h[346] sdle_syswmevent=13
sdle_userevent M:15 DEF sdl.h[348] sdle_userevent=15
sdle_videoresize M:14 DEF sdl.h[347] sdle_videoresize=14
sdlmsecs G:536 DEF sdl.h[242] sdlmsecs=
sdlmsecs G:536 FN sdl.b[392] LET sdlmsecs()=..
sectword M:64991 DEF libhdr.h[265] sectword=64991
selectinput G:56 DEF libhdr.h[92] selectinput=56
selectoutput G:57 DEF libhdr.h[93] selectoutput=57
selectsurface G:499 DEF sdl.h[133] selectsurface=
selectsurface G:499 LG sdl.b[122] selectsurface(@screen,xsize,ysize)
selectsurface G:499 RT sdl.b[154]
    LET selectsurface(surfptr,xsize,ysize)BE..
sendpkt G:165 DEF libhdr.h[215] sendpkt=165
set_process_name G:175 DEF libhdr.h[223] set_process_name=175
setbit G:112 DEF libhdr.h[149] setbit=112
setbulk G:122 DEF libhdr.h[159] setbulk=122
setcaption G:493 DEF sdl.h[124] setcaption=
setcaption G:493 LG sdl.b[121] setcaption(title)
setcaption G:493 RT sdl.b[128] LET setcaption(title)BE..
setcolour G:495 DEF sdl.h[127] setcolour=
setcolour G:495 LG com/sdl3dtst.b[39] setcolour(col_green)
setcolour G:495 LG com/sdl3dtst.b[46] setcolour(col_red)
setcolour G:495 RT sdl.b[139] LET setcolour(col)BE..
setcolourkey G:496 DEF sdl.h[128] setcolourkey=
setcolourkey G:496 RT sdl.b[143] LET setcolourkey(surfptr,col)BE..
setflags G:156 DEF libhdr.h[207] setflags=156
setlims G:514 DEF sdl.h[176] setlims=
setlims G:514 LG sdl.b[578] setlims(x1,y1,x2,y2)
setlims G:514 LG sdl.b[579] setlims(x2,y2,x3,y3)
setlims G:514 LG sdl.b[580] setlims(x3,y3,x1,y1)
setlims G:514 RT sdl.b[496] LET setlims(x0,y0,x1,y1)BE..
setlims3d G:531 DEF sdl.h[227] setlims3d=
setlims3d G:531 LG sdl.b[704]
    setlims3d(FIX x1,FIX y1,FIX z1*zfac,FIX x2,FIX y2,...*zfac)
setlims3d G:531 LG sdl.b[706]
    setlims3d(FIX x2,FIX y2,FIX z2*zfac,FIX x3,FIX y3,...*zfac)
setlims3d G:531 LG sdl.b[708]
    setlims3d(FIX x3,FIX y3,FIX z3*zfac,FIX x1,FIX y1,...*zfac)
setlims3d G:531 RT sdl.b[602] LET setlims3d(x0,y0,sz0,x1,y1,sz1)BE..
setlogname G:117 DEF libhdr.h[154] setlogname=117
setrecordlength G:68 DEF libhdr.h[104] setrecordlength=68
setseed G:35 DEF libhdr.h[71] setseed=35
settimeout G:55 DEF libhdr.h[91] settimeout=55
settimeoutact G:124 DEF libhdr.h[161] settimeoutact=124
setvec G:181 DEF libhdr.h[228] setvec=181
showcursor G:538 DEF sdl.h[245] showcursor=
showcursor G:538 FN sdl.b[398] LET showcursor()=..
splitname G:47 DEF libhdr.h[83] splitname=47
srchwk G:150 DEF libhdr.h[201] srchwk=150
stackfree G:123 DEF libhdr.h[160] stackfree=123
stackword M:#xABCD1234 DEF libhdr.h[263] stackword=-#x5432EDCC
start G:1 DEF libhdr.h[36] start=1
start G:1 FN com/sdl3dtst.b[20] LET start()=..
startco G:23 DEF libhdr.h[59] startco=23
stepstream G:67 DEF libhdr.h[103] stepstream=67
stop G:2 DEF libhdr.h[37] stop=2
str2numb G:101 DEF libhdr.h[138] str2numb=101
string_to_dat G:111 DEF libhdr.h[148] string_to_dat=111
string_to_number G:100 DEF libhdr.h[137] string_to_number=100
sys G:3 DEF libhdr.h[38] sys=3
sys G:3 LG com/sdl3dtst.b[60] sys(Sys_sdl,sdl_quit)
sys G:3 LG sdl.b[115] sys(Sys_sdl,sdl_getsurfaceinfo,@screen,@flags)
sys G:3 LG sdl.b[126] sys(Sys_sdl,sdl_maprgb,@format,r,g,b)
sys G:3 LG sdl.b[128] sys(Sys_sdl,sdl_wm_setcaption,title,0)
sys G:3 LG sdl.b[136] sys(Sys_sdl,sdl_quit)
sys G:3 LG sdl.b[144] sys(Sys_sdl,sdl_setcolourkey,surfptr,col)
sys G:3 LG sdl.b[148] sys(Sys_sdl,sdl_mksurface,@format,w,h,surfptr)
sys G:3 LG sdl.b[152] sys(Sys_sdl,sdl_freesurface,surfptr)
sys G:3 LG sdl.b[363]
    sys(Sys_sdl,sdl_fillrect,@currsurf,x,currysize-y,1,...)
sys G:3 LG sdl.b[378]
    sys(Sys_sdl,sdl_fillrect,@currsurf,x,currysize-y,1,...)
sys G:3 LG sdl.b[385] RESULTIS sys(Sys_sdl,sdl_pollevent,@eventtype)
sys G:3 LG sdl.b[389] sys(Sys_sdl,sdl_delay,msecs)
sys G:3 LG sdl.b[392] sys(Sys_sdl,sdl_getticks)
sys G:3 LG sdl.b[396] sys(Sys_sdl,sdl_hidecursor)
sys G:3 LG sdl.b[398] sys(Sys_sdl,sdl_showcursor)
sys G:3 LG sdl.b[401] sys(Sys_sdl,sdl_flip,@screen)
sys G:3 LG sdl.b[411] sys(Sys_sdl,sdl_blitsurface,srcptr,0,dstptr,@dx)
sys G:3 LG sdl.b[420] sys(Sys_sdl,sdl_blitsurface,srcptr,0,dstptr,@dx)
sys G:3 LG sdl.b[424] sys(Sys_sdl,sdl_fillsurf,@currsurf,col)
sys G:3 LG sdl.b[45] IF sys(Sys_sdl,sdl_init,sdl_init_everything) DO ..
sys G:3 LG sdl.b[46] sys(Sys_sdl,sdl_geterror,mes)
sys G:3 LG sdl.b[760]
    sys(Sys_sdl,sdl_fillrect,@currsurf,xmin,currysize-ymax,...,...)
sys G:3 LG sdl.b[86] ok:=sys(Sys_sdl,sdl_setvideomode,screenxsize,...)
sys G:3 LG sdl.b[938]
    sys(Sys_sdl,sdl_drawfillcircle,@currsurf,x,currysize-y,radius,currcolour)
sys G:3 LG sdl.b[97] sys(Sys_sdl,sdl_geterror,mes)
sysabort G:29 DEF libhdr.h[65] sysabort=29
t_bhunk M:3000 DEF libhdr.h[259] t_bhunk=3000
t_bhunk64 M:4000 DEF libhdr.h[260] t_bhunk64=4000
t_end M:1002 DEF libhdr.h[255] t_end=1002
t_end64 M:2002 DEF libhdr.h[258] t_end64=2002
t_hunk M:1000 DEF libhdr.h[253] t_hunk=1000
t_hunk64 M:2000 DEF libhdr.h[256] t_hunk64=2000
t_reloc M:1001 DEF libhdr.h[254] t_reloc=1001
t_reloc64 M:2001 DEF libhdr.h[257] t_reloc64=2001
taskid G:152 DEF libhdr.h[203] taskid=152
taskwait G:160 DEF libhdr.h[211] taskwait=160
tcb G:151 DEF libhdr.h[202] tcb=151
tcb_a M:11 DEF libhdr.h[635] tcb_a=tcb_regs
tcb_active M:10 DEF libhdr.h[632] tcb_active=10
tcb_b M:12 DEF libhdr.h[636] tcb_b=12
tcb_c M:13 DEF libhdr.h[637] tcb_c=13
tcb_count M:18 DEF libhdr.h[642] tcb_count=18
tcb_flags M:5 DEF libhdr.h[627] tcb_flags=5
tcb_g M:15 DEF libhdr.h[639] tcb_g=15
tcb_gbase M:8 DEF libhdr.h[630] tcb_gbase=8
tcb_link M:0 DEF libhdr.h[622] tcb_link=0
tcb_namebase M:19 DEF libhdr.h[644] tcb_namebase=19
tcb_namebase M:19 MAN libhdr.h[646]
    tcb_upb=tcb_namebase+15/bytesperword+1
tcb_p M:14 DEF libhdr.h[638] tcb_p=14
tcb_pc M:17 DEF libhdr.h[641] tcb_pc=17
tcb_pri M:2 DEF libhdr.h[624] tcb_pri=2
tcb_regs M:11 DEF libhdr.h[634] tcb_regs=11
tcb_regs M:11 MAN libhdr.h[635] tcb_a=tcb_regs
tcb_sbase M:9 DEF libhdr.h[631] tcb_sbase=9
tcb_seglist M:7 DEF libhdr.h[629] tcb_seglist=7
tcb_st M:16 DEF libhdr.h[640] tcb_st=16
tcb_state M:4 DEF libhdr.h[626] tcb_state=4
tcb_stsiz M:6 DEF libhdr.h[628] tcb_stsiz=6
tcb_taskid M:1 DEF libhdr.h[623] tcb_taskid=1
tcb_upb M:23 DEF libhdr.h[646] tcb_upb=tcb_namebase+15/bytesperword+1
tcb_wkq M:3 DEF libhdr.h[625] tcb_wkq=3
tempval G:11 DEF libhdr.h[46] tempval=11
testbit G:113 DEF libhdr.h[150] testbit=113
testflags G:157 DEF libhdr.h[208] testflags=157
tg M:190 DEF libhdr.h[237] tg=190
timeoutch M:-2 DEF libhdr.h[248] timeoutch=-2
ug M:200 DEF libhdr.h[238] ug=200
unhold G:159 DEF libhdr.h[210] unhold=159
unloadseg G:106 DEF libhdr.h[143] unloadseg=106
unpackstring G:31 DEF libhdr.h[67] unpackstring=31
unrdch G:40 DEF libhdr.h[76] unrdch=40
updatescreen G:539 DEF sdl.h[246] updatescreen=
updatescreen G:539 LG com/sdl3dtst.b[53] updatescreen()
updatescreen G:539 RT sdl.b[400] LET updatescreen()BE..
wrch G:41 DEF libhdr.h[77] wrch=41
wrch G:41 LG sdl.b[437] wrch
wrch G:41 SG sdl.b[441] wrch:=drawwrch
wrch G:41 SG sdl.b[443] wrch:=oldwrch
write_ch_slice F:16 LF sdl.b[196]
    write_ch_slice(currx,curry+11-line,ch,line)
write_ch_slice F:16 RT sdl.b[200] LET write_ch_slice(x,y,ch,line)BE..
writed G:85 DEF libhdr.h[121] writed=85
writee G:180 DEF libhdr.h[227] writee=180
writef G:94 DEF libhdr.h[131] writef=94
writef G:94 LG com/sdl3dtst.b[54] writef("i=%i2  j=%i2*n",i,j)
writef G:94 LG com/sdl3dtst.b[62] writef("End of demo*n")
writef G:94 LG sdl.b[442] writef(form,a,b,c,d,e,...)
writef G:94 LG sdl.b[476] writef("drawt'i2 %i4)*n",x0,y0,sz0,x1,y1,sz1)
writef G:94 LG sdl.b[47] writef("Unabl'SDL: %s*n",mes)
writef G:94 LG sdl.b[620] writef("setli',%n,%n)*n",x0,y0,sz0,x1,y1,sz1)
writef G:94 LG sdl.b[628] writef("(%n %'%i2/%i2 ",x,y,s,smax)
writef G:94 LG sdl.b[629]
    writef("left '%i4 %i4*n",leftxv!y,leftzv!y,rightxv!y,rightzv!y)
writef G:94 LG sdl.b[645]
    writef("left 'axy=%i2*n",leftxv!y,leftzv!y,rightxv!y,rightzv!y,miny,maxy)
writef G:94 LG sdl.b[98] writef("Unabl'ode: %s*n",mes)
writef G:94 LG sdl.b[993] writef("*ngetm'ailable*n")
writeflt G:73 DEF libhdr.h[109] writeflt=73
writehex G:87 DEF libhdr.h[123] writehex=87
writen G:86 DEF libhdr.h[122] writen=86
writeoct G:88 DEF libhdr.h[124] writeoct=88
writes G:89 DEF libhdr.h[125] writes=89
writet G:90 DEF libhdr.h[126] writet=90
writeu G:91 DEF libhdr.h[127] writeu=91
writewords G:45 DEF libhdr.h[81] writewords=45
writez G:92 DEF libhdr.h[128] writez=92
zfac G:463 DEF sdl.h[70] zfac=
zfac G:463 LG com/sdl3dtst.b[41]
    drawf(170,25,"%i2, ' zfac=%n",FIX x0,FIX y0,0,...)
zfac G:463 LG com/sdl3dtst.b[48]
    drawf(170,10,"%i2, ' zfac=%n",FIX x0,...+i,i,...)
zfac G:463 LG sdl.b[347] currsz3d:=FIX z*zfac
zfac G:463 LG sdl.b[352] currsz3d:=currsz3d+FIX dz*zfac
zfac G:463 LG sdl.b[356]
    drawto3d(currx3d+FIX dx,curry3d+FIX dy,currsz3d+FIX dz*zfac)
zfac G:463 LG sdl.b[367] drawpoint3di(FIX x,FIX y,FIX z*zfac)
zfac G:463 LG sdl.b[454] drawto3di(FIX x,FIX y,FIX z*zfac)
zfac G:463 LG sdl.b[704]
    setlims3d(FIX x1,FIX y1,FIX z1*zfac,FIX x2,FIX y2,...*zfac)
zfac G:463 LG sdl.b[706]
    setlims3d(FIX x2,FIX y2,FIX z2*zfac,FIX x3,FIX y3,...*zfac)
zfac G:463 LG sdl.b[708]
    setlims3d(FIX x3,FIX y3,FIX z3*zfac,FIX x1,FIX y1,...*zfac)
zfac G:463 SG com/sdl3dtst.b[27] zfac:=128
zfac G:463 SG sdl.b[60] zfac#:= 100.000
