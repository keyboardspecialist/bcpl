Ass_dev M:4 DEF libhdr.h[756] Ass_dev=4
Ass_dir M:2 DEF libhdr.h[754] Ass_dir=2
Ass_link M:0 DEF libhdr.h[752] Ass_link=0
Ass_name M:5 DEF libhdr.h[757] Ass_name=5
Ass_task M:1 DEF libhdr.h[753] Ass_task=1
Ass_type M:3 DEF libhdr.h[755] Ass_type=3
B2Wsh M:2 DEF libhdr.h[26] B2Wsh=1+32/32
B2Wsh M:2 MAN libhdr.h[246] bytesperword=1<<B2Wsh
CloseObj M:1 DEF libhdr.h[296] CloseObj=1
Dcb_arg M:4 DEF libhdr.h[696] Dcb_arg=4
Dcb_cvp M:16 DEF libhdr.h[710] Dcb_cvp=16
Dcb_devid M:1 DEF libhdr.h[693] Dcb_devid=1
Dcb_flag M:7 DEF libhdr.h[699] Dcb_flag=7
Dcb_intson M:6 DEF libhdr.h[698] Dcb_intson=6
Dcb_irq M:5 DEF libhdr.h[697] Dcb_irq=5
Dcb_op M:3 DEF libhdr.h[695] Dcb_op=3
Dcb_threadp M:14 DEF libhdr.h[709] Dcb_threadp=14
Dcb_type M:0 DEF libhdr.h[692] Dcb_type=0
Dcb_upb M:17 DEF libhdr.h[714] Dcb_upb=17
Dcb_var0 M:8 DEF libhdr.h[703] Dcb_var0=8
Dcb_var1 M:9 DEF libhdr.h[704] Dcb_var1=9
Dcb_var2 M:10 DEF libhdr.h[705] Dcb_var2=10
Dcb_var3 M:11 DEF libhdr.h[706] Dcb_var3=11
Dcb_var4 M:12 DEF libhdr.h[707] Dcb_var4=12
Dcb_wkq M:2 DEF libhdr.h[694] Dcb_wkq=2
Devc_create M:1 DEF libhdr.h[724] Devc_create=1
Devc_destroy M:2 DEF libhdr.h[725] Devc_destroy=2
Devc_setintson M:5 DEF libhdr.h[728] Devc_setintson=5
Devc_start M:3 DEF libhdr.h[726] Devc_start=3
Devc_stop M:4 DEF libhdr.h[727] Devc_stop=4
Devt_clk M:1 DEF libhdr.h[717] Devt_clk=1
Devt_fileop M:4 DEF libhdr.h[720] Devt_fileop=4
Devt_tcpdev M:5 DEF libhdr.h[721] Devt_tcpdev=5
Devt_ttyin M:2 DEF libhdr.h[718] Devt_ttyin=2
Devt_ttyout M:3 DEF libhdr.h[719] Devt_ttyout=3
GB2312 M:-2 DEF libhdr.h[625] GB2312=-2
GB2312 M:-2 MAN com/checksyn.b[1317] encoding:=GB2312
GB2312 M:-2 MAN com/checksyn.b[1318]
    TEST encoding=GB2312 THEN .. ELSE ..
GB2312 M:-2 MAN com/checksyn.b[776] TEST encoding=GB2312 THEN .. ELSE ..
InitObj M:0 DEF libhdr.h[295] InitObj=0
ON64 M:0 DEF libhdr.h[28] ON64=32=64
State_dead M:12 DEF libhdr.h[743] State_dead=12
State_hold M:2 DEF libhdr.h[740] State_hold=2
State_int M:8 DEF libhdr.h[742] State_int=8
State_pkt M:1 DEF libhdr.h[739] State_pkt=1
State_wait M:4 DEF libhdr.h[741] State_wait=4
Sys_buttons M:56 DEF libhdr.h[467] Sys_buttons=56
Sys_callc M:59 DEF libhdr.h[470] Sys_callc=59
Sys_callnative M:53 DEF libhdr.h[464] Sys_callnative=53
Sys_close M:16 DEF libhdr.h[430] Sys_close=16
Sys_cputime M:30 DEF libhdr.h[443] Sys_cputime=30
Sys_datstamp M:44 DEF libhdr.h[455] Sys_datstamp=44
Sys_delay M:57 DEF libhdr.h[468] Sys_delay=57
Sys_deletefile M:17 DEF libhdr.h[431] Sys_deletefile=17
Sys_devcom M:43 DEF libhdr.h[454] Sys_devcom=43
Sys_dumpmem M:52 DEF libhdr.h[463] Sys_dumpmem=52
Sys_ext M:68 DEF libhdr.h[481] Sys_ext=68
Sys_filemodtime M:31 DEF libhdr.h[444] Sys_filemodtime=31
Sys_filesize M:46 DEF libhdr.h[457] Sys_filesize=46
Sys_flt M:63 DEF libhdr.h[475] Sys_flt=63
Sys_flt M:63 MAN com/checksyn.b[1139] sys(Sys_flt,fl_mul,fltval,flt10)
Sys_flt M:63 MAN com/checksyn.b[1145]
    IF sys(Sys_flt,fl_eq,x,sys(Sys_flt,...)) DO ..
Sys_flt M:63 MAN com/checksyn.b[1150] fltval:=sys(Sys_flt,fl_add,x,...)
Sys_flt M:63 MAN com/checksyn.b[1211]
    fltval:=sys(Sys_flt,fl_mul,fltval,flt10)
Sys_flt M:63 MAN com/checksyn.b[1213]
    fltval:=sys(Sys_flt,fl_div,fltval,flt10)
Sys_flt M:63 MAN com/checksyn.b[244] flt0:=sys(Sys_flt,fl_mk,0,0)
Sys_flt M:63 MAN com/checksyn.b[245] flt1:=sys(Sys_flt,fl_mk,1,0)
Sys_flt M:63 MAN com/checksyn.b[246] flt10:=sys(Sys_flt,fl_mk,10,0)
Sys_freevec M:22 DEF libhdr.h[436] Sys_freevec=22
Sys_getbuildno M:71 DEF libhdr.h[484] Sys_getbuildno=71
Sys_getpid M:51 DEF libhdr.h[462] Sys_getpid=51
Sys_getprefix M:33 DEF libhdr.h[446] Sys_getprefix=33
Sys_getsysval M:48 DEF libhdr.h[459] Sys_getsysval=48
Sys_gettrval M:62 DEF libhdr.h[474] Sys_gettrval=62
Sys_getvec M:21 DEF libhdr.h[435] Sys_getvec=21
Sys_gl M:67 DEF libhdr.h[480] Sys_gl=67
Sys_globin M:24 DEF libhdr.h[438] Sys_globin=24
Sys_graphics M:34 DEF libhdr.h[447] Sys_graphics=34
Sys_inc M:55 DEF libhdr.h[466] Sys_inc=55
Sys_incdcount M:65 DEF libhdr.h[477] Sys_incdcount=65
Sys_interpret M:7 DEF libhdr.h[422] Sys_interpret=7
Sys_intflag M:28 DEF libhdr.h[441] Sys_intflag=28
Sys_joy M:69 DEF libhdr.h[482] Sys_joy=69
Sys_loadseg M:23 DEF libhdr.h[437] Sys_loadseg=23
Sys_lockirq M:41 DEF libhdr.h[452] Sys_lockirq=41
Sys_muldiv M:26 DEF libhdr.h[440] Sys_muldiv=26
Sys_openappend M:19 DEF libhdr.h[433] Sys_openappend=19
Sys_openread M:14 DEF libhdr.h[428] Sys_openread=14
Sys_openreadwrite M:47 DEF libhdr.h[458] Sys_openreadwrite=47
Sys_openwrite M:15 DEF libhdr.h[429] Sys_openwrite=15
Sys_platform M:54 DEF libhdr.h[465] Sys_platform=54
Sys_pollsardch M:64 DEF libhdr.h[476] Sys_pollsardch=64
Sys_putsysval M:49 DEF libhdr.h[460] Sys_putsysval=49
Sys_quit M:0 DEF libhdr.h[415] Sys_quit=0
Sys_read M:12 DEF libhdr.h[426] Sys_read=12
Sys_renamefile M:18 DEF libhdr.h[432] Sys_renamefile=18
Sys_rti M:1 DEF libhdr.h[416] Sys_rti=1
Sys_sardch M:10 DEF libhdr.h[424] Sys_sardch=10
Sys_saveregs M:2 DEF libhdr.h[417] Sys_saveregs=2
Sys_sawrch M:11 DEF libhdr.h[425] Sys_sawrch=11
Sys_sdl M:66 DEF libhdr.h[479] Sys_sdl=66
Sys_seek M:38 DEF libhdr.h[449] Sys_seek=38
Sys_setcount M:-1 DEF libhdr.h[414] Sys_setcount=-1
Sys_setprefix M:32 DEF libhdr.h[445] Sys_setprefix=32
Sys_setraster M:29 DEF libhdr.h[442] Sys_setraster=29
Sys_setst M:3 DEF libhdr.h[418] Sys_setst=3
Sys_settracing M:70 DEF libhdr.h[483] Sys_settracing=70
Sys_settrcount M:61 DEF libhdr.h[473] Sys_settrcount=61
Sys_shellcom M:50 DEF libhdr.h[461] Sys_shellcom=50
Sys_sound M:58 DEF libhdr.h[469] Sys_sound=58
Sys_tally M:6 DEF libhdr.h[421] Sys_tally=6
Sys_tell M:39 DEF libhdr.h[450] Sys_tell=39
Sys_tracing M:4 DEF libhdr.h[419] Sys_tracing=4
Sys_trpush M:60 DEF libhdr.h[472] Sys_trpush=60
Sys_unloadseg M:25 DEF libhdr.h[439] Sys_unloadseg=25
Sys_unlockirq M:42 DEF libhdr.h[453] Sys_unlockirq=42
Sys_waitirq M:40 DEF libhdr.h[451] Sys_waitirq=40
Sys_watch M:5 DEF libhdr.h[420] Sys_watch=5
Sys_write M:13 DEF libhdr.h[427] Sys_write=13
Task_cli M:1 DEF libhdr.h[731] Task_cli=1
Task_consolehandler M:3 DEF libhdr.h[733] Task_consolehandler=3
Task_debug M:2 DEF libhdr.h[732] Task_debug=2
Task_filehandler M:4 DEF libhdr.h[734] Task_filehandler=4
Task_mbxhandler M:5 DEF libhdr.h[735] Task_mbxhandler=5
Task_tcphandler M:6 DEF libhdr.h[736] Task_tcphandler=6
UTF8 M:-1 DEF libhdr.h[624] UTF8=-1
UTF8 M:-1 MAN com/checksyn.b[1316] encoding:=UTF8
UTF8 M:-1 MAN com/checksyn.b[307] defaultencoding:=UTF8
abort G:28 DEF libhdr.h[66] abort=28
abort G:28 LG com/checksyn.b[1463] abort(999)
abort G:28 LG com/checksyn.b[1899] abort(1000)
abort G:28 LG com/checksyn.b[1953] abort(1000)
abort G:28 LG com/checksyn.b[236] abort(999)
abort G:28 LG com/checksyn.b[2868] abort(999)
abort G:28 LG com/checksyn.b[298] abort(1000)
abort G:28 LG com/checksyn.b[321] abort(999)
abort G:28 LG com/checksyn.b[361] abort(999)
again F:614 LAB com/checksyn.b[1969] again:rdsections()
again F:614 LF com/checksyn.b[1982] GOTO again
again F:614 LF com/checksyn.b[1986] GOTO again
appendstream G:66 DEF libhdr.h[104] appendstream=66
bestindex G:320 DEF com/checksyn.b[142] bestindex=
besttokenq G:319 DEF com/checksyn.b[140] besttokenq=
bigender G:225 DEF bcplfecg.h[194] bigender=
bigender G:225 LG com/checksyn.b[782] TEST bigender THEN .. ELSE ..
bigender G:225 SG com/checksyn.b[266] bigender:=(!"AAAAAAA"&255)~=7
bining G:231 DEF bcplfecg.h[200] bining=
binrdch G:39 DEF libhdr.h[77] binrdch=39
binwrch G:42 DEF libhdr.h[80] binwrch=42
bitsperbyte M:8 DEF libhdr.h[247] bitsperbyte=8
bitsperbyte M:8 MAN libhdr.h[248] bitsperword=bitsperbyte*bytesperword
bitsperword M:32 DEF libhdr.h[248] bitsperword=bitsperbyte*bytesperword
bitsperword M:32 MAN libhdr.h[250] minint=1<<bitsperword-1
bld_CYGWIN M:43 DEF libhdr.h[522] bld_CYGWIN=43
bld_MacOSX M:31 DEF libhdr.h[514] bld_MacOSX=31
bld_MacOSXSDL M:32 DEF libhdr.h[515] bld_MacOSXSDL=32
bld_MacOSXSDL2 M:33 DEF libhdr.h[516] bld_MacOSXSDL2=33
bld_MacOSXSDL2GL M:35 DEF libhdr.h[518] bld_MacOSXSDL2GL=35
bld_MacOSXSDLGL M:34 DEF libhdr.h[517] bld_MacOSXSDLGL=34
bld_Raspi M:21 DEF libhdr.h[508] bld_Raspi=21
bld_RaspiSDL M:22 DEF libhdr.h[509] bld_RaspiSDL=22
bld_RaspiSDL2 M:23 DEF libhdr.h[510] bld_RaspiSDL2=23
bld_RaspiSDL2GL M:25 DEF libhdr.h[512] bld_RaspiSDL2GL=25
bld_RaspiSDLGL M:24 DEF libhdr.h[511] bld_RaspiSDLGL=24
bld_VmsVax M:41 DEF libhdr.h[520] bld_VmsVax=41
bld_Win32 M:42 DEF libhdr.h[521] bld_Win32=42
bld_linux M:1 DEF libhdr.h[501] bld_linux=1
bld_linuxGL M:4 DEF libhdr.h[504] bld_linuxGL=4
bld_linuxSDL M:2 DEF libhdr.h[502] bld_linuxSDL=2
bld_linuxSDL2 M:3 DEF libhdr.h[503] bld_linuxSDL2=3
bld_linuxSDL2GL M:6 DEF libhdr.h[506] bld_linuxSDL2GL=6
bld_linuxSDLGL M:5 DEF libhdr.h[505] bld_linuxSDLGL=5
bld_unknown M:0 DEF libhdr.h[500] bld_unknown=0
bldf_callc M:2 DEF libhdr.h[527] bldf_callc=1<<1
bldf_joystick M:4 DEF libhdr.h[528] bldf_joystick=1<<2
bldf_sound M:1 DEF libhdr.h[526] bldf_sound=1
bootregs M:11 DEF libhdr.h[488] bootregs=11
bracketdepth G:358 DEF com/checksyn.b[182] bracketdepth=
bracketdepth G:358 LG com/checksyn.b[1595] bracketdepth:=bracketdepth+1
bracketdepth G:358 LG com/checksyn.b[1596]
    brackettokv!bracketdepth:=token
bracketdepth G:358 LG com/checksyn.b[1597]
    bracketvalv!bracketdepth:=sectiontag
bracketdepth G:358 LG com/checksyn.b[1598]
    bracketposv!bracketdepth:=tokenp-t_size
bracketdepth G:358 LG com/checksyn.b[1604] IF bracketdepth=0 DO ..
bracketdepth G:358 LG com/checksyn.b[1606]
    IF brackettokv!bracketdepth=s_lparen DO ..
bracketdepth G:358 LG com/checksyn.b[1609] bracketdepth:=bracketdepth-1
bracketdepth G:358 LG com/checksyn.b[1612]
    IF brackettokv!bracketdepth=s_sbra DO ..
bracketdepth G:358 LG com/checksyn.b[1615] bracketdepth:=bracketdepth-1
bracketdepth G:358 LG com/checksyn.b[1625] IF bracketdepth=0 DO ..
bracketdepth G:358 LG com/checksyn.b[1649] bracketvalv!bracketdepth
bracketdepth G:358 LG com/checksyn.b[1653] bracketdepth:=bracketdepth-1
bracketdepth G:358 LG com/checksyn.b[1662] bracketdepth:=bracketdepth-1
bracketdepth G:358 LG com/checksyn.b[1670] bracketvalv!bracketdepth
bracketdepth G:358 LG com/checksyn.b[1671] FOR i=1 TO bracketdepth DO..
bracketdepth G:358 LG com/checksyn.b[1684] bracketdepth:=bracketdepth-1
bracketdepth G:358 LG com/checksyn.b[1690] bracketdepth:=bracketdepth-1
bracketdepth G:358 LG com/checksyn.b[1703] bracketdepth:=bracketdepth-1
bracketdepth G:358 LG com/checksyn.b[1718] bracketdepth:=bracketdepth+1
bracketdepth G:358 LG com/checksyn.b[1719]
    brackettokv!bracketdepth:=token
bracketdepth G:358 LG com/checksyn.b[1720] bracketvalv!bracketdepth:=0
bracketdepth G:358 LG com/checksyn.b[1721]
    bracketposv!bracketdepth:=tokenp
bracketdepth G:358 LG com/checksyn.b[1727]
    UNLESS bracketdepth&brackettokv!bracketdepth=s_lparen DO ..
bracketdepth G:358 LG com/checksyn.b[1730] bracketdepth:=bracketdepth-1
bracketdepth G:358 LG com/checksyn.b[1735] bracketdepth:=bracketdepth+1
bracketdepth G:358 LG com/checksyn.b[1736]
    brackettokv!bracketdepth:=token
bracketdepth G:358 LG com/checksyn.b[1737] bracketvalv!bracketdepth:=0
bracketdepth G:358 LG com/checksyn.b[1738]
    bracketposv!bracketdepth:=tokenp
bracketdepth G:358 LG com/checksyn.b[1742]
    UNLESS bracketdepth&bracketvalv!bracketdepth=s_lparen DO ..
bracketdepth G:358 LG com/checksyn.b[1745] bracketdepth:=bracketdepth-1
bracketdepth G:358 LG com/checksyn.b[1753] pushtok(token,bracketdepth)
bracketdepth G:358 LG com/checksyn.b[3261]
    writef("*nCurr'epth=%n ",bracketdepth)
bracketdepth G:358 LG com/checksyn.b[3262] FOR i=1 TO bracketdepth DO..
bracketdepth G:358 SG com/checksyn.b[1531] bracketdepth:=0
bracketdepth G:358 SG com/checksyn.b[1595] bracketdepth:=bracketdepth+1
bracketdepth G:358 SG com/checksyn.b[1609] bracketdepth:=bracketdepth-1
bracketdepth G:358 SG com/checksyn.b[1615] bracketdepth:=bracketdepth-1
bracketdepth G:358 SG com/checksyn.b[1653] bracketdepth:=bracketdepth-1
bracketdepth G:358 SG com/checksyn.b[1662] bracketdepth:=bracketdepth-1
bracketdepth G:358 SG com/checksyn.b[1684] bracketdepth:=bracketdepth-1
bracketdepth G:358 SG com/checksyn.b[1690] bracketdepth:=bracketdepth-1
bracketdepth G:358 SG com/checksyn.b[1703] bracketdepth:=bracketdepth-1
bracketdepth G:358 SG com/checksyn.b[1718] bracketdepth:=bracketdepth+1
bracketdepth G:358 SG com/checksyn.b[1730] bracketdepth:=bracketdepth-1
bracketdepth G:358 SG com/checksyn.b[1735] bracketdepth:=bracketdepth+1
bracketdepth G:358 SG com/checksyn.b[1745] bracketdepth:=bracketdepth-1
bracketdepth G:358 SG com/checksyn.b[1977] bracketdepth:=0
bracketposv G:357 DEF com/checksyn.b[179] bracketposv=
bracketposv G:357 LG com/checksyn.b[1598]
    bracketposv!bracketdepth:=tokenp-t_size
bracketposv G:357 LG com/checksyn.b[1721]
    bracketposv!bracketdepth:=tokenp
bracketposv G:357 LG com/checksyn.b[1738]
    bracketposv!bracketdepth:=tokenp
bracketposv G:357 SG com/checksyn.b[1530] bracketposv:=v3
brackettokv G:355 DEF com/checksyn.b[177] brackettokv=
brackettokv G:355 LG com/checksyn.b[1596]
    brackettokv!bracketdepth:=token
brackettokv G:355 LG com/checksyn.b[1606]
    IF brackettokv!bracketdepth=s_lparen DO ..
brackettokv G:355 LG com/checksyn.b[1612]
    IF brackettokv!bracketdepth=s_sbra DO ..
brackettokv G:355 LG com/checksyn.b[1672]
    IF brackettokv!i=s_lsect&bracketvalv!i=sectiontag DO ..
brackettokv G:355 LG com/checksyn.b[1719]
    brackettokv!bracketdepth:=token
brackettokv G:355 LG com/checksyn.b[1727]
    UNLESS bracketdepth&brackettokv!bracketdepth=s_lparen DO ..
brackettokv G:355 LG com/checksyn.b[1736]
    brackettokv!bracketdepth:=token
brackettokv G:355 LG com/checksyn.b[3263]
    writef("%n: tok=%n ",i,brackettokv!i)
brackettokv G:355 LG com/checksyn.b[3264] SWITCHON brackettokv!i INTO..
brackettokv G:355 SG com/checksyn.b[1528] brackettokv:=v1
bracketvalv G:356 DEF com/checksyn.b[178] bracketvalv=
bracketvalv G:356 LG com/checksyn.b[1597]
    bracketvalv!bracketdepth:=sectiontag
bracketvalv G:356 LG com/checksyn.b[1649] bracketvalv!bracketdepth
bracketvalv G:356 LG com/checksyn.b[1670] bracketvalv!bracketdepth
bracketvalv G:356 LG com/checksyn.b[1672]
    IF brackettokv!i=s_lsect&bracketvalv!i=sectiontag DO ..
bracketvalv G:356 LG com/checksyn.b[1720] bracketvalv!bracketdepth:=0
bracketvalv G:356 LG com/checksyn.b[1737] bracketvalv!bracketdepth:=0
bracketvalv G:356 LG com/checksyn.b[1742]
    UNLESS bracketdepth&bracketvalv!bracketdepth=s_lparen DO ..
bracketvalv G:356 LG com/checksyn.b[3268] bracketvalv!i
bracketvalv G:356 SG com/checksyn.b[1529] bracketvalv:=v2
bytesperword M:4 DEF libhdr.h[246] bytesperword=1<<B2Wsh
bytesperword M:4 MAN com/checksyn.b[1089] getvec(len/bytesperword+1)
bytesperword M:4 MAN com/checksyn.b[1537]
    charv:=newvec(256/bytesperword+1)
bytesperword M:4 MAN com/checksyn.b[312]
    chbuf:=newvec(64/bytesperword+1)
bytesperword M:4 MAN com/checksyn.b[860]
    wordnode:=newvec(len/bytesperword+2)
bytesperword M:4 MAN com/checksyn.b[911]
    wordnode:=newvec(len/bytesperword+2)
bytesperword M:4 MAN libhdr.h[248] bitsperword=bitsperbyte*bytesperword
bytesperword M:4 MAN libhdr.h[249] mcaddrinc=bytesperword
bytesperword M:4 MAN libhdr.h[574]
    scb_nameeend=scb_name+scb_maxnamelen/bytesperword
bytesperword M:4 MAN libhdr.h[689]
    tcb_upb=tcb_namebase+15/bytesperword+1
c64 M:0 DEF bcplfecg.h[23] c64=32=64
c_backspace M:8 DEF com/checksyn.b[191] c_backspace=8
c_backspace M:8 MAN com/checksyn.b[1298] k:=c_backspace
c_escape M:27 DEF com/checksyn.b[196] c_escape=27
c_escape M:27 MAN com/checksyn.b[1297] k:=c_escape
c_newline M:10 DEF com/checksyn.b[193] c_newline=10
c_newline M:10 MAN com/checksyn.b[1296] k:=c_newline
c_newpage M:12 DEF com/checksyn.b[194] c_newpage=12
c_newpage M:12 MAN com/checksyn.b[1299] k:=c_newpage
c_return M:13 DEF com/checksyn.b[195] c_return=13
c_return M:13 MAN com/checksyn.b[1300] k:=c_return
c_space M:32 DEF com/checksyn.b[197] c_space=32
c_space M:32 MAN com/checksyn.b[1295] k:=c_space
c_tab M:9 DEF com/checksyn.b[192] c_tab=9
c_tab M:9 MAN com/checksyn.b[1294] k:=c_tab
callco G:19 DEF libhdr.h[57] callco=19
callseg G:107 DEF libhdr.h[146] callseg=107
capitalch G:96 DEF libhdr.h[135] capitalch=96
catstr F:309 FN com/checksyn.b[1036] LET catstr(s1,s2)=..
cgg M:420 DEF bcplfecg.h[31] cgg=trng+90
ch G:268 DEF com/checksyn.b[53] ch=
ch G:268 LG com/checksyn.b[1001] chbuf%(chcount&63):=ch
ch G:268 LG com/checksyn.b[1020] IF ch=46 DO ..
ch G:268 LG com/checksyn.b[1026]
    UNLESS 97<=ch&ch<=122|65<=ch&ch<=90|48<=ch&ch<=57|ch=46|ch=95 DO ..
ch G:268 LG com/checksyn.b[1029] charv%len:=ch
ch G:268 LG com/checksyn.b[1100] node!3:=ch
ch G:268 LG com/checksyn.b[1128] UNLESS 48<=ch&ch<=57 DO ..
ch G:268 LG com/checksyn.b[1130] WHILE 48<=ch&ch<=57|ch=95|ch=46 DO ..
ch G:268 LG com/checksyn.b[1134] SWITCHON ch INTO..
ch G:268 LG com/checksyn.b[1143] decval:=10*decval+ch-48
ch G:268 LG com/checksyn.b[1150] fltval:=sys(Sys_flt,fl_add,x,...)
ch G:268 LG com/checksyn.b[1179] IF ch=101|ch=69 DO ..
ch G:268 LG com/checksyn.b[1183] IF ch=45 DO ..
ch G:268 LG com/checksyn.b[1184] WHILE 48<=ch&ch<=57|ch=95 DO ..
ch G:268 LG com/checksyn.b[1185] UNLESS ch=95 DO ..
ch G:268 LG com/checksyn.b[1185] exponent:=10*exponent+ch-48
ch G:268 LG com/checksyn.b[1227] UNLESS ch=95 DO ..
ch G:268 LG com/checksyn.b[1228] value(ch)
ch G:268 LG com/checksyn.b[1248] ch
ch G:268 LG com/checksyn.b[1257] k:=ch
ch G:268 LG com/checksyn.b[1269]
    WHILE ch=10|ch=13|ch=12|ch=32|ch=9 DO ..
ch G:268 LG com/checksyn.b[1270] IF ch=10 DO ..
ch G:268 LG com/checksyn.b[1274] IF ch=47 DO ..
ch G:268 LG com/checksyn.b[1276] IF ch=47 DO ..
ch G:268 LG com/checksyn.b[1278]
    .. REPEATUNTIL ch=10|ch=12|ch=endstreamch
ch G:268 LG com/checksyn.b[1286] IF ch=42 DO ..
ch G:268 LG com/checksyn.b[1288] lexerr("Bad s't, ch=%n",ch)
ch G:268 LG com/checksyn.b[1316] IF ch=117|ch=85 DO ..
ch G:268 LG com/checksyn.b[1317] IF ch=103|ch=71 DO ..
ch G:268 LG com/checksyn.b[1323] IF ch=35 DO ..
ch G:268 LG com/checksyn.b[456] SWITCHON ch INTO..
ch G:268 LG com/checksyn.b[461] IF ch=endstreamch DO ..
ch G:268 LG com/checksyn.b[463] lexerr("Illeg'cter %x2",ch)
ch G:268 LG com/checksyn.b[474] .. REPEATWHILE ch=32
ch G:268 LG com/checksyn.b[497] token:=lookupword(rdtag(ch))
ch G:268 LG com/checksyn.b[524] IF ch=36|ch=60|ch=62|ch=126 DO ..
ch G:268 LG com/checksyn.b[526] ch
ch G:268 LG com/checksyn.b[568] IF ch=40 DO ..
ch G:268 LG com/checksyn.b[574] IF ch=41 DO ..
ch G:268 LG com/checksyn.b[590] IF 48<=ch&ch<=55 DO ..
ch G:268 LG com/checksyn.b[594] IF ch=98|ch=66 DO ..
ch G:268 LG com/checksyn.b[599] IF ch=111|ch=79 DO ..
ch G:268 LG com/checksyn.b[604] IF ch=120|ch=88 DO ..
ch G:268 LG com/checksyn.b[609] IF ch=40 DO ..
ch G:268 LG com/checksyn.b[613] UNLESS ch<32 DO ..
ch G:268 LG com/checksyn.b[660] IF ch=62 DO ..
ch G:268 LG com/checksyn.b[665] IF ch=46 DO ..
ch G:268 LG com/checksyn.b[672] UNLESS ch=58 DO ..
ch G:268 LG com/checksyn.b[674] UNLESS ch=61 DO ..
ch G:268 LG com/checksyn.b[690] IF ch=47 DO ..
ch G:268 LG com/checksyn.b[691] .. REPEATUNTIL ch=10|ch=endstreamch
ch G:268 LG com/checksyn.b[697] IF ch=42 DO ..
ch G:268 LG com/checksyn.b[701] IF ch=42 DO ..
ch G:268 LG com/checksyn.b[702] .. REPEATWHILE ch=42
ch G:268 LG com/checksyn.b[703] IF ch=47 DO ..
ch G:268 LG com/checksyn.b[705] IF ch=47 DO ..
ch G:268 LG com/checksyn.b[707] IF ch=42 DO ..
ch G:268 LG com/checksyn.b[709] IF ch=10 DO ..
ch G:268 LG com/checksyn.b[710] IF ch=endstreamch DO ..
ch G:268 LG com/checksyn.b[722] IF ch=61 DO ..
ch G:268 LG com/checksyn.b[732] IF ch=61 DO ..
ch G:268 LG com/checksyn.b[737] IF ch=61 DO ..
ch G:268 LG com/checksyn.b[738] IF ch=60 DO ..
ch G:268 LG com/checksyn.b[742] IF ch=62 DO ..
ch G:268 LG com/checksyn.b[747] IF ch=61 DO ..
ch G:268 LG com/checksyn.b[748] IF ch=62 DO ..
ch G:268 LG com/checksyn.b[756] IF ch=62 DO ..
ch G:268 LG com/checksyn.b[761] IF ch=61 DO ..
ch G:268 LG com/checksyn.b[762] IF ch=58 DO ..
ch G:268 LG com/checksyn.b[771] UNTIL ch=34 DO ..
ch G:268 LG com/checksyn.b[872] UNLESS ch=39 DO ..
ch G:268 SG com/checksyn.b[338] ch:=0
ch G:268 SG com/checksyn.b[464] ch:=32
ch G:268 SG com/checksyn.b[581] ch:=32
ch G:268 SG com/checksyn.b[881] ch:=h4!getstreams
ch G:268 SG com/checksyn.b[999] ch:=rdch()
changeco G:6 DEF libhdr.h[43] changeco=6
changepri G:155 DEF libhdr.h[208] changepri=155
charv G:267 DEF com/checksyn.b[53] charv=
charv G:267 LG com/checksyn.b[1016] charv%1:=ch1
charv G:267 LG com/checksyn.b[1029] charv%len:=ch
charv G:267 LG com/checksyn.b[1032] charv%0:=len
charv G:267 LG com/checksyn.b[1033] RESULTIS charv
charv G:267 LG com/checksyn.b[1055] len:=charv%0
charv G:267 LG com/checksyn.b[1058]
    UNLESS len>=2&charv%(len-1)=46&(charv%len=104|charv%len=98) DO ..
charv G:267 LG com/checksyn.b[1061] charv%(len-1):=46
charv G:267 LG com/checksyn.b[1061] charv%0:=len
charv G:267 LG com/checksyn.b[1061] charv%len:=104
charv G:267 LG com/checksyn.b[1065] FOR i=1 TO charv%0 DO..
charv G:267 LG com/checksyn.b[1065] IF charv%i=58 DO ..
charv G:267 LG com/checksyn.b[1065] charv%i:=47
charv G:267 LG com/checksyn.b[1069] stream:=pathfindinput(charv,0)
charv G:267 LG com/checksyn.b[1075] stream:=pathfindinput(charv,hdrs)
charv G:267 LG com/checksyn.b[1078] lexerr("Unabl' file %s",charv)
charv G:267 LG com/checksyn.b[1087] charv%0
charv G:267 LG com/checksyn.b[1096] str%i:=charv%i
charv G:267 LG com/checksyn.b[1538] charv%0:=0
charv G:267 LG com/checksyn.b[783] charv%(len+1):=hi
charv G:267 LG com/checksyn.b[784] charv%(len+2):=lo
charv G:267 LG com/checksyn.b[786] charv%(len+1):=lo
charv G:267 LG com/checksyn.b[787] charv%(len+2):=hi
charv G:267 LG com/checksyn.b[793] charv%(len+1):=code
charv G:267 LG com/checksyn.b[800] charv%(len+1):=code
charv G:267 LG com/checksyn.b[806] charv%(len+1):=192+(code>>6)
charv G:267 LG com/checksyn.b[807] charv%(len+2):=128+(code&63)
charv G:267 LG com/checksyn.b[813] charv%(len+1):=224+(code>>12)
charv G:267 LG com/checksyn.b[814] charv%(len+2):=128+(code>>6&63)
charv G:267 LG com/checksyn.b[815] charv%(len+3):=128+(code&63)
charv G:267 LG com/checksyn.b[821] charv%(len+1):=240+(code>>18)
charv G:267 LG com/checksyn.b[822] charv%(len+2):=128+(code>>12&63)
charv G:267 LG com/checksyn.b[823] charv%(len+3):=128+(code>>6&63)
charv G:267 LG com/checksyn.b[824] charv%(len+4):=128+(code&63)
charv G:267 LG com/checksyn.b[830] charv%(len+1):=248+(code>>24)
charv G:267 LG com/checksyn.b[831] charv%(len+2):=128+(code>>18&63)
charv G:267 LG com/checksyn.b[832] charv%(len+3):=128+(code>>12&63)
charv G:267 LG com/checksyn.b[833] charv%(len+4):=128+(code>>6&63)
charv G:267 LG com/checksyn.b[834] charv%(len+5):=128+(code&63)
charv G:267 LG com/checksyn.b[840] charv%(len+1):=252+(code>>30)
charv G:267 LG com/checksyn.b[841] charv%(len+2):=128+(code>>24&63)
charv G:267 LG com/checksyn.b[842] charv%(len+3):=128+(code>>18&63)
charv G:267 LG com/checksyn.b[843] charv%(len+4):=128+(code>>12&63)
charv G:267 LG com/checksyn.b[844] charv%(len+5):=128+(code>>6&63)
charv G:267 LG com/checksyn.b[845] charv%(len+6):=128+(code&63)
charv G:267 LG com/checksyn.b[855] charv%len:=code
charv G:267 LG com/checksyn.b[859] charv%0:=len
charv G:267 LG com/checksyn.b[862] @h2!wordnode%i:=charv%i
charv G:267 SG com/checksyn.b[1537] charv:=newvec(256/bytesperword+1)
chbuf G:266 DEF com/checksyn.b[53] chbuf=
chbuf G:266 LG com/checksyn.b[1001] chbuf%(chcount&63):=ch
chbuf G:266 LG com/checksyn.b[1007] chbuf%(p&63)
chbuf G:266 LG com/checksyn.b[313] chbuf%i:=0
chbuf G:266 SG com/checksyn.b[312] chbuf:=newvec(64/bytesperword+1)
chcount G:298 DEF com/checksyn.b[80] chcount=
chcount G:298 LG com/checksyn.b[1000] chcount:=chcount+1
chcount G:298 LG com/checksyn.b[1001] chbuf%(chcount&63):=ch
chcount G:298 LG com/checksyn.b[1006] FOR p=chcount-63 TO chcount DO..
chcount G:298 SG com/checksyn.b[1000] chcount:=chcount+1
chcount G:298 SG com/checksyn.b[314] chcount:=0
chkass F:60 LAB com/checksyn.b[672] chkass:UNLESS ch=58 DO ..
chkass F:60 LF com/checksyn.b[513] GOTO chkass
chkass F:60 LF com/checksyn.b[514] GOTO chkass
chkass F:60 LF com/checksyn.b[515] GOTO chkass
chkass F:60 LF com/checksyn.b[516] GOTO chkass
chkass F:60 LF com/checksyn.b[517] GOTO chkass
chkass F:60 LF com/checksyn.b[518] GOTO chkass
chkass F:60 LF com/checksyn.b[519] GOTO chkass
chkass F:60 LF com/checksyn.b[718] GOTO chkass
chkass F:60 LF com/checksyn.b[758] GOTO chkass
chkassx F:61 LAB com/checksyn.b[671] chkassx:rch()
chkassx F:61 LF com/checksyn.b[678] GOTO chkassx
chkassx F:61 LF com/checksyn.b[679] GOTO chkassx
chkassx F:61 LF com/checksyn.b[680] GOTO chkassx
chkassx F:61 LF com/checksyn.b[681] GOTO chkassx
chkassx F:61 LF com/checksyn.b[682] GOTO chkassx
chkassx F:61 LF com/checksyn.b[740] GOTO chkassx
chkassx F:61 LF com/checksyn.b[750] GOTO chkassx
cis G:12 DEF libhdr.h[50] cis=12
clear_words G:115 DEF libhdr.h[154] clear_words=115
cli_commanddir G:136 DEF libhdr.h[178] cli_commanddir=136
cli_commandfile G:143 DEF libhdr.h[189] cli_commandfile=143
cli_commandname G:138 DEF libhdr.h[184] cli_commandname=138
cli_currentinput G:142 DEF libhdr.h[188] cli_currentinput=142
cli_currentoutput G:146 DEF libhdr.h[195] cli_currentoutput=146
cli_data G:135 DEF libhdr.h[177] cli_data=135
cli_defaultstack G:147 DEF libhdr.h[196] cli_defaultstack=147
cli_faillevel G:139 DEF libhdr.h[185] cli_faillevel=139
cli_init G:133 DEF libhdr.h[175] cli_init=133
cli_initialfaillevel M:10 DEF libhdr.h[633]
    cli_initialfaillevel=return_hard
cli_initialstack M:50000 DEF libhdr.h[632] cli_initialstack=50000
cli_module G:149 DEF libhdr.h[198] cli_module=149
cli_module_gn M:149 DEF libhdr.h[631] cli_module_gn=149
cli_preloadlist G:145 DEF libhdr.h[194] cli_preloadlist=145
cli_prompt G:140 DEF libhdr.h[186] cli_prompt=140
cli_result2 G:134 DEF libhdr.h[176] cli_result2=134
cli_returncode G:137 DEF libhdr.h[179] cli_returncode=137
cli_standardinput G:141 DEF libhdr.h[187] cli_standardinput=141
cli_standardoutput G:148 DEF libhdr.h[197] cli_standardoutput=148
cli_status G:144 DEF libhdr.h[191] cli_status=144
cli_tallyflag G:132 DEF libhdr.h[174] cli_tallyflag=132
clibit_comcom M:4 DEF libhdr.h[638] clibit_comcom=4
clibit_endcli M:256 DEF libhdr.h[644] clibit_endcli=256
clibit_eofdel M:2 DEF libhdr.h[637] clibit_eofdel=2
clibit_maincli M:8 DEF libhdr.h[639] clibit_maincli=8
clibit_mbxcli M:64 DEF libhdr.h[642] clibit_mbxcli=64
clibit_newcli M:16 DEF libhdr.h[640] clibit_newcli=16
clibit_noprompt M:1 DEF libhdr.h[636] clibit_noprompt=1
clibit_runcli M:32 DEF libhdr.h[641] clibit_runcli=32
clibit_tcpcli M:128 DEF libhdr.h[643] clibit_tcpcli=128
clihook G:4 DEF libhdr.h[41] clihook=4
cliregs M:21 DEF libhdr.h[489] cliregs=21
co_c M:5 DEF libhdr.h[293] co_c=
co_fn M:3 DEF libhdr.h[291] co_fn=
co_list M:2 DEF libhdr.h[290] co_list=
co_parent M:1 DEF libhdr.h[289] co_parent=
co_pptr M:0 DEF libhdr.h[288] co_pptr=0
co_size M:4 DEF libhdr.h[292] co_size=
codegenerate G:224 DEF bcplfecg.h[192] codegenerate=
codewrch G:126 DEF libhdr.h[165] codewrch=126
colist G:8 DEF libhdr.h[45] colist=8
compch G:97 DEF libhdr.h[136] compch=97
compstring G:98 DEF libhdr.h[137] compstring=98
consoletask G:171 DEF libhdr.h[221] consoletask=171
copy_bytes G:116 DEF libhdr.h[155] copy_bytes=116
copy_words G:114 DEF libhdr.h[153] copy_words=114
copydir G:79 DEF libhdr.h[117] copydir=79
copyobj G:75 DEF libhdr.h[113] copyobj=75
copystring G:99 DEF libhdr.h[138] copystring=99
cos G:13 DEF libhdr.h[51] cos=13
cowait G:20 DEF libhdr.h[58] cowait=20
createco G:17 DEF libhdr.h[55] createco=17
createdev G:172 DEF libhdr.h[222] createdev=172
createdir G:82 DEF libhdr.h[120] createdir=82
createtask G:153 DEF libhdr.h[206] createtask=153
currco G:7 DEF libhdr.h[44] currco=7
current_language G:190 DEF libhdr.h[237] current_language=190
currentdir G:14 DEF libhdr.h[52] currentdir=14
cv2flt G:213 DEF bcplfecg.h[183] cv2flt=
dat_to_strings G:110 DEF libhdr.h[149] dat_to_strings=110
datstamp G:109 DEF libhdr.h[148] datstamp=109
datstring G:108 DEF libhdr.h[147] datstring=108
deadcode M:#xDEADC0DE DEF libhdr.h[270] deadcode=-#x21523F22
debug G:227 DEF bcplfecg.h[196] debug=
debug G:227 LG com/checksyn.b[1691] IF debug DO ..
debug G:227 LG com/checksyn.b[383] IF debug DO ..
debug G:227 SG com/checksyn.b[293] debug:=argv!4
declsyswords G:290 DEF com/checksyn.b[72] declsyswords=
declsyswords G:290 LG com/checksyn.b[1542] declsyswords()
declsyswords G:290 RT com/checksyn.b[922] LET declsyswords()BE..
decval G:274 DEF com/checksyn.b[64] decval=
decval G:274 LG com/checksyn.b[1143] decval:=10*decval+ch-48
decval G:274 LG com/checksyn.b[1583] pushtok(token,decval)
decval G:274 SG com/checksyn.b[1125] decval:=0
decval G:274 SG com/checksyn.b[1143] decval:=10*decval+ch-48
decval G:274 SG com/checksyn.b[1544] decval:=0
decval G:274 SG com/checksyn.b[336] decval:=0
decval G:274 SG com/checksyn.b[507] decval:=wordbitlen
decval G:274 SG com/checksyn.b[591] decval:=readnumber(8,100)
decval G:274 SG com/checksyn.b[596] decval:=readnumber(2,100)
decval G:274 SG com/checksyn.b[601] decval:=readnumber(8,100)
decval G:274 SG com/checksyn.b[606] decval:=readnumber(16,100)
decval G:274 SG com/checksyn.b[870] decval:=rdstrch()
default_hdrs F:10 FN com/checksyn.b[210] LET default_hdrs()=..
default_hdrs F:10 LF com/checksyn.b[290] hdrs:=default_hdrs()
defaultencoding G:245 DEF bcplfecg.h[216] defaultencoding=
defaultencoding G:245 LG com/checksyn.b[308] encoding:=defaultencoding
defaultencoding G:245 LG com/checksyn.b[769] encoding:=defaultencoding
defaultencoding G:245 LG com/checksyn.b[869] encoding:=defaultencoding
defaultencoding G:245 SG com/checksyn.b[307] defaultencoding:=UTF8
delay G:128 DEF libhdr.h[167] delay=128
delayuntil G:129 DEF libhdr.h[168] delayuntil=129
deleteco G:18 DEF libhdr.h[56] deleteco=18
deletedev G:173 DEF libhdr.h[223] deletedev=173
deletefile G:76 DEF libhdr.h[114] deletefile=76
deleteself G:125 DEF libhdr.h[164] deleteself=125
deletetask G:154 DEF libhdr.h[207] deletetask=154
deplete G:43 DEF libhdr.h[81] deplete=43
dsw G:289 DEF com/checksyn.b[72] dsw=
dsw G:289 LG com/checksyn.b[923] dsw("AND",s_and)
dsw G:289 LG com/checksyn.b[924] dsw("ABS",s_abs)
dsw G:289 LG com/checksyn.b[925] dsw("BE",s_be)
dsw G:289 LG com/checksyn.b[926] dsw("BITSP'BCPLWORD",s_bitsperbcplword)
dsw G:289 LG com/checksyn.b[927] dsw("BREAK",s_break)
dsw G:289 LG com/checksyn.b[928] dsw("BY",s_by)
dsw G:289 LG com/checksyn.b[929] dsw("CASE",s_case)
dsw G:289 LG com/checksyn.b[930] dsw("DO",s_do)
dsw G:289 LG com/checksyn.b[931] dsw("DEFAULT",s_default)
dsw G:289 LG com/checksyn.b[932] dsw("EQ",s_eq)
dsw G:289 LG com/checksyn.b[933] dsw("EQV",s_eqv)
dsw G:289 LG com/checksyn.b[934] dsw("ELSE",s_else)
dsw G:289 LG com/checksyn.b[935] dsw("ENDCASE",s_endcase)
dsw G:289 LG com/checksyn.b[936] dsw("EVERY",s_every)
dsw G:289 LG com/checksyn.b[937] dsw("EXIT",s_exit)
dsw G:289 LG com/checksyn.b[938] dsw("FALSE",s_false)
dsw G:289 LG com/checksyn.b[939] dsw("FINISH",s_finish)
dsw G:289 LG com/checksyn.b[940] dsw("FIX",s_fix)
dsw G:289 LG com/checksyn.b[941] dsw("FLOAT",s_float)
dsw G:289 LG com/checksyn.b[942] dsw("FLT",s_flt)
dsw G:289 LG com/checksyn.b[943] dsw("FOR",s_for)
dsw G:289 LG com/checksyn.b[944] dsw("GOTO",s_goto)
dsw G:289 LG com/checksyn.b[945] dsw("GE",s_ge)
dsw G:289 LG com/checksyn.b[946] dsw("GR",s_gr)
dsw G:289 LG com/checksyn.b[947] dsw("GLOBAL",s_global)
dsw G:289 LG com/checksyn.b[948] dsw("GET",s_get)
dsw G:289 LG com/checksyn.b[949] dsw("IF",s_if)
dsw G:289 LG com/checksyn.b[950] dsw("INTO",s_into)
dsw G:289 LG com/checksyn.b[951] dsw("LET",s_let)
dsw G:289 LG com/checksyn.b[952] dsw("LV",s_lv)
dsw G:289 LG com/checksyn.b[953] dsw("LE",s_le)
dsw G:289 LG com/checksyn.b[954] dsw("LS",s_ls)
dsw G:289 LG com/checksyn.b[955] dsw("LOGOR",s_logor)
dsw G:289 LG com/checksyn.b[956] dsw("LOGAND",s_logand)
dsw G:289 LG com/checksyn.b[957] dsw("LOOP",s_loop)
dsw G:289 LG com/checksyn.b[958] dsw("LSHIFT",s_lshift)
dsw G:289 LG com/checksyn.b[959] dsw("MANIFEST",s_manifest)
dsw G:289 LG com/checksyn.b[960] dsw("MATCH",s_match)
dsw G:289 LG com/checksyn.b[961] dsw("MOD",s_mod)
dsw G:289 LG com/checksyn.b[962] dsw("NE",s_ne)
dsw G:289 LG com/checksyn.b[963] dsw("NEEDS",s_needs)
dsw G:289 LG com/checksyn.b[964] dsw("NEQV",s_xor)
dsw G:289 LG com/checksyn.b[965] dsw("NEXT",s_next)
dsw G:289 LG com/checksyn.b[966] dsw("NOT",s_not)
dsw G:289 LG com/checksyn.b[967] dsw("OF",s_of)
dsw G:289 LG com/checksyn.b[968] dsw("OR",s_else)
dsw G:289 LG com/checksyn.b[969] dsw("RESULTIS",s_resultis)
dsw G:289 LG com/checksyn.b[970] dsw("RETURN",s_return)
dsw G:289 LG com/checksyn.b[971] dsw("REM",s_mod)
dsw G:289 LG com/checksyn.b[972] dsw("RSHIFT",s_rshift)
dsw G:289 LG com/checksyn.b[973] dsw("RV",s_rv)
dsw G:289 LG com/checksyn.b[974] dsw("REPEAT",s_repeat)
dsw G:289 LG com/checksyn.b[975] dsw("REPEATWHILE",s_repeatwhile)
dsw G:289 LG com/checksyn.b[976] dsw("REPEATUNTIL",s_repeatuntil)
dsw G:289 LG com/checksyn.b[977] dsw("SECTION",s_section)
dsw G:289 LG com/checksyn.b[978] dsw("SKIP",s_skip)
dsw G:289 LG com/checksyn.b[979] dsw("SLCT",s_slct)
dsw G:289 LG com/checksyn.b[980] dsw("STATIC",s_static)
dsw G:289 LG com/checksyn.b[981] dsw("SWITCHON",s_switchon)
dsw G:289 LG com/checksyn.b[982] dsw("TO",s_to)
dsw G:289 LG com/checksyn.b[983] dsw("TEST",s_test)
dsw G:289 LG com/checksyn.b[984] dsw("TRUE",s_true)
dsw G:289 LG com/checksyn.b[985] dsw("THEN",s_do)
dsw G:289 LG com/checksyn.b[986] dsw("TABLE",s_table)
dsw G:289 LG com/checksyn.b[987] dsw("UNLESS",s_unless)
dsw G:289 LG com/checksyn.b[988] dsw("UNTIL",s_until)
dsw G:289 LG com/checksyn.b[989] dsw("VEC",s_vec)
dsw G:289 LG com/checksyn.b[990] dsw("VALOF",s_valof)
dsw G:289 LG com/checksyn.b[991] dsw("WHILE",s_while)
dsw G:289 LG com/checksyn.b[992] dsw("XOR",s_xor)
dsw G:289 LG com/checksyn.b[993] dsw("$",0)
dsw G:289 RT com/checksyn.b[920] LET dsw(word,sym)BE..
eclass G:292 DEF com/checksyn.b[75] eclass=
eclass G:292 LG com/checksyn.b[2513] IF eclass=2 DO ..
eclass G:292 LG com/checksyn.b[2518] IF eclass=1 DO ..
eclass G:292 LG com/checksyn.b[2529] writef("eclass=%n*n",eclass)
eclass G:292 SG com/checksyn.b[2494] eclass:=0
eclass G:292 SG com/checksyn.b[2647] eclass:=0
eclass G:292 SG com/checksyn.b[2652] eclass:=1
eclass G:292 SG com/checksyn.b[2662] eclass:=0
eclass G:292 SG com/checksyn.b[2669] eclass:=0
eclass G:292 SG com/checksyn.b[2679] eclass:=0
eclass G:292 SG com/checksyn.b[2686] eclass:=0
eclass G:292 SG com/checksyn.b[2695] eclass:=0
eclass G:292 SG com/checksyn.b[2705] eclass:=0
eclass G:292 SG com/checksyn.b[2710] eclass:=0
eclass G:292 SG com/checksyn.b[2715] eclass:=0
eclass G:292 SG com/checksyn.b[2729] eclass:=0
eclass G:292 SG com/checksyn.b[2734] eclass:=0
eclass G:292 SG com/checksyn.b[2780] eclass:=2
eclass G:292 SG com/checksyn.b[2800] eclass:=2
eclass G:292 SG com/checksyn.b[2808] eclass:=0
eclass G:292 SG com/checksyn.b[2832] eclass:=0
eclass G:292 SG com/checksyn.b[2850] eclass:=0
eclass G:292 SG com/checksyn.b[2861] eclass:=0
encoding G:244 DEF bcplfecg.h[215] encoding=
encoding G:244 LG com/checksyn.b[1318]
    TEST encoding=GB2312 THEN .. ELSE ..
encoding G:244 LG com/checksyn.b[776]
    TEST encoding=GB2312 THEN .. ELSE ..
encoding G:244 SG com/checksyn.b[1316] encoding:=UTF8
encoding G:244 SG com/checksyn.b[1317] encoding:=GB2312
encoding G:244 SG com/checksyn.b[308] encoding:=defaultencoding
encoding G:244 SG com/checksyn.b[769] encoding:=defaultencoding
encoding G:244 SG com/checksyn.b[869] encoding:=defaultencoding
endread G:60 DEF libhdr.h[98] endread=60
endread G:60 LG com/checksyn.b[880] endread()
endstr F:59 LAB com/checksyn.b[875] endstr:IF getstreams DO ..
endstr F:59 LF com/checksyn.b[461] GOTO endstr
endstream G:62 DEF libhdr.h[100] endstream=62
endstream G:62 LG com/checksyn.b[439] endstream(sourcestream)
endstream G:62 LG com/checksyn.b[440] endstream(sysprint)
endstreamch M:-1 DEF libhdr.h[253] endstreamch=-1
endstreamch M:-1 MAN com/checksyn.b[1278]
    .. REPEATUNTIL ch=10|ch=12|ch=endstreamch
endstreamch M:-1 MAN com/checksyn.b[461] IF ch=endstreamch DO ..
endstreamch M:-1 MAN com/checksyn.b[691]
    .. REPEATUNTIL ch=10|ch=endstreamch
endstreamch M:-1 MAN com/checksyn.b[710] IF ch=endstreamch DO ..
endtask G:162 DEF libhdr.h[215] endtask=162
endwrite G:61 DEF libhdr.h[99] endwrite=61
entryword M:57311 DEF libhdr.h[272] entryword=57311
eqcases G:228 DEF bcplfecg.h[197] eqcases=
eqlookupword G:294 DEF com/checksyn.b[79] eqlookupword=
err F:16 LAB com/checksyn.b[420] err:IF getstreams DO ..
err F:16 LF com/checksyn.b[362] GOTO err
errcount G:246 DEF bcplfecg.h[218] errcount=
errcount G:246 LG com/checksyn.b[1663] errcount:=errcount+1
errcount G:246 LG com/checksyn.b[1900] errcount:=errcount+1
errcount G:246 LG com/checksyn.b[1901] IF errcount>errmax DO ..
errcount G:246 LG com/checksyn.b[1947] errcount:=errcount+1
errcount G:246 LG com/checksyn.b[1954] IF errcount>errmax DO ..
errcount G:246 LG com/checksyn.b[416] TEST errcount=0 THEN .. ELSE ..
errcount G:246 LG com/checksyn.b[418] writef("%n er'\ found*n",errcount)
errcount G:246 SG com/checksyn.b[1663] errcount:=errcount+1
errcount G:246 SG com/checksyn.b[1900] errcount:=errcount+1
errcount G:246 SG com/checksyn.b[1947] errcount:=errcount+1
errcount G:246 SG com/checksyn.b[242] errcount:=0
errcount G:246 SG com/checksyn.b[262] errcount:=1
errcount G:246 SG com/checksyn.b[281] errcount:=1
errcount G:246 SG com/checksyn.b[299] errcount:=1
errcount G:246 SG com/checksyn.b[322] errcount:=1
errmax G:247 DEF bcplfecg.h[218] errmax=
errmax G:247 LG com/checksyn.b[1901] IF errcount>errmax DO ..
errmax G:247 LG com/checksyn.b[1954] IF errcount>errmax DO ..
errmax G:247 SG com/checksyn.b[1350] errmax:=0
errmax G:247 SG com/checksyn.b[241] errmax:=10
exponent G:276 DEF com/checksyn.b[64] exponent=
exponent G:276 LG com/checksyn.b[1185] exponent:=10*exponent+ch-48
exponent G:276 LG com/checksyn.b[1188] exponent:=-exponent
exponent G:276 LG com/checksyn.b[1203]
    exponent:=exponent+pointpos-sigpos
exponent G:276 LG com/checksyn.b[1205]
    UNLESS -127<=exponent&exponent<=127 DO ..
exponent G:276 LG com/checksyn.b[1209] TEST exponent>=0 THEN .. ELSE ..
exponent G:276 LG com/checksyn.b[1210] FOR i=1 TO exponent DO..
exponent G:276 LG com/checksyn.b[1212] FOR i=-1 TO exponent BY -1 DO..
exponent G:276 SG com/checksyn.b[1125] exponent:=0
exponent G:276 SG com/checksyn.b[1185] exponent:=10*exponent+ch-48
exponent G:276 SG com/checksyn.b[1188] exponent:=-exponent
exponent G:276 SG com/checksyn.b[1203]
    exponent:=exponent+pointpos-sigpos
fault G:182 DEF libhdr.h[233] fault=182
feg M:260 DEF bcplfecg.h[29] feg=intg+60
feg M:260 MAN bcplfecg.h[30] trng=feg+70
feg M:260 MAN com/checksyn.b[46] stdin=feg
fin F:18 LAB com/checksyn.b[413] fin:newline()
fin F:18 LF com/checksyn.b[232] fin_l:=fin
fin F:18 LF com/checksyn.b[263] GOTO fin
fin F:18 LF com/checksyn.b[282] GOTO fin
fin F:18 LF com/checksyn.b[300] GOTO fin
fin F:18 LF com/checksyn.b[323] GOTO fin
fin_l G:203 DEF bcplfecg.h[173] fin_l=
fin_l G:203 LG com/checksyn.b[1903] longjump(fin_p,fin_l)
fin_l G:203 LG com/checksyn.b[1956] longjump(fin_p,fin_l)
fin_l G:203 SG com/checksyn.b[232] fin_l:=fin
fin_p G:202 DEF bcplfecg.h[173] fin_p=
fin_p G:202 LG com/checksyn.b[1903] longjump(fin_p,fin_l)
fin_p G:202 LG com/checksyn.b[1956] longjump(fin_p,fin_l)
fin_p G:202 SG com/checksyn.b[232] fin_p:=level()
findappend G:130 DEF libhdr.h[169] findappend=130
findarg G:104 DEF libhdr.h[143] findarg=104
findinoutput G:50 DEF libhdr.h[88] findinoutput=50
findinput G:48 DEF libhdr.h[86] findinput=48
findinput G:48 LG com/checksyn.b[295]
    sourcestream:=findinput(fromfilename)
findoutput G:49 DEF libhdr.h[87] findoutput=49
findstream G:52 DEF libhdr.h[90] findstream=52
findupdate G:51 DEF libhdr.h[89] findupdate=51
fl_64to32 M:45 DEF libhdr.h[620] fl_64to32=
fl_F2N M:42 DEF libhdr.h[617] fl_F2N=
fl_N2F M:41 DEF libhdr.h[616] fl_N2F=
fl_abs M:5 DEF libhdr.h[587] fl_abs=
fl_acos M:20 DEF libhdr.h[592] fl_acos=20
fl_add M:9 DEF libhdr.h[589] fl_add=
fl_add M:9 MAN com/checksyn.b[1145]
    IF sys(Sys_flt,fl_eq,x,sys(Sys_flt,...)) DO ..
fl_add M:9 MAN com/checksyn.b[1150] fltval:=sys(Sys_flt,fl_add,x,...)
fl_asin M:21 DEF libhdr.h[593] fl_asin=
fl_atan M:22 DEF libhdr.h[594] fl_atan=
fl_atan2 M:23 DEF libhdr.h[595] fl_atan2=
fl_avail M:0 DEF libhdr.h[585] fl_avail=0
fl_ceil M:38 DEF libhdr.h[610] fl_ceil=
fl_cos M:24 DEF libhdr.h[596] fl_cos=
fl_cosh M:27 DEF libhdr.h[599] fl_cosh=
fl_div M:7 DEF libhdr.h[588] fl_div=
fl_div M:7 MAN com/checksyn.b[1213]
    fltval:=sys(Sys_flt,fl_div,fltval,flt10)
fl_eq M:13 DEF libhdr.h[590] fl_eq=
fl_eq M:13 MAN com/checksyn.b[1145]
    IF sys(Sys_flt,fl_eq,x,sys(Sys_flt,...)) DO ..
fl_exp M:30 DEF libhdr.h[602] fl_exp=
fl_fix M:4 DEF libhdr.h[587] fl_fix=
fl_float M:3 DEF libhdr.h[587] fl_float=
fl_float M:3 MAN com/checksyn.b[1150] fltval:=sys(Sys_flt,fl_add,x,...)
fl_floor M:39 DEF libhdr.h[611] fl_floor=
fl_frexp M:31 DEF libhdr.h[603] fl_frexp=
fl_ge M:18 DEF libhdr.h[590] fl_ge=
fl_gr M:16 DEF libhdr.h[590] fl_gr=
fl_ldexp M:32 DEF libhdr.h[604] fl_ldexp=
fl_le M:17 DEF libhdr.h[590] fl_le=
fl_log M:33 DEF libhdr.h[605] fl_log=
fl_log10 M:34 DEF libhdr.h[606] fl_log10=
fl_ls M:15 DEF libhdr.h[590] fl_ls=
fl_mk M:1 DEF libhdr.h[586] fl_mk=
fl_mk M:1 MAN com/checksyn.b[244] flt0:=sys(Sys_flt,fl_mk,0,0)
fl_mk M:1 MAN com/checksyn.b[245] flt1:=sys(Sys_flt,fl_mk,1,0)
fl_mk M:1 MAN com/checksyn.b[246] flt10:=sys(Sys_flt,fl_mk,10,0)
fl_mod M:8 DEF libhdr.h[588] fl_mod=
fl_modf M:40 DEF libhdr.h[612] fl_modf=
fl_mul M:6 DEF libhdr.h[588] fl_mul=
fl_mul M:6 MAN com/checksyn.b[1139] sys(Sys_flt,fl_mul,fltval,flt10)
fl_mul M:6 MAN com/checksyn.b[1211]
    fltval:=sys(Sys_flt,fl_mul,fltval,flt10)
fl_ne M:14 DEF libhdr.h[590] fl_ne=
fl_neg M:12 DEF libhdr.h[589] fl_neg=
fl_pos M:11 DEF libhdr.h[589] fl_pos=
fl_pow M:36 DEF libhdr.h[608] fl_pow=36
fl_radius2 M:43 DEF libhdr.h[618] fl_radius2=
fl_radius3 M:44 DEF libhdr.h[619] fl_radius3=
fl_sin M:25 DEF libhdr.h[597] fl_sin=
fl_sinh M:28 DEF libhdr.h[600] fl_sinh=
fl_sqrt M:37 DEF libhdr.h[609] fl_sqrt=
fl_sub M:10 DEF libhdr.h[589] fl_sub=
fl_tan M:26 DEF libhdr.h[598] fl_tan=
fl_tanh M:29 DEF libhdr.h[601] fl_tanh=
fl_unmk M:2 DEF libhdr.h[586] fl_unmk=
flag_a M:1 DEF libhdr.h[745] flag_a=1<<0
flag_b M:2 DEF libhdr.h[746] flag_b=1<<1
flag_c M:4 DEF libhdr.h[747] flag_c=1<<2
flag_d M:8 DEF libhdr.h[748] flag_d=1<<3
flag_e M:16 DEF libhdr.h[749] flag_e=1<<4
flopname G:211 DEF bcplfecg.h[181] flopname=
flt0 G:252 DEF bcplfecg.h[226] flt0=
flt0 G:252 LG com/checksyn.b[1125] fltval:=flt0
flt0 G:252 LG com/checksyn.b[336] fltval:=flt0
flt0 G:252 SG com/checksyn.b[244] flt0:=sys(Sys_flt,fl_mk,0,0)
flt1 G:253 DEF bcplfecg.h[227] flt1=
flt1 G:253 LG com/checksyn.b[1145]
    IF sys(Sys_flt,fl_eq,x,sys(Sys_flt,...)) DO ..
flt1 G:253 SG com/checksyn.b[245] flt1:=sys(Sys_flt,fl_mk,1,0)
flt10 G:254 DEF bcplfecg.h[228] flt10=
flt10 G:254 LG com/checksyn.b[1139] sys(Sys_flt,fl_mul,fltval,flt10)
flt10 G:254 LG com/checksyn.b[1211]
    fltval:=sys(Sys_flt,fl_mul,fltval,flt10)
flt10 G:254 LG com/checksyn.b[1213]
    fltval:=sys(Sys_flt,fl_div,fltval,flt10)
flt10 G:254 SG com/checksyn.b[246] flt10:=sys(Sys_flt,fl_mk,10,0)
fltval G:275 DEF com/checksyn.b[64] fltval=
fltval G:275 LG com/checksyn.b[1139] sys(Sys_flt,fl_mul,fltval,flt10)
fltval G:275 LG com/checksyn.b[1211]
    fltval:=sys(Sys_flt,fl_mul,fltval,flt10)
fltval G:275 LG com/checksyn.b[1213]
    fltval:=sys(Sys_flt,fl_div,fltval,flt10)
fltval G:275 LG com/checksyn.b[1590] pushtok(token,fltval)
fltval G:275 SG com/checksyn.b[1125] fltval:=flt0
fltval G:275 SG com/checksyn.b[1150] fltval:=sys(Sys_flt,fl_add,x,...)
fltval G:275 SG com/checksyn.b[1211]
    fltval:=sys(Sys_flt,fl_mul,fltval,flt10)
fltval G:275 SG com/checksyn.b[1213]
    fltval:=sys(Sys_flt,fl_div,fltval,flt10)
fltval G:275 SG com/checksyn.b[336] fltval:=flt0
freeobj G:78 DEF libhdr.h[116] freeobj=78
freevec G:27 DEF libhdr.h[65] freevec=27
freevec G:27 LG com/checksyn.b[1092] freevec(node)
freevec G:27 LG com/checksyn.b[1093] freevec(str)
freevec G:27 LG com/checksyn.b[423] freevec(p)
freevec G:27 LG com/checksyn.b[429] freevec(str)
freevec G:27 LG com/checksyn.b[433] freevec(sourcenamev)
freevec G:27 LG com/checksyn.b[435] freevec(spacev)
freevec G:27 LG com/checksyn.b[438] freevec(tokenv)
freevec G:27 LG com/checksyn.b[885] freevec(p)
fromfilename G:265 DEF com/checksyn.b[50] fromfilename=
fromfilename G:265 LG com/checksyn.b[295]
    sourcestream:=findinput(fromfilename)
fromfilename G:265 LG com/checksyn.b[297]
    writef("Troub'file %s*n",fromfilename)
fromfilename G:265 LG com/checksyn.b[327] sourcenamev!0:=fromfilename
fromfilename G:265 SG com/checksyn.b[271] fromfilename:=argv!0
g_bdrawbase M:450 DEF libhdr.h[760] g_bdrawbase=450
g_colist M:8 DEF libhdr.h[278] g_colist=8
g_currco M:7 DEF libhdr.h[277] g_currco=7
g_extbase M:950 DEF libhdr.h[764] g_extbase=950
g_glbase M:450 DEF libhdr.h[762] g_glbase=450
g_globsize M:0 DEF libhdr.h[275] g_globsize=0
g_grbase M:450 DEF libhdr.h[759] g_grbase=450
g_keyboard M:20 DEF libhdr.h[283] g_keyboard=20
g_memsize M:14 DEF libhdr.h[282] g_memsize=14
g_result2 M:10 DEF libhdr.h[280] g_result2=10
g_rootnode M:9 DEF libhdr.h[279] g_rootnode=9
g_screen M:21 DEF libhdr.h[284] g_screen=21
g_sdlbase M:450 DEF libhdr.h[761] g_sdlbase=450
g_sndbase M:450 DEF libhdr.h[763] g_sndbase=450
g_sys M:3 DEF libhdr.h[276] g_sys=3
gdefsing G:233 DEF bcplfecg.h[202] gdefsing=
get_record G:71 DEF libhdr.h[109] get_record=71
get_text G:93 DEF libhdr.h[132] get_text=93
get_textblib G:93 DEF libhdr.h[131] get_textblib=93
getlogname G:118 DEF libhdr.h[157] getlogname=118
getremipaddr G:54 DEF libhdr.h[92] getremipaddr=54
getstreams G:278 DEF com/checksyn.b[67] getstreams=
getstreams G:278 LG com/checksyn.b[1100] node!0:=getstreams
getstreams G:278 LG com/checksyn.b[421] IF getstreams DO ..
getstreams G:278 LG com/checksyn.b[421] getstreams
getstreams G:278 LG com/checksyn.b[667] UNLESS getstreams DO ..
getstreams G:278 LG com/checksyn.b[877] IF getstreams DO ..
getstreams G:278 LG com/checksyn.b[879] getstreams
getstreams G:278 LG com/checksyn.b[881] ch:=h4!getstreams
getstreams G:278 LG com/checksyn.b[882] lineno:=h3!getstreams
getstreams G:278 LG com/checksyn.b[883] sourcestream:=h2!getstreams
getstreams G:278 LG com/checksyn.b[884] getstreams:=h1!getstreams
getstreams G:278 SG com/checksyn.b[1101] getstreams:=node
getstreams G:278 SG com/checksyn.b[250] getstreams:=0
getstreams G:278 SG com/checksyn.b[422] getstreams:=!p
getstreams G:278 SG com/checksyn.b[884] getstreams:=h1!getstreams
getvec G:25 DEF libhdr.h[63] getvec=25
getvec G:25 LG com/checksyn.b[1088] getvec(3)
getvec G:25 LG com/checksyn.b[1089] getvec(len/bytesperword+1)
getvec G:25 LG com/checksyn.b[277] spacev:=getvec(spacevupb)
getvec G:25 LG com/checksyn.b[318] sourcenamev:=getvec(sourcenamevupb)
getword G:32 DEF libhdr.h[70] getword=32
glob0 G:0 DEF libhdr.h[36] glob0=0
globin G:24 DEF libhdr.h[62] globin=24
globsize G:0 DEF libhdr.h[37] globsize=0
globword M:#x8F8F0000 DEF libhdr.h[268] globword=-#x70710000
gostream G:251 DEF bcplfecg.h[220] gostream=
h1 M:0 DEF bcplfecg.h[34] h1=0
h1 M:0 MAN com/checksyn.b[1373] mk3list:=h1!mk3list
h1 M:0 MAN com/checksyn.b[1380] h1!p:=mk3list
h1 M:0 MAN com/checksyn.b[1386] mk4list:=h1!mk4list
h1 M:0 MAN com/checksyn.b[1393] h1!p:=mk4list
h1 M:0 MAN com/checksyn.b[547] h1!wordnode:=token=s_true->s_false,s_true
h1 M:0 MAN com/checksyn.b[861] h1!wordnode:=s_string
h1 M:0 MAN com/checksyn.b[884] getstreams:=h1!getstreams
h1 M:0 MAN com/checksyn.b[912] h1!wordnode:=s_name
h1 M:0 MAN com/checksyn.b[917] RESULTIS h1!wordnode
h1 M:0 MAN com/checksyn.b[920] h1!wordnode:=sym
h2 M:1 DEF bcplfecg.h[34] h2=
h2 M:1 MAN com/checksyn.b[1758] @h2!wordnode
h2 M:1 MAN com/checksyn.b[862] @h2!wordnode%i:=charv%i
h2 M:1 MAN com/checksyn.b[883] sourcestream:=h2!getstreams
h2 M:1 MAN com/checksyn.b[908] wordnode:=h2!wordnode
h2 M:1 MAN com/checksyn.b[912] h2!wordnode:=nametable!hashval
h3 M:2 DEF bcplfecg.h[34] h3=
h3 M:2 MAN com/checksyn.b[1576] pushtok(token,@h3!wordnode)
h3 M:2 MAN com/checksyn.b[882] lineno:=h3!getstreams
h3 M:2 MAN com/checksyn.b[906]
    TEST @h3!wordnode%i=word%i THEN .. ELSE ..
h3 M:2 MAN com/checksyn.b[913] @h3!wordnode%i:=word%i
h4 M:3 DEF bcplfecg.h[34] h4=
h4 M:3 MAN com/checksyn.b[881] ch:=h4!getstreams
h5 M:4 DEF bcplfecg.h[34] h5=
h6 M:5 DEF bcplfecg.h[34] h6=
h7 M:6 DEF bcplfecg.h[34] h7=
hard G:234 DEF bcplfecg.h[203] hard=
hard G:234 LG com/checksyn.b[1899] IF hard DO ..
hard G:234 LG com/checksyn.b[1953] IF hard DO ..
hard G:234 LG com/checksyn.b[298] IF hard DO ..
hard G:234 SG com/checksyn.b[309] hard:=FALSE
hdrs G:279 DEF com/checksyn.b[68] hdrs=
hdrs G:279 LG com/checksyn.b[1075] stream:=pathfindinput(charv,hdrs)
hdrs G:279 SG com/checksyn.b[290] hdrs:=default_hdrs()
hdrs G:279 SG com/checksyn.b[292] hdrs:=argv!3
hold G:158 DEF libhdr.h[211] hold=158
id_appendscb M:132 DEF libhdr.h[534] id_appendscb=132
id_inoutscb M:131 DEF libhdr.h[533] id_inoutscb=131
id_inscb M:129 DEF libhdr.h[531] id_inscb=129
id_outscb M:130 DEF libhdr.h[532] id_outscb=130
incerrcount F:479 LF com/checksyn.b[1708] incerrcount()
incerrcount F:479 LF com/checksyn.b[1881] incerrcount()
incerrcount F:479 LF com/checksyn.b[1895] incerrcount()
incerrcount F:479 LF com/checksyn.b[2645] incerrcount()
incerrcount F:479 RT com/checksyn.b[1898] LET incerrcount()BE..
initco G:22 DEF libhdr.h[60] initco=22
initio G:46 DEF libhdr.h[84] initio=46
input G:58 DEF libhdr.h[96] input=58
input G:58 LG com/checksyn.b[229] stdin:=input()
instrcount G:121 DEF libhdr.h[160] instrcount=121
intflag G:119 DEF libhdr.h[158] intflag=119
intg M:200 DEF bcplfecg.h[27] intg=ug
intg M:200 MAN bcplfecg.h[172] nametable=intg
intg M:200 MAN bcplfecg.h[29] feg=intg+60
isassop F:494 FN com/checksyn.b[2551] LET isassop(tok)=..
isassop F:494 LF com/checksyn.b[2501] UNLESS isassop(token) DO ..
isassop F:494 LF com/checksyn.b[2507] IF isassop(token) DO ..
iscomstart F:495 FN com/checksyn.b[2567] LET iscomstart(tok)=..
iscomstart F:495 LF com/checksyn.b[2525] IF iscomstart(token) DO ..
iscomstart F:495 LF com/checksyn.b[2538] IF iscomstart(token) DO ..
iscomstart F:495 LF com/checksyn.b[2546] IF iscomstart(token) DO ..
isrregs M:41 DEF libhdr.h[495] isrregs=41
klibregs M:21 DEF libhdr.h[490] klibregs=21
lastintglobal G:256 DEF bcplfecg.h[232] lastintglobal=
level G:15 DEF libhdr.h[53] level=15
level G:15 LG com/checksyn.b[1967] rec_p:=level()
level G:15 LG com/checksyn.b[231] rec_p:=level()
level G:15 LG com/checksyn.b[232] fin_p:=level()
lex G:288 DEF com/checksyn.b[72] lex=
lex G:288 LG com/checksyn.b[1053] lex()
lex G:288 LG com/checksyn.b[1555] lex()
lex G:288 LG com/checksyn.b[563] lex()
lex G:288 LG com/checksyn.b[615] lex()
lex G:288 RT com/checksyn.b[448] LET lex()BE..
lexerr G:342 DEF com/checksyn.b[167] lexerr=
lexerr G:342 LG com/checksyn.b[1054] lexerr("Bad G'irective")
lexerr G:342 LG com/checksyn.b[1078] lexerr("Unabl' file %s",charv)
lexerr G:342 LG com/checksyn.b[1083] lexerr("Too m'ET files")
lexerr G:342 LG com/checksyn.b[1094] lexerr("getve'rformget")
lexerr G:342 LG com/checksyn.b[1128] lexerr("Bad number")
lexerr G:342 LG com/checksyn.b[1164] lexerr("Two d'a number")
lexerr G:342 LG com/checksyn.b[1206] lexerr("Float'of range")
lexerr G:342 LG com/checksyn.b[1236] lexerr("Bad number")
lexerr G:342 LG com/checksyn.b[1252] lexerr("Unesc'haracter")
lexerr G:342 LG com/checksyn.b[1288] lexerr("Bad s't, ch=%n",ch)
lexerr G:342 LG com/checksyn.b[1336] lexerr("Bad s'constant")
lexerr G:342 LG com/checksyn.b[1351] lexerr("More 'e needed")
lexerr G:342 LG com/checksyn.b[1607] lexerr("Inser' bracket")
lexerr G:342 LG com/checksyn.b[1613] lexerr("Inser' bracket")
lexerr G:342 LG com/checksyn.b[1626] lexerr("Delet' bracket")
lexerr G:342 LG com/checksyn.b[1728] lexerr("Mismatched ')'")
lexerr G:342 LG com/checksyn.b[1743] lexerr("Mismatched ']'")
lexerr G:342 LG com/checksyn.b[463] lexerr("Illeg'cter %x2",ch)
lexerr G:342 LG com/checksyn.b[580] lexerr("'$' o' context")
lexerr G:342 LG com/checksyn.b[645] lexerr("'#' o' context")
lexerr G:342 LG com/checksyn.b[668] lexerr("A sec'ET files")
lexerr G:342 LG com/checksyn.b[674] lexerr("Bad a'operator")
lexerr G:342 LG com/checksyn.b[710] lexerr("Missing '**/'")
lexerr G:342 LG com/checksyn.b[781] lexerr("Bad s'constant")
lexerr G:342 LG com/checksyn.b[792] lexerr("Bad s'constant")
lexerr G:342 LG com/checksyn.b[799] lexerr("Bad s'constant")
lexerr G:342 LG com/checksyn.b[805] lexerr("Bad s'constant")
lexerr G:342 LG com/checksyn.b[812] lexerr("Bad s'constant")
lexerr G:342 LG com/checksyn.b[820] lexerr("Bad s'constant")
lexerr G:342 LG com/checksyn.b[829] lexerr("Bad s'constant")
lexerr G:342 LG com/checksyn.b[839] lexerr("Bad s'constant")
lexerr G:342 LG com/checksyn.b[849] lexerr("Bad U'haracter")
lexerr G:342 LG com/checksyn.b[853] lexerr("Bad s'constant")
lexerr G:342 LG com/checksyn.b[872] lexerr("Bad c'constant")
lexerr G:342 RT com/checksyn.b[1875] LET lexerr(mess,a,b,c)BE..
lineno G:299 DEF com/checksyn.b[80] lineno=
lineno G:299 LG com/checksyn.b[1100] node!2:=lineno
lineno G:299 LG com/checksyn.b[1251] lineno:=lineno+1
lineno G:299 LG com/checksyn.b[1271] lineno:=lineno+1
lineno G:299 LG com/checksyn.b[1424] lineno
lineno G:299 LG com/checksyn.b[1439] nlpending:=prevlineno~=lineno
lineno G:299 LG com/checksyn.b[1455] nlpending:=prevlineno~=lineno
lineno G:299 LG com/checksyn.b[1506] sxpushval(tokensxv,lineno)
lineno G:299 LG com/checksyn.b[1520] lineno>>20
lineno G:299 LG com/checksyn.b[1521] lineno&#x0FFFFF
lineno G:299 LG com/checksyn.b[1557] fno:=lineno>>20
lineno G:299 LG com/checksyn.b[1557] ln:=lineno&#x0FFFFF
lineno G:299 LG com/checksyn.b[1657] prlineno(lineno)
lineno G:299 LG com/checksyn.b[1692] prlineno(lineno)
lineno G:299 LG com/checksyn.b[1704] prlineno(lineno)
lineno G:299 LG com/checksyn.b[1787] lineno&#x0FFFFF
lineno G:299 LG com/checksyn.b[1788] lineno>>20
lineno G:299 LG com/checksyn.b[1795] ln:=lineno&#x0FFFFF
lineno G:299 LG com/checksyn.b[1796] fno:=lineno>>20
lineno G:299 LG com/checksyn.b[1868] lineno>>20
lineno G:299 LG com/checksyn.b[1869] lineno&#x0FFFFF
lineno G:299 LG com/checksyn.b[1877] prlineno(lineno)
lineno G:299 LG com/checksyn.b[2640] prlineno(lineno)
lineno G:299 LG com/checksyn.b[468] lineno:=lineno+1
lineno G:299 LG com/checksyn.b[709] lineno:=lineno+1
lineno G:299 SG com/checksyn.b[1105] lineno:=(sourcefileno<<20)+1
lineno G:299 SG com/checksyn.b[1251] lineno:=lineno+1
lineno G:299 SG com/checksyn.b[1271] lineno:=lineno+1
lineno G:299 SG com/checksyn.b[1437] lineno:=t_lno!p
lineno G:299 SG com/checksyn.b[1451] lineno:=t_lno!p
lineno G:299 SG com/checksyn.b[331] lineno:=sourcefileno<<20|1
lineno G:299 SG com/checksyn.b[391] lineno:=1
lineno G:299 SG com/checksyn.b[405] lineno:=1
lineno G:299 SG com/checksyn.b[468] lineno:=lineno+1
lineno G:299 SG com/checksyn.b[709] lineno:=lineno+1
lineno G:299 SG com/checksyn.b[882] lineno:=h3!getstreams
listfilename G:209 DEF bcplfecg.h[177] listfilename=
loadseg G:105 DEF libhdr.h[144] loadseg=105
localdef F:636 LAB com/checksyn.b[2144] localdef:..;..
localdef F:636 LF com/checksyn.b[2121] GOTO localdef
locatedir G:80 DEF libhdr.h[118] locatedir=80
locateobj G:81 DEF libhdr.h[119] locateobj=81
longjump G:16 DEF libhdr.h[54] longjump=16
longjump G:16 LG com/checksyn.b[1903] longjump(fin_p,fin_l)
longjump G:16 LG com/checksyn.b[1956] longjump(fin_p,fin_l)
lookupword G:293 DEF com/checksyn.b[79] lookupword=
lookupword G:293 FN com/checksyn.b[898] LET lookupword(word)=..
lookupword G:293 LG com/checksyn.b[497] token:=lookupword(rdtag(ch))
lookupword G:293 LG com/checksyn.b[528] token:=lookupword(rdtag(60))
lookupword G:293 LG com/checksyn.b[569] lookupword(rdtag(36))
lookupword G:293 LG com/checksyn.b[575] lookupword(rdtag(36))
lookupword G:293 LG com/checksyn.b[920] lookupword(word)
mapfilename G:208 DEF bcplfecg.h[176] mapfilename=
maxint M:#x7FFFFFFF DEF libhdr.h[251] maxint=minint-1
mcaddrinc M:4 DEF libhdr.h[249] mcaddrinc=bytesperword
memoryfree G:131 DEF libhdr.h[170] memoryfree=131
minint M:#x80000000 DEF libhdr.h[250] minint=1<<bitsperword-1
minint M:#x80000000 MAN libhdr.h[251] maxint=minint-1
mk1 G:345 DEF com/checksyn.b[169] mk1=
mk1 G:345 FN com/checksyn.b[1359] LET mk1(x)=..
mk2 G:346 DEF com/checksyn.b[169] mk2=
mk2 G:346 FN com/checksyn.b[1365] LET mk2(x,y)=..
mk3 G:347 DEF com/checksyn.b[169] mk3=
mk3 G:347 FN com/checksyn.b[1371] LET mk3(x,y,z)=..
mk3list G:350 DEF com/checksyn.b[171] mk3list=
mk3list G:350 LG com/checksyn.b[1372] mk3list
mk3list G:350 LG com/checksyn.b[1373] mk3list:=h1!mk3list
mk3list G:350 LG com/checksyn.b[1380] h1!p:=mk3list
mk3list G:350 SG com/checksyn.b[1373] mk3list:=h1!mk3list
mk3list G:350 SG com/checksyn.b[1381] mk3list:=p
mk3list G:350 SG com/checksyn.b[333] mk3list:=0
mk4 G:348 DEF com/checksyn.b[170] mk4=
mk4 G:348 FN com/checksyn.b[1384] LET mk4(x,y,z,t)=..
mk4list G:351 DEF com/checksyn.b[172] mk4list=
mk4list G:351 LG com/checksyn.b[1385] mk4list
mk4list G:351 LG com/checksyn.b[1386] mk4list:=h1!mk4list
mk4list G:351 LG com/checksyn.b[1393] h1!p:=mk4list
mk4list G:351 SG com/checksyn.b[1386] mk4list:=h1!mk4list
mk4list G:351 SG com/checksyn.b[1394] mk4list:=p
mk4list G:351 SG com/checksyn.b[334] mk4list:=0
mk5 G:349 DEF com/checksyn.b[170] mk5=
mk5 G:349 FN com/checksyn.b[1397] LET mk5(x,y,z,t,u)=..
mk6 F:470 FN com/checksyn.b[1403] LET mk6(x,y,z,t,u,v)=..
mk7 F:471 FN com/checksyn.b[1410] LET mk7(x,y,z,t,u,v,w)=..
muldiv G:5 DEF libhdr.h[42] muldiv=5
nametable G:200 DEF bcplfecg.h[172] nametable=intg
nametable G:200 LG com/checksyn.b[1540] nametable!i:=0
nametable G:200 LG com/checksyn.b[904] wordnode:=nametable!hashval
nametable G:200 LG com/checksyn.b[912] h2!wordnode:=nametable!hashval
nametable G:200 LG com/checksyn.b[914] nametable!hashval:=wordnode
nametable G:200 SG com/checksyn.b[1539] nametable:=newvec(nametablesize)
nametablesize G:201 DEF bcplfecg.h[172] nametablesize=
nametablesize G:201 LG com/checksyn.b[1539]
    nametable:=newvec(nametablesize)
nametablesize G:201 LG com/checksyn.b[1540]
    FOR i=0 TO nametablesize DO..
nametablesize G:201 LG com/checksyn.b[902]
    hashval:=(hashval>>1) MOD nametablesize
nametablesize G:201 SG com/checksyn.b[1535] nametablesize:=541
naming G:226 DEF bcplfecg.h[195] naming=
newline G:84 DEF libhdr.h[122] newline=84
newline G:84 LG com/checksyn.b[1010] newline()
newline G:84 LG com/checksyn.b[1660] newline()
newline G:84 LG com/checksyn.b[1695] newline()
newline G:84 LG com/checksyn.b[1707] newline()
newline G:84 LG com/checksyn.b[1801] newline()
newline G:84 LG com/checksyn.b[1835] newline()
newline G:84 LG com/checksyn.b[1893] newline()
newline G:84 LG com/checksyn.b[1935] newline()
newline G:84 LG com/checksyn.b[1939] newline()
newline G:84 LG com/checksyn.b[3276] newline()
newline G:84 LG com/checksyn.b[398] newline()
newline G:84 LG com/checksyn.b[414] newline()
newpage G:120 DEF libhdr.h[159] newpage=120
newvec G:354 DEF com/checksyn.b[175] newvec=
newvec G:354 FN com/checksyn.b[1347] LET newvec(n)=..
newvec G:354 LG com/checksyn.b[1360] newvec(0)
newvec G:354 LG com/checksyn.b[1366] newvec(1)
newvec G:354 LG com/checksyn.b[1374] p:=newvec(2)
newvec G:354 LG com/checksyn.b[1387] p:=newvec(3)
newvec G:354 LG com/checksyn.b[1398] newvec(4)
newvec G:354 LG com/checksyn.b[1404] newvec(5)
newvec G:354 LG com/checksyn.b[1411] newvec(6)
newvec G:354 LG com/checksyn.b[1537] charv:=newvec(256/bytesperword+1)
newvec G:354 LG com/checksyn.b[1539] nametable:=newvec(nametablesize)
newvec G:354 LG com/checksyn.b[312] chbuf:=newvec(64/bytesperword+1)
newvec G:354 LG com/checksyn.b[860] wordnode:=newvec(len/bytesperword+2)
newvec G:354 LG com/checksyn.b[911] wordnode:=newvec(len/bytesperword+2)
nlpending G:291 DEF com/checksyn.b[73] nlpending=
nlpending G:291 LG com/checksyn.b[1801] IF nlpending DO ..
nlpending G:291 LG com/checksyn.b[2760] UNTIL nlpending DO ..
nlpending G:291 LG com/checksyn.b[396] IF nlpending DO ..
nlpending G:291 SG com/checksyn.b[1439] nlpending:=prevlineno~=lineno
nlpending G:291 SG com/checksyn.b[1455] nlpending:=prevlineno~=lineno
nlpending G:291 SG com/checksyn.b[1882] nlpending:=FALSE
nlpending G:291 SG com/checksyn.b[1906] nlpending:=FALSE
nlpending G:291 SG com/checksyn.b[469] nlpending:=TRUE
nocomments G:255 DEF bcplfecg.h[230] nocomments=
noselst G:235 DEF bcplfecg.h[204] noselst=
note G:63 DEF libhdr.h[101] note=63
notinuse M:-1 DEF libhdr.h[647] notinuse=-1
nulltag G:300 DEF com/checksyn.b[81] nulltag=
nulltag G:300 LG com/checksyn.b[1667]
    IF sectiontag&sectiontag~=nulltag DO ..
nulltag G:300 SG com/checksyn.b[995] nulltag:=wordnode
objline1 G:236 DEF bcplfecg.h[206] objline1=
objline1written G:237 DEF bcplfecg.h[207] objline1written=
obuf G:214 DEF bcplfecg.h[186] obuf=
obufp G:215 DEF bcplfecg.h[186] obufp=
obufq G:216 DEF bcplfecg.h[186] obufq=
obufsize G:218 DEF bcplfecg.h[186] obufsize=
obuft G:217 DEF bcplfecg.h[186] obuft=
ocodeout G:250 DEF bcplfecg.h[219] ocodeout=
opname G:210 DEF bcplfecg.h[179] opname=
opname G:304 DEF com/checksyn.b[117] opname=
opname G:304 FN com/checksyn.b[2866] LET opname(op)=..
opname G:304 LG com/checksyn.b[1806]
    writef("%i4: %12t*n",ln,opname(token))
opname G:304 LG com/checksyn.b[1814]
    writef("%i4: %12t  %s*n",ln,opname(token),tokval)
opname G:304 LG com/checksyn.b[1818]
    writef("%i4: %12t  %n*n",ln,opname(token),tokval)
opname G:304 LG com/checksyn.b[1822]
    writef("%i4: '%13.9e *n",ln,opname(token),tokval)
opname G:304 LG com/checksyn.b[1827]
    writef("%i4: %12t  ",ln,opname(token))
opname G:304 LG com/checksyn.b[1840]
    writef("%i4: %12t *"",ln,opname(token))
opname G:304 LG com/checksyn.b[1861]
    writef("%i4: %12t  %n*n",ln,opname(token),tokval)
opname G:304 LG com/checksyn.b[2055] synerr("Equal'finition",opname(op))
opname G:304 LG com/checksyn.b[2063]
    synerr("*nSome'laration",opname(op))
opname G:304 LG com/checksyn.b[2381] synerr("Token' command",opname(op))
opname G:304 LG com/checksyn.b[2522]
    synerr("*nA na' command",opname(token))
optstring G:238 DEF bcplfecg.h[208] optstring=
output G:59 DEF libhdr.h[97] output=59
output G:59 LG com/checksyn.b[230] stdout:=output()
packstring G:30 DEF libhdr.h[68] packstring=30
parsemode G:321 DEF com/checksyn.b[144] parsemode=
paterr G:344 DEF com/checksyn.b[167] paterr=
paterr G:344 LG com/checksyn.b[2212] paterr("*nThe ' be '=>'")
paterr G:344 LG com/checksyn.b[2213] paterr("*nThe ' be 'BE'")
paterr G:344 LG com/checksyn.b[2298] paterr("The i' pattern")
paterr G:344 LG com/checksyn.b[2355] paterr("Somet' a comma")
paterr G:344 LG com/checksyn.b[2363] paterr("Somet' a comma")
paterr G:344 RT com/checksyn.b[1942] LET paterr(p,mess,a,b,c)BE..
pathfindinput G:53 DEF libhdr.h[91] pathfindinput=53
pathfindinput G:53 LG com/checksyn.b[1069]
    stream:=pathfindinput(charv,0)
pathfindinput G:53 LG com/checksyn.b[1075]
    stream:=pathfindinput(charv,hdrs)
peercom G:179 DEF libhdr.h[227] peercom=179
performget G:287 DEF com/checksyn.b[71] performget=
performget G:287 LG com/checksyn.b[503] performget()
performget G:287 RT com/checksyn.b[1050] LET performget()BE..
pkt_a1 M:5 DEF libhdr.h[656] pkt_a1=5
pkt_a2 M:6 DEF libhdr.h[657] pkt_a2=6
pkt_a3 M:7 DEF libhdr.h[658] pkt_a3=7
pkt_a4 M:8 DEF libhdr.h[659] pkt_a4=8
pkt_a5 M:9 DEF libhdr.h[660] pkt_a5=9
pkt_a6 M:10 DEF libhdr.h[661] pkt_a6=10
pkt_arg1 M:5 DEF libhdr.h[656] pkt_arg1=5
pkt_arg2 M:6 DEF libhdr.h[657] pkt_arg2=6
pkt_arg3 M:7 DEF libhdr.h[658] pkt_arg3=7
pkt_arg4 M:8 DEF libhdr.h[659] pkt_arg4=8
pkt_arg5 M:9 DEF libhdr.h[660] pkt_arg5=9
pkt_arg6 M:10 DEF libhdr.h[661] pkt_arg6=10
pkt_devid M:1 DEF libhdr.h[652] pkt_devid=1
pkt_devtaskid M:1 DEF libhdr.h[652] pkt_devtaskid=1
pkt_id M:1 DEF libhdr.h[652] pkt_id=1
pkt_link M:0 DEF libhdr.h[651] pkt_link=0
pkt_op M:2 DEF libhdr.h[653] pkt_op=2
pkt_r1 M:3 DEF libhdr.h[654] pkt_r1=3
pkt_r2 M:4 DEF libhdr.h[655] pkt_r2=4
pkt_res1 M:3 DEF libhdr.h[654] pkt_res1=3
pkt_res2 M:4 DEF libhdr.h[655] pkt_res2=4
pkt_taskid M:1 DEF libhdr.h[652] pkt_taskid=1
pkt_type M:2 DEF libhdr.h[653] pkt_type=2
plist G:204 DEF bcplfecg.h[173] plist=
point G:64 DEF libhdr.h[102] point=64
pollingch M:-3 DEF libhdr.h[255] pollingch=-3
prbrackets G:308 DEF com/checksyn.b[122] prbrackets=
prbrackets G:308 RT com/checksyn.b[3260] LET prbrackets()BE..
prlineno F:476 LF com/checksyn.b[1657] prlineno(lineno)
prlineno F:476 LF com/checksyn.b[1692] prlineno(lineno)
prlineno F:476 LF com/checksyn.b[1704] prlineno(lineno)
prlineno F:476 LF com/checksyn.b[1877] prlineno(lineno)
prlineno F:476 LF com/checksyn.b[1890] prlineno(t_lno!tokenp)
prlineno F:476 LF com/checksyn.b[2640] prlineno(lineno)
prlineno F:476 RT com/checksyn.b[1867] LET prlineno(lno)BE..
prlocation F:480 LF com/checksyn.b[1894] prlocation(tokenp)
prlocation F:480 LF com/checksyn.b[1952] prlocation(p)
prlocation F:480 LF com/checksyn.b[2644] prlocation(tokenp)
prlocation F:480 RT com/checksyn.b[1910] LET prlocation(tokp)BE..
prtag G:309 DEF com/checksyn.b[123] prtag=
prtag G:309 LG com/checksyn.b[1659] prtag(opentag)
prtag G:309 LG com/checksyn.b[1832] prtag(tokval)
prtag G:309 LG com/checksyn.b[3271] prtag(tag)
prtag G:309 RT com/checksyn.b[3279] LET prtag(tag)BE..
prtoken G:307 DEF com/checksyn.b[121] prtoken=
prtoken G:307 LG com/checksyn.b[1693] prtoken(s_rsect,opentag)
prtoken G:307 LG com/checksyn.b[1694] prtoken(s_rsect,sectiontag)
prtoken G:307 LG com/checksyn.b[1705] prtoken(s_rsect,sectiontag)
prtoken G:307 LG com/checksyn.b[1706] prtoken(s_rsect,opentag)
prtoken G:307 LG com/checksyn.b[1936] prtoken(t_tok!p,t_val!p)
prtoken G:307 LG com/checksyn.b[2642] prtoken(token,tokval)
prtoken G:307 LG com/checksyn.b[397] prtoken(token,tokval)
prtoken G:307 RT com/checksyn.b[3090] LET prtoken(tok,val)BE..
prtokens G:306 DEF com/checksyn.b[120] prtokens=
prtokens G:306 RT com/checksyn.b[1785] LET prtokens()BE..
prtree G:229 DEF bcplfecg.h[198] prtree=
prtree2 G:230 DEF bcplfecg.h[199] prtree2=
pushtok G:310 DEF com/checksyn.b[125] pushtok=
pushtok G:310 LG com/checksyn.b[1569] pushtok(token,0)
pushtok G:310 LG com/checksyn.b[1576] pushtok(token,@h3!wordnode)
pushtok G:310 LG com/checksyn.b[1583] pushtok(token,decval)
pushtok G:310 LG com/checksyn.b[1590] pushtok(token,fltval)
pushtok G:310 LG com/checksyn.b[1594] pushtok(token,sectiontag)
pushtok G:310 LG com/checksyn.b[1608] pushtok(s_rparen,0)
pushtok G:310 LG com/checksyn.b[1614] pushtok(s_sket,0)
pushtok G:310 LG com/checksyn.b[1628] pushtok(token,sectiontag)
pushtok G:310 LG com/checksyn.b[1652] pushtok(s_rsect,0)
pushtok G:310 LG com/checksyn.b[1661] pushtok(s_rsect,opentag)
pushtok G:310 LG com/checksyn.b[1683] pushtok(s_rsect,opentag)
pushtok G:310 LG com/checksyn.b[1689] pushtok(s_rsect,opentag)
pushtok G:310 LG com/checksyn.b[1702] pushtok(s_rsect,opentag)
pushtok G:310 LG com/checksyn.b[1717] pushtok(token,0)
pushtok G:310 LG com/checksyn.b[1729] pushtok(token,0)
pushtok G:310 LG com/checksyn.b[1734] pushtok(token,0)
pushtok G:310 LG com/checksyn.b[1744] pushtok(token,0)
pushtok G:310 LG com/checksyn.b[1753] pushtok(token,bracketdepth)
pushtok G:310 LG com/checksyn.b[1774] pushtok(token,s)
pushtok G:310 LG com/checksyn.b[1782] pushtok(s_eof,0)
pushtok G:310 RT com/checksyn.b[1476] LET pushtok(tok,val)BE..
put_record G:72 DEF libhdr.h[110] put_record=72
putword G:33 DEF libhdr.h[71] putword=33
qpkt G:161 DEF libhdr.h[214] qpkt=161
randno G:34 DEF libhdr.h[72] randno=34
randseed G:127 DEF libhdr.h[166] randseed=127
rbcom G:335 DEF com/checksyn.b[162] rbcom=
rbcom G:335 LG com/checksyn.b[2373] rbcom()
rbcom G:335 LG com/checksyn.b[2613] rbcom()
rbcom G:335 RT com/checksyn.b[2376] LET rbcom()BE..
rbexp G:339 DEF com/checksyn.b[164] rbexp=
rbexp G:339 LG com/checksyn.b[2625] rbexp()
rbexp G:339 LG com/checksyn.b[2752] rbexp()
rbexp G:339 RT com/checksyn.b[2628] LET rbexp()BE..
rbpat G:329 DEF com/checksyn.b[159] rbpat=
rbpat G:329 FN com/checksyn.b[2232] LET rbpat()=..
rbpat G:329 LG com/checksyn.b[2229] rbpat()
rbpat G:329 LG com/checksyn.b[2275] UNLESS rbpat() DO ..
rch G:295 DEF com/checksyn.b[79] rch=
rch G:295 LG com/checksyn.b[1018] rch()
rch G:295 LG com/checksyn.b[1106] rch()
rch G:295 LG com/checksyn.b[1172] rch()
rch G:295 LG com/checksyn.b[1182] rch()
rch G:295 LG com/checksyn.b[1183] rch()
rch G:295 LG com/checksyn.b[1186] rch()
rch G:295 LG com/checksyn.b[1233] rch()
rch G:295 LG com/checksyn.b[1256] rch()
rch G:295 LG com/checksyn.b[1272] rch()
rch G:295 LG com/checksyn.b[1275] rch()
rch G:295 LG com/checksyn.b[1278] rch()
rch G:295 LG com/checksyn.b[1286] rch()
rch G:295 LG com/checksyn.b[1303] rch()
rch G:295 LG com/checksyn.b[1315] rch()
rch G:295 LG com/checksyn.b[1316] rch()
rch G:295 LG com/checksyn.b[1317] rch()
rch G:295 LG com/checksyn.b[1323] rch()
rch G:295 LG com/checksyn.b[1342] rch()
rch G:295 LG com/checksyn.b[339] rch()
rch G:295 LG com/checksyn.b[474] rch()
rch G:295 LG com/checksyn.b[523] rch()
rch G:295 LG com/checksyn.b[584] rch()
rch G:295 LG com/checksyn.b[585] rch()
rch G:295 LG com/checksyn.b[589] rch()
rch G:295 LG com/checksyn.b[595] rch()
rch G:295 LG com/checksyn.b[600] rch()
rch G:295 LG com/checksyn.b[605] rch()
rch G:295 LG com/checksyn.b[659] rch()
rch G:295 LG com/checksyn.b[664] rch()
rch G:295 LG com/checksyn.b[671] rch()
rch G:295 LG com/checksyn.b[673] rch()
rch G:295 LG com/checksyn.b[685] rch()
rch G:295 LG com/checksyn.b[691] rch()
rch G:295 LG com/checksyn.b[700] rch()
rch G:295 LG com/checksyn.b[702] rch()
rch G:295 LG com/checksyn.b[706] rch()
rch G:295 LG com/checksyn.b[713] rch()
rch G:295 LG com/checksyn.b[721] rch()
rch G:295 LG com/checksyn.b[727] rch()
rch G:295 LG com/checksyn.b[736] rch()
rch G:295 LG com/checksyn.b[746] rch()
rch G:295 LG com/checksyn.b[755] rch()
rch G:295 LG com/checksyn.b[760] rch()
rch G:295 LG com/checksyn.b[768] rch()
rch G:295 LG com/checksyn.b[868] rch()
rch G:295 LG com/checksyn.b[895] rch()
rch G:295 RT com/checksyn.b[998] LET rch()BE..
rcom G:333 DEF com/checksyn.b[162] rcom=
rcom G:333 LG com/checksyn.b[2403] rcom()
rcom G:333 LG com/checksyn.b[2417] rcom()
rcom G:333 LG com/checksyn.b[2426] rcom()
rcom G:333 LG com/checksyn.b[2441] rcom()
rcom G:333 LG com/checksyn.b[2456] rcom()
rcom G:333 LG com/checksyn.b[2525] rcom()
rcom G:333 LG com/checksyn.b[2538] rcom()
rcom G:333 LG com/checksyn.b[2546] rcom()
rcom G:333 LG com/checksyn.b[2607] rcom()
rcom G:333 RT com/checksyn.b[2610] LET rcom()BE..
rdargs G:102 DEF libhdr.h[141] rdargs=102
rdargs G:102 LG com/checksyn.b[260] IF rdargs(argformat,argv,50)=0 DO ..
rdargs2 G:26 DEF libhdr.h[64] rdargs2=26
rdcdefs G:325 DEF com/checksyn.b[153] rdcdefs=
rdch G:38 DEF libhdr.h[76] rdch=38
rdch G:38 LG com/checksyn.b[1021] rdch()
rdch G:38 LG com/checksyn.b[1157] rdch()
rdch G:38 LG com/checksyn.b[999] ch:=rdch()
rddecl F:484 LF com/checksyn.b[2008] rddecl(1)
rddecl F:484 LF com/checksyn.b[2436] rddecl(0)
rddecl F:484 RT com/checksyn.b[2022] LET rddecl(n)BE..
rditem G:103 DEF libhdr.h[142] rditem=103
rdmatchitem G:327 DEF com/checksyn.b[157] rdmatchitem=
rdmatchitem G:327 FN com/checksyn.b[2188] LET rdmatchitem(sort)=..
rdmatchitem G:327 LG com/checksyn.b[2179] sort:=rdmatchitem(sort)
rdmatchitem G:327 LG com/checksyn.b[2181] rdmatchitem(sort)
rdmatchlist G:326 DEF com/checksyn.b[156] rdmatchlist=
rdmatchlist G:326 FN com/checksyn.b[2171] LET rdmatchlist(sort)=..
rdmatchlist G:326 LG com/checksyn.b[2109] rdmatchlist(0)
rdmatchlist G:326 LG com/checksyn.b[2475] rdmatchlist(s_be)
rdmatchlist G:326 LG com/checksyn.b[2728] rdmatchlist(s_yields)
rdn G:219 DEF bcplfecg.h[187] rdn=
rdprog G:323 DEF com/checksyn.b[150] rdprog=
rdprog G:323 FN com/checksyn.b[1966] LET rdprog()=..
rdprog G:323 LG com/checksyn.b[410] rdprog()
rdsections G:324 DEF com/checksyn.b[151] rdsections=
rdsections G:324 LG com/checksyn.b[1972] rdsections()
rdsections G:324 RT com/checksyn.b[1991] LET rdsections()BE..
rdstrch G:285 DEF com/checksyn.b[70] rdstrch=
rdstrch G:285 FN com/checksyn.b[1245] LET rdstrch()=..
rdstrch G:285 LG com/checksyn.b[772] rdstrch()
rdstrch G:285 LG com/checksyn.b[870] decval:=rdstrch()
rdtag G:286 DEF com/checksyn.b[71] rdtag=
rdtag G:286 FN com/checksyn.b[1014] LET rdtag(ch1)=..
rdtag G:286 LG com/checksyn.b[497] token:=lookupword(rdtag(ch))
rdtag G:286 LG com/checksyn.b[528] token:=lookupword(rdtag(60))
rdtag G:286 LG com/checksyn.b[569] lookupword(rdtag(36))
rdtag G:286 LG com/checksyn.b[575] lookupword(rdtag(36))
rdtok G:303 DEF com/checksyn.b[86] rdtok=
rdtok G:303 LG com/checksyn.b[1793] rdtok()
rdtok G:303 LG com/checksyn.b[1987] rdtok()
rdtok G:303 LG com/checksyn.b[1995] rdtok()
rdtok G:303 LG com/checksyn.b[1998] rdtok()
rdtok G:303 LG com/checksyn.b[2002] rdtok()
rdtok G:303 LG com/checksyn.b[2005] rdtok()
rdtok G:303 LG com/checksyn.b[2009] rdtok()
rdtok G:303 LG com/checksyn.b[2018] rdtok()
rdtok G:303 LG com/checksyn.b[2037] rdtok()
rdtok G:303 LG com/checksyn.b[2042] rdtok()
rdtok G:303 LG com/checksyn.b[2045] rdtok()
rdtok G:303 LG com/checksyn.b[2048] rdtok()
rdtok G:303 LG com/checksyn.b[2059] rdtok()
rdtok G:303 LG com/checksyn.b[2065] rdtok()
rdtok G:303 LG com/checksyn.b[2072] rdtok()
rdtok G:303 LG com/checksyn.b[2077] rdtok()
rdtok G:303 LG com/checksyn.b[2085] rdtok()
rdtok G:303 LG com/checksyn.b[2088] rdtok()
rdtok G:303 LG com/checksyn.b[2091] rdtok()
rdtok G:303 LG com/checksyn.b[2093] rdtok()
rdtok G:303 LG com/checksyn.b[2100] rdtok()
rdtok G:303 LG com/checksyn.b[2114] rdtok()
rdtok G:303 LG com/checksyn.b[2115] rdtok()
rdtok G:303 LG com/checksyn.b[2131] rdtok()
rdtok G:303 LG com/checksyn.b[2134] rdtok()
rdtok G:303 LG com/checksyn.b[2149] rdtok()
rdtok G:303 LG com/checksyn.b[2150] rdtok()
rdtok G:303 LG com/checksyn.b[2153] rdtok()
rdtok G:303 LG com/checksyn.b[2183] rdtok()
rdtok G:303 LG com/checksyn.b[2195] rdtok()
rdtok G:303 LG com/checksyn.b[2228] rdtok()
rdtok G:303 LG com/checksyn.b[2250] rdtok()
rdtok G:303 LG com/checksyn.b[2256] rdtok()
rdtok G:303 LG com/checksyn.b[2259] rdtok()
rdtok G:303 LG com/checksyn.b[2288] rdtok()
rdtok G:303 LG com/checksyn.b[2294] rdtok()
rdtok G:303 LG com/checksyn.b[2307] rdtok()
rdtok G:303 LG com/checksyn.b[2315] rdtok()
rdtok G:303 LG com/checksyn.b[2324] rdtok()
rdtok G:303 LG com/checksyn.b[2329] rdtok()
rdtok G:303 LG com/checksyn.b[2332] rdtok()
rdtok G:303 LG com/checksyn.b[2338] rdtok()
rdtok G:303 LG com/checksyn.b[2372] rdtok()
rdtok G:303 LG com/checksyn.b[2392] rdtok()
rdtok G:303 LG com/checksyn.b[2402] rdtok()
rdtok G:303 LG com/checksyn.b[2409] rdtok()
rdtok G:303 LG com/checksyn.b[2411] rdtok()
rdtok G:303 LG com/checksyn.b[2416] rdtok()
rdtok G:303 LG com/checksyn.b[2425] rdtok()
rdtok G:303 LG com/checksyn.b[2430] rdtok()
rdtok G:303 LG com/checksyn.b[2431] rdtok()
rdtok G:303 LG com/checksyn.b[2437] rdtok()
rdtok G:303 LG com/checksyn.b[2438] rdtok()
rdtok G:303 LG com/checksyn.b[2442] rdtok()
rdtok G:303 LG com/checksyn.b[2443] rdtok()
rdtok G:303 LG com/checksyn.b[2449] rdtok()
rdtok G:303 LG com/checksyn.b[2452] rdtok()
rdtok G:303 LG com/checksyn.b[2454] rdtok()
rdtok G:303 LG com/checksyn.b[2457] rdtok()
rdtok G:303 LG com/checksyn.b[2458] rdtok()
rdtok G:303 LG com/checksyn.b[2463] rdtok()
rdtok G:303 LG com/checksyn.b[2466] rdtok()
rdtok G:303 LG com/checksyn.b[2470] rdtok()
rdtok G:303 LG com/checksyn.b[2474] rdtok()
rdtok G:303 LG com/checksyn.b[2524] rdtok()
rdtok G:303 LG com/checksyn.b[2537] rdtok()
rdtok G:303 LG com/checksyn.b[2542] rdtok()
rdtok G:303 LG com/checksyn.b[2545] rdtok()
rdtok G:303 LG com/checksyn.b[2606] rdtok()
rdtok G:303 LG com/checksyn.b[2618] rdtok()
rdtok G:303 LG com/checksyn.b[2624] rdtok()
rdtok G:303 LG com/checksyn.b[2651] rdtok()
rdtok G:303 LG com/checksyn.b[2661] rdtok()
rdtok G:303 LG com/checksyn.b[2678] rdtok()
rdtok G:303 LG com/checksyn.b[2685] rdtok()
rdtok G:303 LG com/checksyn.b[2720] rdtok()
rdtok G:303 LG com/checksyn.b[2727] rdtok()
rdtok G:303 LG com/checksyn.b[2743] rdtok()
rdtok G:303 LG com/checksyn.b[2769] rdtok()
rdtok G:303 LG com/checksyn.b[2774] rdtok()
rdtok G:303 LG com/checksyn.b[2779] rdtok()
rdtok G:303 LG com/checksyn.b[2785] rdtok()
rdtok G:303 LG com/checksyn.b[2788] rdtok()
rdtok G:303 LG com/checksyn.b[2794] rdtok()
rdtok G:303 LG com/checksyn.b[2799] rdtok()
rdtok G:303 LG com/checksyn.b[2807] rdtok()
rdtok G:303 LG com/checksyn.b[395] rdtok()
rdtok G:303 LG com/checksyn.b[407] rdtok()
rdtok G:303 RT com/checksyn.b[1416] LET rdtok()BE..
rdtokens G:305 DEF com/checksyn.b[119] rdtokens=
rdtokens G:305 LG com/checksyn.b[352] rdtokens()
rdtokens G:305 RT com/checksyn.b[1517] LET rdtokens()BE..
readdecimal G:283 DEF com/checksyn.b[70] readdecimal=
readdecimal G:283 LG com/checksyn.b[479] readdecimal()
readdecimal G:283 RT com/checksyn.b[1109] LET readdecimal()BE..
readflt G:74 DEF libhdr.h[112] readflt=74
readn G:83 DEF libhdr.h[121] readn=83
readnumber G:284 DEF com/checksyn.b[70] readnumber=
readnumber G:284 FN com/checksyn.b[1220] LET readnumber(radix,digs)=..
readnumber G:284 LG com/checksyn.b[1304] k:=readnumber(16,2)
readnumber G:284 LG com/checksyn.b[1320] k:=readnumber(10,digs)
readnumber G:284 LG com/checksyn.b[1324] k:=readnumber(16,digs)
readnumber G:284 LG com/checksyn.b[1334] k:=readnumber(8,3)
readnumber G:284 LG com/checksyn.b[591] decval:=readnumber(8,100)
readnumber G:284 LG com/checksyn.b[596] decval:=readnumber(2,100)
readnumber G:284 LG com/checksyn.b[601] decval:=readnumber(8,100)
readnumber G:284 LG com/checksyn.b[606] decval:=readnumber(16,100)
readwords G:44 DEF libhdr.h[82] readwords=44
rec F:17 LAB com/checksyn.b[412] rec:fin:newline()
rec F:17 LF com/checksyn.b[231] rec_l:=rec
rec_l G:302 DEF com/checksyn.b[83] rec_l=
rec_l G:302 SG com/checksyn.b[1967] rec_l:=restart
rec_l G:302 SG com/checksyn.b[231] rec_l:=rec
rec_p G:301 DEF com/checksyn.b[83] rec_p=
rec_p G:301 SG com/checksyn.b[1967] rec_p:=level()
rec_p G:301 SG com/checksyn.b[231] rec_p:=level()
recordnote G:70 DEF libhdr.h[108] recordnote=70
recordpoint G:69 DEF libhdr.h[107] recordpoint=69
rel2patrel G:322 DEF com/checksyn.b[148] rel2patrel=
release G:159 DEF libhdr.h[212] release=159
renamefile G:77 DEF libhdr.h[115] renamefile=77
restart F:613 LAB com/checksyn.b[1976] restart:bracketdepth:=0
restart F:613 LF com/checksyn.b[1967] rec_l:=restart
result2 G:10 DEF libhdr.h[47] result2=10
result2 G:10 LG com/checksyn.b[773] TEST result2 THEN .. ELSE ..
result2 G:10 SG com/checksyn.b[1305] result2:=FALSE
result2 G:10 SG com/checksyn.b[1327] result2:=TRUE
result2 G:10 SG com/checksyn.b[1337] result2:=FALSE
result2 G:10 SG com/checksyn.b[1343] result2:=FALSE
result2 G:10 SG com/checksyn.b[237] result2:=0
result2 G:10 SG com/checksyn.b[444] result2:=0
resumeco G:21 DEF libhdr.h[59] resumeco=21
return_hard M:10 DEF libhdr.h[628] return_hard=10
return_hard M:10 MAN libhdr.h[633] cli_initialfaillevel=return_hard
return_ok M:0 DEF libhdr.h[630] return_ok=0
return_severe M:20 DEF libhdr.h[627] return_severe=20
return_soft M:5 DEF libhdr.h[629] return_soft=5
returnpkt G:169 DEF libhdr.h[219] returnpkt=169
rewindstream G:65 DEF libhdr.h[103] rewindstream=65
rexp G:337 DEF com/checksyn.b[164] rexp=
rexp G:337 LG com/checksyn.b[2116] rexp(0)
rexp G:337 LG com/checksyn.b[2468] rexp(0)
rexp G:337 LG com/checksyn.b[2496] rexp(0)
rexp G:337 LG com/checksyn.b[2745] rexp(n)
rexp G:337 LG com/checksyn.b[2772] rexp(0)
rexp G:337 LG com/checksyn.b[2792] rexp(0)
rexp G:337 RT com/checksyn.b[2748] LET rexp(n)BE..
rexplist G:341 DEF com/checksyn.b[165] rexplist=
rnbcom G:334 DEF com/checksyn.b[162] rnbcom=
rnbcom G:334 LG com/checksyn.b[2615] rnbcom()
rnbcom G:334 RT com/checksyn.b[2371] LET rnbcom()BE..
rnbexp G:338 DEF com/checksyn.b[164] rnbexp=
rnbexp G:338 RT com/checksyn.b[2623] LET rnbexp()BE..
rnbpat G:328 DEF com/checksyn.b[159] rnbpat=
rnbpat G:328 LG com/checksyn.b[2277] UNLESS rnbpat() DO ..
rnbpat G:328 LG com/checksyn.b[2297] UNLESS rnbpat() DO ..
rnbpat G:328 RT com/checksyn.b[2227] LET rnbpat()BE..
rncom G:332 DEF com/checksyn.b[162] rncom=
rncom G:332 LG com/checksyn.b[2103] rncom()
rncom G:332 LG com/checksyn.b[2218] UNLESS rncom() DO ..
rncom G:332 LG com/checksyn.b[2405] rncom()
rncom G:332 LG com/checksyn.b[2733] rncom()
rncom G:332 RT com/checksyn.b[2605] LET rncom()BE..
rnexp G:336 DEF com/checksyn.b[164] rnexp=
rnexp G:336 LG com/checksyn.b[2056] rnexp(0)
rnexp G:336 LG com/checksyn.b[2102] rnexp(0)
rnexp G:336 LG com/checksyn.b[2136] rnexp(0)
rnexp G:336 LG com/checksyn.b[2161] rnexp(0)
rnexp G:336 LG com/checksyn.b[2216] UNLESS rnexp(0) DO ..
rnexp G:336 LG com/checksyn.b[2290] rnexp(0)
rnexp G:336 LG com/checksyn.b[2397] rnexp(0)
rnexp G:336 LG com/checksyn.b[2401] rnexp(0)
rnexp G:336 LG com/checksyn.b[2413] rnexp(0)
rnexp G:336 LG com/checksyn.b[2414] rnexp(0)
rnexp G:336 LG com/checksyn.b[2415] rnexp(0)
rnexp G:336 LG com/checksyn.b[2424] rnexp(0)
rnexp G:336 LG com/checksyn.b[2447] rnexp(0)
rnexp G:336 LG com/checksyn.b[2500] rnexp(0)
rnexp G:336 LG com/checksyn.b[2503] rnexp(0)
rnexp G:336 LG com/checksyn.b[2509] rnexp(0)
rnexp G:336 LG com/checksyn.b[2534] rnexp(0)
rnexp G:336 LG com/checksyn.b[2619] rnexp(0)
rnexp G:336 LG com/checksyn.b[2666] rnexp(9)
rnexp G:336 LG com/checksyn.b[2667] rnexp(9)
rnexp G:336 LG com/checksyn.b[2668] rnexp(9)
rnexp G:336 LG com/checksyn.b[2683] rnexp(0)
rnexp G:336 LG com/checksyn.b[2694] rnexp(7)
rnexp G:336 LG com/checksyn.b[2704] rnexp(5)
rnexp G:336 LG com/checksyn.b[2709] rnexp(3)
rnexp G:336 LG com/checksyn.b[2714] rnexp(0)
rnexp G:336 LG com/checksyn.b[2723] rnexp(0)
rnexp G:336 LG com/checksyn.b[2805] rnexp(0)
rnexp G:336 LG com/checksyn.b[2833] rnexp(4)
rnexp G:336 LG com/checksyn.b[2851] rnexp(0)
rnexp G:336 LG com/checksyn.b[2854] rnexp(0)
rnexp G:336 LG com/checksyn.b[2860] rnexp(p)
rnexp G:336 RT com/checksyn.b[2739] LET rnexp(n)BE..
rnexplist G:340 DEF com/checksyn.b[165] rnexplist=
rnpat G:330 DEF com/checksyn.b[160] rnpat=
rnpat G:330 LG com/checksyn.b[2311] rnpat(0)
rnpat G:330 LG com/checksyn.b[2320] rnpat(0)
rnpat G:330 LG com/checksyn.b[2354] UNLESS rnpat(1) DO ..
rnpat G:330 LG com/checksyn.b[2362] UNLESS rnpat(2) DO ..
rnpat G:330 RT com/checksyn.b[2337] LET rnpat(n)BE..
rootnode G:9 DEF libhdr.h[46] rootnode=9
rootnode G:9 LG com/checksyn.b[211] rootnode!rtn_hdrsvar
rootnodeaddr M:100 DEF libhdr.h[300] rootnodeaddr=100
rpat G:331 DEF com/checksyn.b[160] rpat=
rpat G:331 FN com/checksyn.b[2342] LET rpat(n)=..
rpat G:331 LG com/checksyn.b[2202] UNLESS rpat(0) DO ..
rpat G:331 LG com/checksyn.b[2339] rpat(n)
rspat F:489 FN com/checksyn.b[2264] LET rspat()=..
rspat F:489 LF com/checksyn.b[2344] UNLESS rspat(0) DO ..
rspat F:489 LF com/checksyn.b[2349] UNLESS rspat() DO ..
rtn_abortcode M:27 DEF libhdr.h[336] rtn_abortcode=
rtn_adjclock M:33 DEF libhdr.h[354] rtn_adjclock=
rtn_blib M:19 DEF libhdr.h[325] rtn_blib=
rtn_blklist M:4 DEF libhdr.h[307] rtn_blklist=
rtn_boot M:17 DEF libhdr.h[323] rtn_boot=
rtn_boottrace M:39 DEF libhdr.h[369] rtn_boottrace=
rtn_bptaddr M:9 DEF libhdr.h[314] rtn_bptaddr=
rtn_bptinstr M:10 DEF libhdr.h[315] rtn_bptinstr=
rtn_clkintson M:6 DEF libhdr.h[310] rtn_clkintson=
rtn_clwkq M:12 DEF libhdr.h[318] rtn_clwkq=
rtn_context M:28 DEF libhdr.h[337] rtn_context=
rtn_crntask M:3 DEF libhdr.h[306] rtn_crntask=
rtn_days M:40 DEF libhdr.h[372] rtn_days=
rtn_dbgvars M:11 DEF libhdr.h[316] rtn_dbgvars=
rtn_dcountv M:34 DEF libhdr.h[356] rtn_dcountv=
rtn_devtab M:1 DEF libhdr.h[304] rtn_devtab=
rtn_dumpflag M:25 DEF libhdr.h[333] rtn_dumpflag=
rtn_envlist M:26 DEF libhdr.h[334] rtn_envlist=
rtn_gvecsize M:63 DEF libhdr.h[405] rtn_gvecsize=
rtn_hdrsvar M:37 DEF libhdr.h[365] rtn_hdrsvar=
rtn_hdrsvar M:37 MAN com/checksyn.b[211] rootnode!rtn_hdrsvar
rtn_hostaddsize M:62 DEF libhdr.h[402] rtn_hostaddsize=
rtn_icount M:48 DEF libhdr.h[385] rtn_icount=
rtn_idletcb M:32 DEF libhdr.h[353] rtn_idletcb=
rtn_info M:15 DEF libhdr.h[321] rtn_info=
rtn_insadebug M:8 DEF libhdr.h[312] rtn_insadebug=
rtn_intflag M:24 DEF libhdr.h[332] rtn_intflag=
rtn_joyaxis0 M:55 DEF libhdr.h[394] rtn_joyaxis0=
rtn_joyaxis1 M:56 DEF libhdr.h[395] rtn_joyaxis1=
rtn_joyaxis2 M:57 DEF libhdr.h[396] rtn_joyaxis2=
rtn_joyaxis3 M:58 DEF libhdr.h[397] rtn_joyaxis3=
rtn_joyaxis4 M:59 DEF libhdr.h[398] rtn_joyaxis4=
rtn_joyaxis5 M:60 DEF libhdr.h[399] rtn_joyaxis5=
rtn_joyaxis6 M:61 DEF libhdr.h[400] rtn_joyaxis6=
rtn_joyaxiscount M:52 DEF libhdr.h[391] rtn_joyaxiscount=
rtn_joybuttoncount M:51 DEF libhdr.h[390] rtn_joybuttoncount=
rtn_joybuttons M:54 DEF libhdr.h[393] rtn_joybuttons=
rtn_joycurrbuttons M:53 DEF libhdr.h[392] rtn_joycurrbuttons=
rtn_joystickfd M:49 DEF libhdr.h[388] rtn_joystickfd=
rtn_joystickfd1 M:50 DEF libhdr.h[389] rtn_joystickfd1=
rtn_keyboard M:20 DEF libhdr.h[326] rtn_keyboard=
rtn_klib M:18 DEF libhdr.h[324] rtn_klib=
rtn_lastch M:7 DEF libhdr.h[311] rtn_lastch=
rtn_mc0 M:43 DEF libhdr.h[377] rtn_mc0=
rtn_mc1 M:44 DEF libhdr.h[379] rtn_mc1=
rtn_mc2 M:45 DEF libhdr.h[380] rtn_mc2=
rtn_mc3 M:46 DEF libhdr.h[381] rtn_mc3=
rtn_membase M:13 DEF libhdr.h[319] rtn_membase=
rtn_memsize M:14 DEF libhdr.h[320] rtn_memsize=
rtn_mins M:41 DEF libhdr.h[374] rtn_mins=rtn_msecs
rtn_msecs M:41 DEF libhdr.h[373] rtn_msecs=
rtn_msecs M:41 MAN libhdr.h[374] rtn_mins=rtn_msecs
rtn_pathvar M:36 DEF libhdr.h[363] rtn_pathvar=
rtn_rootvar M:35 DEF libhdr.h[361] rtn_rootvar=
rtn_screen M:21 DEF libhdr.h[327] rtn_screen=
rtn_scriptsvar M:38 DEF libhdr.h[367] rtn_scriptsvar=
rtn_sys M:16 DEF libhdr.h[322] rtn_sys=
rtn_sysg M:30 DEF libhdr.h[346] rtn_sysg=
rtn_sysp M:29 DEF libhdr.h[345] rtn_sysp=
rtn_sysst M:31 DEF libhdr.h[347] rtn_sysst=
rtn_system M:47 DEF libhdr.h[383] rtn_system=
rtn_tallyv M:5 DEF libhdr.h[308] rtn_tallyv=
rtn_tasktab M:0 DEF libhdr.h[303] rtn_tasktab=0
rtn_tcblist M:2 DEF libhdr.h[305] rtn_tcblist=
rtn_ticks M:42 DEF libhdr.h[375] rtn_ticks=
rtn_upb M:80 DEF libhdr.h[411] rtn_upb=80
rtn_vecstatsv M:22 DEF libhdr.h[329] rtn_vecstatsv=
rtn_vecstatsvupb M:23 DEF libhdr.h[330] rtn_vecstatsvupb=
s_abs M:13 DEF bcplfecg.h[42] s_abs=
s_abs M:13 MAN com/checksyn.b[2255] CASE s_abs:.. 
s_abs M:13 MAN com/checksyn.b[2487] CASE s_abs:.. 
s_abs M:13 MAN com/checksyn.b[2597] CASE s_abs:.. 
s_abs M:13 MAN com/checksyn.b[2703] CASE s_abs:.. 
s_abs M:13 MAN com/checksyn.b[2871] CASE s_abs:.. 
s_abs M:13 MAN com/checksyn.b[3114] CASE s_abs:.. 
s_abs M:13 MAN com/checksyn.b[619] CASE s_abs:.. 
s_abs M:13 MAN com/checksyn.b[924] dsw("ABS",s_abs)
s_add M:17 DEF bcplfecg.h[44] s_add=
s_add M:17 MAN com/checksyn.b[2253] CASE s_add:.. 
s_add M:17 MAN com/checksyn.b[2487] CASE s_add:.. 
s_add M:17 MAN com/checksyn.b[2597] CASE s_add:.. 
s_add M:17 MAN com/checksyn.b[2699] CASE s_add:.. 
s_add M:17 MAN com/checksyn.b[2824] CASE s_add:.. 
s_add M:17 MAN com/checksyn.b[3006] CASE s_add:.. 
s_add M:17 MAN com/checksyn.b[3206] CASE s_add:.. 
s_add M:17 MAN com/checksyn.b[369] t_tab!p:=TABLE 6,s_add,0,...
s_add M:17 MAN com/checksyn.b[625] CASE s_add:.. 
s_add M:17 MAN com/checksyn.b[680] token:=s_add
s_and M:68 DEF bcplfecg.h[62] s_and=
s_and M:68 MAN com/checksyn.b[1752] CASE s_and:.. 
s_and M:68 MAN com/checksyn.b[1860] CASE s_and:.. 
s_and M:68 MAN com/checksyn.b[1983] IF token=s_and DO ..
s_and M:68 MAN com/checksyn.b[1984]
    IF tokval=0&(token=s_global|token=s_manifest|token=s_static|token=s_let|token=s_and) DO ..
s_and M:68 MAN com/checksyn.b[2163] .. REPEATWHILE token=s_and
s_and M:68 MAN com/checksyn.b[2872] CASE s_and:.. 
s_and M:68 MAN com/checksyn.b[3115] CASE s_and:.. 
s_and M:68 MAN com/checksyn.b[923] dsw("AND",s_and)
s_ass M:41 DEF bcplfecg.h[51] s_ass=
s_ass M:41 MAN com/checksyn.b[2555] CASE s_ass:.. 
s_ass M:41 MAN com/checksyn.b[2873] CASE s_ass:.. 
s_ass M:41 MAN com/checksyn.b[3116] CASE s_ass:.. 
s_ass M:41 MAN com/checksyn.b[628] CASE s_ass:.. 
s_ass M:41 MAN com/checksyn.b[761] token:=s_ass
s_assadd M:187 DEF bcplfecg.h[113] s_assadd=
s_assadd M:187 MAN com/checksyn.b[2560] CASE s_assadd:.. 
s_assadd M:187 MAN com/checksyn.b[2887] CASE s_assadd:.. 
s_assadd M:187 MAN com/checksyn.b[3130] CASE s_assadd:.. 
s_assadd M:187 MAN com/checksyn.b[632] CASE s_assadd:.. 
s_assadd M:187 MAN com/checksyn.b[680] assop:=s_assadd
s_assdiv M:185 DEF bcplfecg.h[113] s_assdiv=
s_assdiv M:185 MAN com/checksyn.b[2559] CASE s_assdiv:.. 
s_assdiv M:185 MAN com/checksyn.b[2874] CASE s_assdiv:.. 
s_assdiv M:185 MAN com/checksyn.b[3117] CASE s_assdiv:.. 
s_assdiv M:185 MAN com/checksyn.b[630] CASE s_assdiv:.. 
s_assdiv M:185 MAN com/checksyn.b[717] assop:=s_assdiv
s_asseqv M:198 DEF bcplfecg.h[116] s_asseqv=
s_asseqv M:198 MAN com/checksyn.b[2563] CASE s_asseqv:.. 
s_asseqv M:198 MAN com/checksyn.b[2875] CASE s_asseqv:.. 
s_asseqv M:198 MAN com/checksyn.b[3118] CASE s_asseqv:.. 
s_asseqv M:198 MAN com/checksyn.b[518] assop:=s_asseqv
s_assfadd M:192 DEF bcplfecg.h[114] s_assfadd=
s_assfadd M:192 MAN com/checksyn.b[2558] CASE s_assfadd:.. 
s_assfadd M:192 MAN com/checksyn.b[2880] CASE s_assfadd:.. 
s_assfadd M:192 MAN com/checksyn.b[3123] CASE s_assfadd:.. 
s_assfadd M:192 MAN com/checksyn.b[632] token:=s_assfadd
s_assfdiv M:190 DEF bcplfecg.h[114] s_assfdiv=
s_assfdiv M:190 MAN com/checksyn.b[2557] CASE s_assfdiv:.. 
s_assfdiv M:190 MAN com/checksyn.b[2876] CASE s_assfdiv:.. 
s_assfdiv M:190 MAN com/checksyn.b[3119] CASE s_assfdiv:.. 
s_assfdiv M:190 MAN com/checksyn.b[630] token:=s_assfdiv
s_assfmod M:191 DEF bcplfecg.h[114] s_assfmod=
s_assfmod M:191 MAN com/checksyn.b[2557] CASE s_assfmod:.. 
s_assfmod M:191 MAN com/checksyn.b[2877] CASE s_assfmod:.. 
s_assfmod M:191 MAN com/checksyn.b[3120] CASE s_assfmod:.. 
s_assfmod M:191 MAN com/checksyn.b[631] token:=s_assfmod
s_assfmul M:189 DEF bcplfecg.h[114] s_assfmul=
s_assfmul M:189 MAN com/checksyn.b[2557] CASE s_assfmul:.. 
s_assfmul M:189 MAN com/checksyn.b[2879] CASE s_assfmul:.. 
s_assfmul M:189 MAN com/checksyn.b[3122] CASE s_assfmul:.. 
s_assfmul M:189 MAN com/checksyn.b[629] token:=s_assfmul
s_assfsub M:193 DEF bcplfecg.h[114] s_assfsub=
s_assfsub M:193 MAN com/checksyn.b[2558] CASE s_assfsub:.. 
s_assfsub M:193 MAN com/checksyn.b[2878] CASE s_assfsub:.. 
s_assfsub M:193 MAN com/checksyn.b[3121] CASE s_assfsub:.. 
s_assfsub M:193 MAN com/checksyn.b[633] token:=s_assfsub
s_asslogand M:196 DEF bcplfecg.h[116] s_asslogand=
s_asslogand M:196 MAN com/checksyn.b[2562] CASE s_asslogand:.. 
s_asslogand M:196 MAN com/checksyn.b[2881] CASE s_asslogand:.. 
s_asslogand M:196 MAN com/checksyn.b[3124] CASE s_asslogand:.. 
s_asslogand M:196 MAN com/checksyn.b[516] assop:=s_asslogand
s_asslogand M:196 MAN com/checksyn.b[681] assop:=s_asslogand
s_asslogor M:197 DEF bcplfecg.h[116] s_asslogor=
s_asslogor M:197 MAN com/checksyn.b[2562] CASE s_asslogor:.. 
s_asslogor M:197 MAN com/checksyn.b[2882] CASE s_asslogor:.. 
s_asslogor M:197 MAN com/checksyn.b[3125] CASE s_asslogor:.. 
s_asslogor M:197 MAN com/checksyn.b[517] assop:=s_asslogor
s_asslogor M:197 MAN com/checksyn.b[682] assop:=s_asslogor
s_asslshift M:194 DEF bcplfecg.h[115] s_asslshift=
s_asslshift M:194 MAN com/checksyn.b[2561] CASE s_asslshift:.. 
s_asslshift M:194 MAN com/checksyn.b[2883] CASE s_asslshift:.. 
s_asslshift M:194 MAN com/checksyn.b[3126] CASE s_asslshift:.. 
s_asslshift M:194 MAN com/checksyn.b[514] assop:=s_asslshift
s_asslshift M:194 MAN com/checksyn.b[739] assop:=s_asslshift
s_assmod M:186 DEF bcplfecg.h[113] s_assmod=
s_assmod M:186 MAN com/checksyn.b[2559] CASE s_assmod:.. 
s_assmod M:186 MAN com/checksyn.b[2888] CASE s_assmod:.. 
s_assmod M:186 MAN com/checksyn.b[3131] CASE s_assmod:.. 
s_assmod M:186 MAN com/checksyn.b[513] assop:=s_assmod
s_assmod M:186 MAN com/checksyn.b[631] CASE s_assmod:.. 
s_assmul M:184 DEF bcplfecg.h[113] s_assmul=
s_assmul M:184 MAN com/checksyn.b[2559] CASE s_assmul:.. 
s_assmul M:184 MAN com/checksyn.b[2885] CASE s_assmul:.. 
s_assmul M:184 MAN com/checksyn.b[3128] CASE s_assmul:.. 
s_assmul M:184 MAN com/checksyn.b[629] CASE s_assmul:.. 
s_assmul M:184 MAN com/checksyn.b[679] assop:=s_assmul
s_assrshift M:195 DEF bcplfecg.h[115] s_assrshift=
s_assrshift M:195 MAN com/checksyn.b[2561] CASE s_assrshift:.. 
s_assrshift M:195 MAN com/checksyn.b[2889] CASE s_assrshift:.. 
s_assrshift M:195 MAN com/checksyn.b[3132] CASE s_assrshift:.. 
s_assrshift M:195 MAN com/checksyn.b[515] assop:=s_assrshift
s_assrshift M:195 MAN com/checksyn.b[749] assop:=s_assrshift
s_asssub M:188 DEF bcplfecg.h[113] s_asssub=
s_asssub M:188 MAN com/checksyn.b[2560] CASE s_asssub:.. 
s_asssub M:188 MAN com/checksyn.b[2884] CASE s_asssub:.. 
s_asssub M:188 MAN com/checksyn.b[3127] CASE s_asssub:.. 
s_asssub M:188 MAN com/checksyn.b[633] CASE s_asssub:.. 
s_asssub M:188 MAN com/checksyn.b[757] assop:=s_asssub
s_assvecap M:183 DEF bcplfecg.h[112] s_assvecap=
s_assvecap M:183 MAN com/checksyn.b[2556] CASE s_assvecap:.. 
s_assvecap M:183 MAN com/checksyn.b[2890] CASE s_assvecap:.. 
s_assvecap M:183 MAN com/checksyn.b[3133] CASE s_assvecap:.. 
s_assvecap M:183 MAN com/checksyn.b[678] assop:=s_assvecap
s_assxor M:199 DEF bcplfecg.h[116] s_assxor=
s_assxor M:199 MAN com/checksyn.b[2563] CASE s_assxor:.. 
s_assxor M:199 MAN com/checksyn.b[2886] CASE s_assxor:.. 
s_assxor M:199 MAN com/checksyn.b[3129] CASE s_assxor:.. 
s_assxor M:199 MAN com/checksyn.b[519] assop:=s_assxor
s_be M:113 DEF bcplfecg.h[81] s_be=
s_be M:113 MAN com/checksyn.b[2103] IF token=s_be DO ..
s_be M:113 MAN com/checksyn.b[2199]
    UNLESS token=s_yields|token=s_be DO ..
s_be M:113 MAN com/checksyn.b[2204]
    UNLESS token=s_yields|token=s_be DO ..
s_be M:113 MAN com/checksyn.b[2475] rdmatchlist(s_be)
s_be M:113 MAN com/checksyn.b[2891] CASE s_be:.. 
s_be M:113 MAN com/checksyn.b[3134] CASE s_be:.. 
s_be M:113 MAN com/checksyn.b[925] dsw("BE",s_be)
s_bitsperbcplword M:131 DEF bcplfecg.h[84] s_bitsperbcplword=
s_bitsperbcplword M:131 MAN com/checksyn.b[2248]
    CASE s_bitsperbcplword:.. 
s_bitsperbcplword M:131 MAN com/checksyn.b[505]
    CASE s_bitsperbcplword:.. 
s_bitsperbcplword M:131 MAN com/checksyn.b[926]
    dsw("BITSP'BCPLWORD",s_bitsperbcplword)
s_break M:59 DEF bcplfecg.h[59] s_break=
s_break M:59 MAN com/checksyn.b[2302] CASE s_break:.. 
s_break M:59 MAN com/checksyn.b[2384] CASE s_break:.. 
s_break M:59 MAN com/checksyn.b[2571] CASE s_break:.. 
s_break M:59 MAN com/checksyn.b[2672] CASE s_break:.. 
s_break M:59 MAN com/checksyn.b[2893] CASE s_break:.. 
s_break M:59 MAN com/checksyn.b[3136] CASE s_break:.. 
s_break M:59 MAN com/checksyn.b[927] dsw("BREAK",s_break)
s_by M:120 DEF bcplfecg.h[82] s_by=
s_by M:120 MAN com/checksyn.b[2415] IF token=s_by DO ..
s_by M:120 MAN com/checksyn.b[2892] CASE s_by:.. 
s_by M:120 MAN com/checksyn.b[3135] CASE s_by:.. 
s_by M:120 MAN com/checksyn.b[928] dsw("BY",s_by)
s_byteap M:27 DEF bcplfecg.h[47] s_byteap=
s_byteap M:27 MAN com/checksyn.b[2813] CASE s_byteap:.. 
s_byteap M:27 MAN com/checksyn.b[2894] CASE s_byteap:.. 
s_byteap M:27 MAN com/checksyn.b[3137] CASE s_byteap:.. 
s_byteap M:27 MAN com/checksyn.b[657] token:=s_byteap
s_case M:64 DEF bcplfecg.h[60] s_case=
s_case M:64 MAN com/checksyn.b[2533] CASE s_case:.. 
s_case M:64 MAN com/checksyn.b[2600] CASE s_case:.. 
s_case M:64 MAN com/checksyn.b[2895] CASE s_case:.. 
s_case M:64 MAN com/checksyn.b[3138] CASE s_case:.. 
s_case M:64 MAN com/checksyn.b[929] dsw("CASE",s_case)
s_colon M:45 DEF bcplfecg.h[53] s_colon=
s_colon M:45 MAN com/checksyn.b[2050] IF token=s_colon|token=s_eq DO ..
s_colon M:45 MAN com/checksyn.b[2052] UNLESS token=s_colon DO ..
s_colon M:45 MAN com/checksyn.b[2108] CASE s_colon:.. 
s_colon M:45 MAN com/checksyn.b[2176] UNLESS token=s_colon DO ..
s_colon M:45 MAN com/checksyn.b[2181] WHILE token=s_colon DO ..
s_colon M:45 MAN com/checksyn.b[2192] UNLESS token=s_colon DO ..
s_colon M:45 MAN com/checksyn.b[2521] UNLESS token=s_colon DO ..
s_colon M:45 MAN com/checksyn.b[2535] UNLESS token=s_colon DO ..
s_colon M:45 MAN com/checksyn.b[2543] UNLESS token=s_colon DO ..
s_colon M:45 MAN com/checksyn.b[2667] IF token=s_colon DO ..
s_colon M:45 MAN com/checksyn.b[2668] IF token=s_colon DO ..
s_colon M:45 MAN com/checksyn.b[2896] CASE s_colon:.. 
s_colon M:45 MAN com/checksyn.b[3139] CASE s_colon:.. 
s_colon M:45 MAN com/checksyn.b[763] token:=s_colon
s_comma M:37 DEF bcplfecg.h[49] s_comma=
s_comma M:37 MAN com/checksyn.b[2092] UNLESS token=s_comma DO ..
s_comma M:37 MAN com/checksyn.b[2119] CASE s_comma:.. 
s_comma M:37 MAN com/checksyn.b[2140] UNLESS token=s_comma DO ..
s_comma M:37 MAN com/checksyn.b[2154] .. REPEATWHILE token=s_comma
s_comma M:37 MAN com/checksyn.b[2161] .. REPEATWHILE token=s_comma
s_comma M:37 MAN com/checksyn.b[2352] CASE s_comma:.. 
s_comma M:37 MAN com/checksyn.b[2469] UNLESS token=s_comma DO ..
s_comma M:37 MAN com/checksyn.b[2498] IF token=s_comma DO ..
s_comma M:37 MAN com/checksyn.b[2500] .. REPEATWHILE token=s_comma
s_comma M:37 MAN com/checksyn.b[2503] .. REPEATWHILE token=s_comma
s_comma M:37 MAN com/checksyn.b[2714] .. REPEATWHILE token=s_comma
s_comma M:37 MAN com/checksyn.b[2723] .. REPEATWHILE token=s_comma
s_comma M:37 MAN com/checksyn.b[2773] UNLESS token=s_comma DO ..
s_comma M:37 MAN com/checksyn.b[2793] UNLESS token=s_comma DO ..
s_comma M:37 MAN com/checksyn.b[2852] UNLESS token=s_comma DO ..
s_comma M:37 MAN com/checksyn.b[2897] CASE s_comma:.. 
s_comma M:37 MAN com/checksyn.b[3140] CASE s_comma:.. 
s_comma M:37 MAN com/checksyn.b[654] token:=s_comma
s_comment M:207 DEF bcplfecg.h[131] s_comment=
s_cond M:36 DEF bcplfecg.h[49] s_cond=
s_cond M:36 MAN com/checksyn.b[2848] CASE s_cond:.. 
s_cond M:36 MAN com/checksyn.b[2898] CASE s_cond:.. 
s_cond M:36 MAN com/checksyn.b[3141] CASE s_cond:.. 
s_cond M:36 MAN com/checksyn.b[642] CASE s_cond:.. 
s_cond M:36 MAN com/checksyn.b[756] token:=s_cond
s_const M:75 DEF bcplfecg.h[63] s_const=
s_constdef M:74 DEF bcplfecg.h[63] s_constdef=
s_constdef M:74 MAN com/checksyn.b[2899] CASE s_constdef:.. 
s_datalab M:159 DEF bcplfecg.h[98] s_datalab=
s_datalab M:159 MAN com/checksyn.b[2900] CASE s_datalab:.. 
s_default M:65 DEF bcplfecg.h[60] s_default=
s_default M:65 MAN com/checksyn.b[2541] CASE s_default:.. 
s_default M:65 MAN com/checksyn.b[2601] CASE s_default:.. 
s_default M:65 MAN com/checksyn.b[2901] CASE s_default:.. 
s_default M:65 MAN com/checksyn.b[3142] CASE s_default:.. 
s_default M:65 MAN com/checksyn.b[931] dsw("DEFAULT",s_default)
s_div M:15 DEF bcplfecg.h[43] s_div=
s_div M:15 MAN com/checksyn.b[2819] CASE s_div:.. 
s_div M:15 MAN com/checksyn.b[2902] CASE s_div:.. 
s_div M:15 MAN com/checksyn.b[3143] CASE s_div:.. 
s_div M:15 MAN com/checksyn.b[623] CASE s_div:.. 
s_div M:15 MAN com/checksyn.b[717] token:=s_div
s_do M:121 DEF bcplfecg.h[82] s_do=
s_do M:121 MAN com/checksyn.b[2402] IF token=s_do DO ..
s_do M:121 MAN com/checksyn.b[2416] IF token=s_do DO ..
s_do M:121 MAN com/checksyn.b[2425] IF token=s_do DO ..
s_do M:121 MAN com/checksyn.b[2903] CASE s_do:.. 
s_do M:121 MAN com/checksyn.b[3144] CASE s_do:.. 
s_do M:121 MAN com/checksyn.b[930] dsw("DO",s_do)
s_do M:121 MAN com/checksyn.b[985] dsw("THEN",s_do)
s_dot M:128 DEF bcplfecg.h[83] s_dot=
s_dot M:128 MAN com/checksyn.b[2017] TEST token=s_dot THEN .. ELSE ..
s_dot M:128 MAN com/checksyn.b[2183] IF token=s_dot DO ..
s_dot M:128 MAN com/checksyn.b[2904] CASE s_dot:.. 
s_dot M:128 MAN com/checksyn.b[3145] CASE s_dot:.. 
s_dot M:128 MAN com/checksyn.b[563]
    UNTIL skiptag=0|token=s_dot|token=s_eof DO ..
s_dot M:128 MAN com/checksyn.b[666] token:=s_dot
s_dots M:129 DEF bcplfecg.h[83] s_dots=
s_else M:122 DEF bcplfecg.h[82] s_else=
s_else M:122 MAN com/checksyn.b[2404] UNLESS token=s_else DO ..
s_else M:122 MAN com/checksyn.b[2905] CASE s_else:.. 
s_else M:122 MAN com/checksyn.b[3146] CASE s_else:.. 
s_else M:122 MAN com/checksyn.b[934] dsw("ELSE",s_else)
s_else M:122 MAN com/checksyn.b[968] dsw("OR",s_else)
s_endcase M:62 DEF bcplfecg.h[60] s_endcase=
s_endcase M:62 MAN com/checksyn.b[2304] CASE s_endcase:.. 
s_endcase M:62 MAN com/checksyn.b[2388] CASE s_endcase:.. 
s_endcase M:62 MAN com/checksyn.b[2575] CASE s_endcase:.. 
s_endcase M:62 MAN com/checksyn.b[2674] CASE s_endcase:.. 
s_endcase M:62 MAN com/checksyn.b[2906] CASE s_endcase:.. 
s_endcase M:62 MAN com/checksyn.b[3147] CASE s_endcase:.. 
s_endcase M:62 MAN com/checksyn.b[935] dsw("ENDCASE",s_endcase)
s_endfor M:149 DEF bcplfecg.h[95] s_endfor=
s_endfor M:149 MAN com/checksyn.b[2907] CASE s_endfor:.. 
s_endproc M:161 DEF bcplfecg.h[99] s_endproc=
s_endproc M:161 MAN com/checksyn.b[2908] CASE s_endproc:.. 
s_entry M:154 DEF bcplfecg.h[97] s_entry=
s_entry M:154 MAN com/checksyn.b[2909] CASE s_entry:.. 
s_eof M:130 DEF bcplfecg.h[83] s_eof=
s_eof M:130 MAN com/checksyn.b[1548] UNTIL token=s_eof DO ..
s_eof M:130 MAN com/checksyn.b[1782] pushtok(s_eof,0)
s_eof M:130 MAN com/checksyn.b[1807] IF token=s_eof DO ..
s_eof M:130 MAN com/checksyn.b[1973] UNLESS token=s_eof DO ..
s_eof M:130 MAN com/checksyn.b[1981] IF token=s_eof DO ..
s_eof M:130 MAN com/checksyn.b[2015] IF token=s_eof DO ..
s_eof M:130 MAN com/checksyn.b[2910] CASE s_eof:.. 
s_eof M:130 MAN com/checksyn.b[3148] CASE s_eof:.. 
s_eof M:130 MAN com/checksyn.b[398] IF token=s_eof DO ..
s_eof M:130 MAN com/checksyn.b[563]
    UNTIL skiptag=0|token=s_dot|token=s_eof DO ..
s_eof M:130 MAN com/checksyn.b[890] token:=s_eof
s_eq M:19 DEF bcplfecg.h[45] s_eq=
s_eq M:19 MAN com/checksyn.b[2050] IF token=s_colon|token=s_eq DO ..
s_eq M:19 MAN com/checksyn.b[2054] UNLESS token=s_eq DO ..
s_eq M:19 MAN com/checksyn.b[2102] IF token=s_eq DO ..
s_eq M:19 MAN com/checksyn.b[2112] CASE s_eq:.. 
s_eq M:19 MAN com/checksyn.b[2135] IF token=s_eq DO ..
s_eq M:19 MAN com/checksyn.b[2157] UNLESS token=s_eq DO ..
s_eq M:19 MAN com/checksyn.b[2282] CASE s_eq:.. 
s_eq M:19 MAN com/checksyn.b[2412] UNLESS token=s_eq DO ..
s_eq M:19 MAN com/checksyn.b[2829] CASE s_eq:.. 
s_eq M:19 MAN com/checksyn.b[2833]
    .. REPEATWHILE s_eq<=token&token<=s_ge|s_feq<=token&token<=s_fge
s_eq M:19 MAN com/checksyn.b[2911] CASE s_eq:.. 
s_eq M:19 MAN com/checksyn.b[3149] CASE s_eq:.. 
s_eq M:19 MAN com/checksyn.b[635] CASE s_eq:.. 
s_eq M:19 MAN com/checksyn.b[661] token:=s_eq
s_eq M:19 MAN com/checksyn.b[932] dsw("EQ",s_eq)
s_eqv M:34 DEF bcplfecg.h[49] s_eqv=
s_eqv M:34 MAN com/checksyn.b[2844] CASE s_eqv:.. 
s_eqv M:34 MAN com/checksyn.b[2912] CASE s_eqv:.. 
s_eqv M:34 MAN com/checksyn.b[3150] CASE s_eqv:.. 
s_eqv M:34 MAN com/checksyn.b[518] CASE s_eqv:.. 
s_eqv M:34 MAN com/checksyn.b[933] dsw("EQV",s_eqv)
s_every M:85 DEF bcplfecg.h[68] s_every=
s_every M:85 MAN com/checksyn.b[2462] CASE s_every:.. 
s_every M:85 MAN com/checksyn.b[2590] CASE s_every:.. 
s_every M:85 MAN com/checksyn.b[2719] CASE s_every:.. 
s_every M:85 MAN com/checksyn.b[2913] CASE s_every:.. 
s_every M:85 MAN com/checksyn.b[3151] CASE s_every:.. 
s_every M:85 MAN com/checksyn.b[936] dsw("EVERY",s_every)
s_everyc M:89 DEF bcplfecg.h[70] s_everyc=
s_everyc M:89 MAN com/checksyn.b[2914] CASE s_everyc:.. 
s_everye M:88 DEF bcplfecg.h[70] s_everye=
s_everye M:88 MAN com/checksyn.b[2915] CASE s_everye:.. 
s_exit M:57 DEF bcplfecg.h[58] s_exit=
s_exit M:57 MAN com/checksyn.b[2306] CASE s_exit:.. 
s_exit M:57 MAN com/checksyn.b[2387] CASE s_exit:.. 
s_exit M:57 MAN com/checksyn.b[2574] CASE s_exit:.. 
s_exit M:57 MAN com/checksyn.b[2676] CASE s_exit:.. 
s_exit M:57 MAN com/checksyn.b[2916] CASE s_exit:.. 
s_exit M:57 MAN com/checksyn.b[3152] CASE s_exit:.. 
s_exit M:57 MAN com/checksyn.b[937] dsw("EXIT",s_exit)
s_fabs M:167 DEF bcplfecg.h[104] s_fabs=
s_fabs M:167 MAN com/checksyn.b[2255] CASE s_fabs:.. 
s_fabs M:167 MAN com/checksyn.b[2488] CASE s_fabs:.. 
s_fabs M:167 MAN com/checksyn.b[2598] CASE s_fabs:.. 
s_fabs M:167 MAN com/checksyn.b[2702] CASE s_fabs:.. 
s_fabs M:167 MAN com/checksyn.b[2917] CASE s_fabs:.. 
s_fabs M:167 MAN com/checksyn.b[3153] CASE s_fabs:.. 
s_fabs M:167 MAN com/checksyn.b[619] token:=s_fabs
s_fadd M:171 DEF bcplfecg.h[105] s_fadd=
s_fadd M:171 MAN com/checksyn.b[2253] CASE s_fadd:.. 
s_fadd M:171 MAN com/checksyn.b[2488] CASE s_fadd:.. 
s_fadd M:171 MAN com/checksyn.b[2598] CASE s_fadd:.. 
s_fadd M:171 MAN com/checksyn.b[2698] CASE s_fadd:.. 
s_fadd M:171 MAN com/checksyn.b[2822] CASE s_fadd:.. 
s_fadd M:171 MAN com/checksyn.b[2918] CASE s_fadd:.. 
s_fadd M:171 MAN com/checksyn.b[3154] CASE s_fadd:.. 
s_fadd M:171 MAN com/checksyn.b[625] token:=s_fadd
s_false M:5 DEF bcplfecg.h[39] s_false=
s_false M:5 MAN com/checksyn.b[2246] CASE s_false:.. 
s_false M:5 MAN com/checksyn.b[2482] CASE s_false:.. 
s_false M:5 MAN com/checksyn.b[2595] CASE s_false:.. 
s_false M:5 MAN com/checksyn.b[2658] CASE s_false:.. 
s_false M:5 MAN com/checksyn.b[2919] CASE s_false:.. 
s_false M:5 MAN com/checksyn.b[3155] CASE s_false:.. 
s_false M:5 MAN com/checksyn.b[547]
    h1!wordnode:=token=s_true->s_false,s_true
s_false M:5 MAN com/checksyn.b[938] dsw("FALSE",s_false)
s_fass M:182 DEF bcplfecg.h[108] s_fass=
s_fass M:182 MAN com/checksyn.b[2555] CASE s_fass:.. 
s_fass M:182 MAN com/checksyn.b[2920] CASE s_fass:.. 
s_fass M:182 MAN com/checksyn.b[3156] CASE s_fass:.. 
s_fass M:182 MAN com/checksyn.b[628] token:=s_fass
s_fcond M:181 DEF bcplfecg.h[107] s_fcond=
s_fcond M:181 MAN com/checksyn.b[2847] CASE s_fcond:.. 
s_fcond M:181 MAN com/checksyn.b[2921] CASE s_fcond:.. 
s_fcond M:181 MAN com/checksyn.b[3157] CASE s_fcond:.. 
s_fcond M:181 MAN com/checksyn.b[642] token:=s_fcond
s_fdiv M:169 DEF bcplfecg.h[105] s_fdiv=
s_fdiv M:169 MAN com/checksyn.b[2816] CASE s_fdiv:.. 
s_fdiv M:169 MAN com/checksyn.b[2922] CASE s_fdiv:.. 
s_fdiv M:169 MAN com/checksyn.b[3158] CASE s_fdiv:.. 
s_fdiv M:169 MAN com/checksyn.b[623] token:=s_fdiv
s_feq M:175 DEF bcplfecg.h[106] s_feq=
s_feq M:175 MAN com/checksyn.b[2282] CASE s_feq:.. 
s_feq M:175 MAN com/checksyn.b[2827] CASE s_feq:.. 
s_feq M:175 MAN com/checksyn.b[2833]
    .. REPEATWHILE s_eq<=token&token<=s_ge|s_feq<=token&token<=s_fge
s_feq M:175 MAN com/checksyn.b[2923] CASE s_feq:.. 
s_feq M:175 MAN com/checksyn.b[3159] CASE s_feq:.. 
s_feq M:175 MAN com/checksyn.b[635] token:=s_feq
s_fge M:180 DEF bcplfecg.h[106] s_fge=
s_fge M:180 MAN com/checksyn.b[2285] CASE s_fge:.. 
s_fge M:180 MAN com/checksyn.b[2828] CASE s_fge:.. 
s_fge M:180 MAN com/checksyn.b[2833]
    .. REPEATWHILE s_eq<=token&token<=s_ge|s_feq<=token&token<=s_fge
s_fge M:180 MAN com/checksyn.b[2924] CASE s_fge:.. 
s_fge M:180 MAN com/checksyn.b[3160] CASE s_fge:.. 
s_fge M:180 MAN com/checksyn.b[640] token:=s_fge
s_fglobal M:326 DEF bcplfecg.h[140] s_fglobal=s_global+s_fltbit
s_fglobal M:326 MAN com/checksyn.b[2926] CASE s_fglobal:.. 
s_fgr M:178 DEF bcplfecg.h[106] s_fgr=
s_fgr M:178 MAN com/checksyn.b[2287] CASE s_fgr:.. 
s_fgr M:178 MAN com/checksyn.b[2828] CASE s_fgr:.. 
s_fgr M:178 MAN com/checksyn.b[2925] CASE s_fgr:.. 
s_fgr M:178 MAN com/checksyn.b[3161] CASE s_fgr:.. 
s_fgr M:178 MAN com/checksyn.b[639] token:=s_fgr
s_finish M:61 DEF bcplfecg.h[59] s_finish=
s_finish M:61 MAN com/checksyn.b[2390] CASE s_finish:.. 
s_finish M:61 MAN com/checksyn.b[2577] CASE s_finish:.. 
s_finish M:61 MAN com/checksyn.b[2927] CASE s_finish:.. 
s_finish M:61 MAN com/checksyn.b[3162] CASE s_finish:.. 
s_finish M:61 MAN com/checksyn.b[939] dsw("FINISH",s_finish)
s_fix M:166 DEF bcplfecg.h[104] s_fix=
s_fix M:166 MAN com/checksyn.b[2488] CASE s_fix:.. 
s_fix M:166 MAN com/checksyn.b[2598] CASE s_fix:.. 
s_fix M:166 MAN com/checksyn.b[2691] CASE s_fix:.. 
s_fix M:166 MAN com/checksyn.b[2928] CASE s_fix:.. 
s_fix M:166 MAN com/checksyn.b[3163] CASE s_fix:.. 
s_fix M:166 MAN com/checksyn.b[940] dsw("FIX",s_fix)
s_fle M:179 DEF bcplfecg.h[106] s_fle=
s_fle M:179 MAN com/checksyn.b[2284] CASE s_fle:.. 
s_fle M:179 MAN com/checksyn.b[2827] CASE s_fle:.. 
s_fle M:179 MAN com/checksyn.b[2929] CASE s_fle:.. 
s_fle M:179 MAN com/checksyn.b[3164] CASE s_fle:.. 
s_fle M:179 MAN com/checksyn.b[638] token:=s_fle
s_float M:165 DEF bcplfecg.h[104] s_float=
s_float M:165 MAN com/checksyn.b[2488] CASE s_float:.. 
s_float M:165 MAN com/checksyn.b[2598] CASE s_float:.. 
s_float M:165 MAN com/checksyn.b[2690] CASE s_float:.. 
s_float M:165 MAN com/checksyn.b[2930] CASE s_float:.. 
s_float M:165 MAN com/checksyn.b[3165] CASE s_float:.. 
s_float M:165 MAN com/checksyn.b[941] dsw("FLOAT",s_float)
s_flocal M:334 DEF bcplfecg.h[141] s_flocal=s_local+s_fltbit
s_flocal M:334 MAN com/checksyn.b[2931] CASE s_flocal:.. 
s_fls M:177 DEF bcplfecg.h[106] s_fls=
s_fls M:177 MAN com/checksyn.b[2286] CASE s_fls:.. 
s_fls M:177 MAN com/checksyn.b[2827] CASE s_fls:.. 
s_fls M:177 MAN com/checksyn.b[2933] CASE s_fls:.. 
s_fls M:177 MAN com/checksyn.b[3167] CASE s_fls:.. 
s_fls M:177 MAN com/checksyn.b[637] token:=s_fls
s_flt M:203 DEF bcplfecg.h[126] s_flt=
s_flt M:203 MAN com/checksyn.b[2043]
    WHILE token=s_name|token=s_flt DO ..
s_flt M:203 MAN com/checksyn.b[2044] IF token=s_flt DO ..
s_flt M:203 MAN com/checksyn.b[2088] IF token=s_flt DO ..
s_flt M:203 MAN com/checksyn.b[2129] UNLESS n=0&token=s_flt DO ..
s_flt M:203 MAN com/checksyn.b[2150] IF token=s_flt DO ..
s_flt M:203 MAN com/checksyn.b[2328] CASE s_flt:.. 
s_flt M:203 MAN com/checksyn.b[2932] CASE s_flt:.. 
s_flt M:203 MAN com/checksyn.b[3166] CASE s_flt:.. 
s_flt M:203 MAN com/checksyn.b[942] dsw("FLT",s_flt)
s_fltbit M:256 DEF bcplfecg.h[136] s_fltbit=256
s_fltbit M:256 MAN bcplfecg.h[137] s_fltmask=s_fltbit-1
s_fltbit M:256 MAN bcplfecg.h[140] s_fglobal=s_global+s_fltbit
s_fltbit M:256 MAN bcplfecg.h[141] s_flocal=s_local+s_fltbit
s_fltbit M:256 MAN bcplfecg.h[142] s_fpath1=s_path1+s_fltbit
s_fltbit M:256 MAN bcplfecg.h[143] s_fpath2=s_path2+s_fltbit
s_fltbit M:256 MAN bcplfecg.h[144] s_fpath3=s_path3+s_fltbit
s_fltbit M:256 MAN bcplfecg.h[145] s_fpath4=s_path4+s_fltbit
s_fltbit M:256 MAN bcplfecg.h[146] s_fstatic=s_static+s_fltbit
s_fltbit M:256 MAN bcplfecg.h[147] s_fmanifest=s_manifest+s_fltbit
s_fltmask M:255 DEF bcplfecg.h[137] s_fltmask=s_fltbit-1
s_fltop M:202 DEF bcplfecg.h[121] s_fltop=
s_fltop M:202 MAN com/checksyn.b[2934] CASE s_fltop:.. 
s_fmanifest M:325 DEF bcplfecg.h[147] s_fmanifest=s_manifest+s_fltbit
s_fmanifest M:325 MAN com/checksyn.b[2935] CASE s_fmanifest:.. 
s_fmod M:170 DEF bcplfecg.h[105] s_fmod=
s_fmod M:170 MAN com/checksyn.b[2817] CASE s_fmod:.. 
s_fmod M:170 MAN com/checksyn.b[2936] CASE s_fmod:.. 
s_fmod M:170 MAN com/checksyn.b[3168] CASE s_fmod:.. 
s_fmod M:170 MAN com/checksyn.b[624] token:=s_fmod
s_fmul M:168 DEF bcplfecg.h[105] s_fmul=
s_fmul M:168 MAN com/checksyn.b[2815] CASE s_fmul:.. 
s_fmul M:168 MAN com/checksyn.b[2943] CASE s_fmul:.. 
s_fmul M:168 MAN com/checksyn.b[3171] CASE s_fmul:.. 
s_fmul M:168 MAN com/checksyn.b[622] token:=s_fmul
s_fnap M:10 DEF bcplfecg.h[40] s_fnap=
s_fnap M:10 MAN com/checksyn.b[2937] CASE s_fnap:.. 
s_fndef M:76 DEF bcplfecg.h[64] s_fndef=
s_fndef M:76 MAN com/checksyn.b[2939] CASE s_fndef:.. 
s_fne M:176 DEF bcplfecg.h[106] s_fne=
s_fne M:176 MAN com/checksyn.b[2283] CASE s_fne:.. 
s_fne M:176 MAN com/checksyn.b[2828] CASE s_fne:.. 
s_fne M:176 MAN com/checksyn.b[2940] CASE s_fne:.. 
s_fne M:176 MAN com/checksyn.b[3169] CASE s_fne:.. 
s_fne M:176 MAN com/checksyn.b[636] token:=s_fne
s_fneg M:174 DEF bcplfecg.h[105] s_fneg=
s_fneg M:174 MAN com/checksyn.b[2941] CASE s_fneg:.. 
s_fneg M:174 MAN com/checksyn.b[3170] CASE s_fneg:.. 
s_fnrn M:156 DEF bcplfecg.h[98] s_fnrn=
s_fnrn M:156 MAN com/checksyn.b[2938] CASE s_fnrn:.. 
s_fnum M:164 DEF bcplfecg.h[103] s_fnum=
s_fnum M:164 MAN com/checksyn.b[1164] IF token=s_fnum DO ..
s_fnum M:164 MAN com/checksyn.b[1165] token:=s_fnum
s_fnum M:164 MAN com/checksyn.b[1181] token:=s_fnum
s_fnum M:164 MAN com/checksyn.b[1586] CASE s_fnum:.. 
s_fnum M:164 MAN com/checksyn.b[1821] CASE s_fnum:.. 
s_fnum M:164 MAN com/checksyn.b[2244] CASE s_fnum:.. 
s_fnum M:164 MAN com/checksyn.b[2257]
    UNLESS token=s_number|token=s_fnum DO ..
s_fnum M:164 MAN com/checksyn.b[2480] CASE s_fnum:.. 
s_fnum M:164 MAN com/checksyn.b[2593] CASE s_fnum:.. 
s_fnum M:164 MAN com/checksyn.b[2656] CASE s_fnum:.. 
s_fnum M:164 MAN com/checksyn.b[2942] CASE s_fnum:.. 
s_fnum M:164 MAN com/checksyn.b[3096] CASE s_fnum:.. 
s_for M:47 DEF bcplfecg.h[54] s_for=
s_for M:47 MAN com/checksyn.b[2408] CASE s_for:.. 
s_for M:47 MAN com/checksyn.b[2582] CASE s_for:.. 
s_for M:47 MAN com/checksyn.b[2954] CASE s_for:.. 
s_for M:47 MAN com/checksyn.b[3177] CASE s_for:.. 
s_for M:47 MAN com/checksyn.b[943] dsw("FOR",s_for)
s_fpath1 M:336 DEF bcplfecg.h[142] s_fpath1=s_path1+s_fltbit
s_fpath1 M:336 MAN com/checksyn.b[2944] CASE s_fpath1:.. 
s_fpath2 M:337 DEF bcplfecg.h[143] s_fpath2=s_path2+s_fltbit
s_fpath2 M:337 MAN com/checksyn.b[2945] CASE s_fpath2:.. 
s_fpath3 M:338 DEF bcplfecg.h[144] s_fpath3=s_path3+s_fltbit
s_fpath3 M:338 MAN com/checksyn.b[2946] CASE s_fpath3:.. 
s_fpath4 M:339 DEF bcplfecg.h[145] s_fpath4=s_path4+s_fltbit
s_fpath4 M:339 MAN com/checksyn.b[2947] CASE s_fpath4:.. 
s_fpos M:173 DEF bcplfecg.h[105] s_fpos=
s_fpos M:173 MAN com/checksyn.b[2948] CASE s_fpos:.. 
s_fpos M:173 MAN com/checksyn.b[3172] CASE s_fpos:.. 
s_frange M:112 DEF bcplfecg.h[77] s_frange=
s_frange M:112 MAN com/checksyn.b[2276]
    IF token=s_range|token=s_frange DO ..
s_frange M:112 MAN com/checksyn.b[2949] CASE s_frange:.. 
s_frange M:112 MAN com/checksyn.b[3173] CASE s_frange:.. 
s_frange M:112 MAN com/checksyn.b[620] token:=s_frange
s_fstatic M:327 DEF bcplfecg.h[146] s_fstatic=s_static+s_fltbit
s_fstatic M:327 MAN com/checksyn.b[2951] CASE s_fstatic:.. 
s_fsub M:172 DEF bcplfecg.h[105] s_fsub=
s_fsub M:172 MAN com/checksyn.b[2254] CASE s_fsub:.. 
s_fsub M:172 MAN com/checksyn.b[2488] CASE s_fsub:.. 
s_fsub M:172 MAN com/checksyn.b[2598] CASE s_fsub:.. 
s_fsub M:172 MAN com/checksyn.b[2701] CASE s_fsub:.. 
s_fsub M:172 MAN com/checksyn.b[2823] CASE s_fsub:.. 
s_fsub M:172 MAN com/checksyn.b[2952] CASE s_fsub:.. 
s_fsub M:172 MAN com/checksyn.b[3175] CASE s_fsub:.. 
s_fsub M:172 MAN com/checksyn.b[626] token:=s_fsub
s_ge M:24 DEF bcplfecg.h[45] s_ge=
s_ge M:24 MAN com/checksyn.b[2285] CASE s_ge:.. 
s_ge M:24 MAN com/checksyn.b[2830] CASE s_ge:.. 
s_ge M:24 MAN com/checksyn.b[2833]
    .. REPEATWHILE s_eq<=token&token<=s_ge|s_feq<=token&token<=s_fge
s_ge M:24 MAN com/checksyn.b[2955] CASE s_ge:.. 
s_ge M:24 MAN com/checksyn.b[3178] CASE s_ge:.. 
s_ge M:24 MAN com/checksyn.b[640] CASE s_ge:.. 
s_ge M:24 MAN com/checksyn.b[747] token:=s_ge
s_ge M:24 MAN com/checksyn.b[945] dsw("GE",s_ge)
s_get M:116 DEF bcplfecg.h[81] s_get=
s_get M:116 MAN com/checksyn.b[2956] CASE s_get:.. 
s_get M:116 MAN com/checksyn.b[3179] CASE s_get:.. 
s_get M:116 MAN com/checksyn.b[502] CASE s_get:.. 
s_get M:116 MAN com/checksyn.b[948] dsw("GET",s_get)
s_getbyte M:162 DEF bcplfecg.h[99] s_getbyte=
s_getbyte M:162 MAN com/checksyn.b[2957] CASE s_getbyte:.. 
s_getbyte M:162 MAN com/checksyn.b[3180] CASE s_getbyte:.. 
s_global M:70 DEF bcplfecg.h[62] s_global=
s_global M:70 MAN bcplfecg.h[140] s_fglobal=s_global+s_fltbit
s_global M:70 MAN com/checksyn.b[1748] CASE s_global:.. 
s_global M:70 MAN com/checksyn.b[1856] CASE s_global:.. 
s_global M:70 MAN com/checksyn.b[1984]
    IF tokval=0&(token=s_global|token=s_manifest|token=s_static|token=s_let|token=s_and) DO ..
s_global M:70 MAN com/checksyn.b[2010]
    .. REPEATWHILE token=s_global|token=s_manifest|token=s_static|token=s_let
s_global M:70 MAN com/checksyn.b[2033] CASE s_global:.. 
s_global M:70 MAN com/checksyn.b[2051] TEST op=s_global THEN .. ELSE ..
s_global M:70 MAN com/checksyn.b[2432]
    WHILE token=s_global|token=s_manifest|token=s_static|token=s_let DO ..
s_global M:70 MAN com/checksyn.b[2958] CASE s_global:.. 
s_global M:70 MAN com/checksyn.b[3181] CASE s_global:.. 
s_global M:70 MAN com/checksyn.b[947] dsw("GLOBAL",s_global)
s_goto M:43 DEF bcplfecg.h[53] s_goto=
s_goto M:43 MAN com/checksyn.b[2396] CASE s_goto:.. 
s_goto M:43 MAN com/checksyn.b[2580] CASE s_goto:.. 
s_goto M:43 MAN com/checksyn.b[2959] CASE s_goto:.. 
s_goto M:43 MAN com/checksyn.b[3182] CASE s_goto:.. 
s_goto M:43 MAN com/checksyn.b[944] dsw("GOTO",s_goto)
s_gr M:22 DEF bcplfecg.h[45] s_gr=
s_gr M:22 MAN com/checksyn.b[2287] CASE s_gr:.. 
s_gr M:22 MAN com/checksyn.b[2830] CASE s_gr:.. 
s_gr M:22 MAN com/checksyn.b[2960] CASE s_gr:.. 
s_gr M:22 MAN com/checksyn.b[3183] CASE s_gr:.. 
s_gr M:22 MAN com/checksyn.b[639] CASE s_gr:.. 
s_gr M:22 MAN com/checksyn.b[752] token:=s_gr
s_gr M:22 MAN com/checksyn.b[946] dsw("GR",s_gr)
s_if M:48 DEF bcplfecg.h[54] s_if=
s_if M:48 MAN com/checksyn.b[2420] CASE s_if:.. 
s_if M:48 MAN com/checksyn.b[2583] CASE s_if:.. 
s_if M:48 MAN com/checksyn.b[2961] CASE s_if:.. 
s_if M:48 MAN com/checksyn.b[3184] CASE s_if:.. 
s_if M:48 MAN com/checksyn.b[949] dsw("IF",s_if)
s_into M:118 DEF bcplfecg.h[82] s_into=
s_into M:118 MAN com/checksyn.b[2448] UNLESS token=s_into DO ..
s_into M:118 MAN com/checksyn.b[2962] CASE s_into:.. 
s_into M:118 MAN com/checksyn.b[3185] CASE s_into:.. 
s_into M:118 MAN com/checksyn.b[950] dsw("INTO",s_into)
s_itemn M:160 DEF bcplfecg.h[98] s_itemn=
s_itemn M:160 MAN com/checksyn.b[2963] CASE s_itemn:.. 
s_jf M:148 DEF bcplfecg.h[94] s_jf=
s_jf M:148 MAN com/checksyn.b[2964] CASE s_jf:.. 
s_jt M:147 DEF bcplfecg.h[94] s_jt=
s_jt M:147 MAN com/checksyn.b[2965] CASE s_jt:.. 
s_jump M:146 DEF bcplfecg.h[94] s_jump=
s_jump M:146 MAN com/checksyn.b[2966] CASE s_jump:.. 
s_lab M:150 DEF bcplfecg.h[97] s_lab=
s_lab M:150 MAN com/checksyn.b[2967] CASE s_lab:.. 
s_label M:79 DEF bcplfecg.h[64] s_label=
s_le M:23 DEF bcplfecg.h[45] s_le=
s_le M:23 MAN com/checksyn.b[2284] CASE s_le:.. 
s_le M:23 MAN com/checksyn.b[2829] CASE s_le:.. 
s_le M:23 MAN com/checksyn.b[2968] CASE s_le:.. 
s_le M:23 MAN com/checksyn.b[3186] CASE s_le:.. 
s_le M:23 MAN com/checksyn.b[638] CASE s_le:.. 
s_le M:23 MAN com/checksyn.b[737] token:=s_le
s_le M:23 MAN com/checksyn.b[953] dsw("LE",s_le)
s_let M:67 DEF bcplfecg.h[62] s_let=
s_let M:67 MAN com/checksyn.b[1751] CASE s_let:.. 
s_let M:67 MAN com/checksyn.b[1859] CASE s_let:.. 
s_let M:67 MAN com/checksyn.b[1983] token:=s_let
s_let M:67 MAN com/checksyn.b[1984]
    IF tokval=0&(token=s_global|token=s_manifest|token=s_static|token=s_let|token=s_and) DO ..
s_let M:67 MAN com/checksyn.b[2010]
    .. REPEATWHILE token=s_global|token=s_manifest|token=s_static|token=s_let
s_let M:67 MAN com/checksyn.b[2068] CASE s_let:.. 
s_let M:67 MAN com/checksyn.b[2432]
    WHILE token=s_global|token=s_manifest|token=s_static|token=s_let DO ..
s_let M:67 MAN com/checksyn.b[2969] CASE s_let:.. 
s_let M:67 MAN com/checksyn.b[3187] CASE s_let:.. 
s_let M:67 MAN com/checksyn.b[951] dsw("LET",s_let)
s_lf M:133 DEF bcplfecg.h[91] s_lf=
s_lf M:133 MAN com/checksyn.b[2970] CASE s_lf:.. 
s_lg M:135 DEF bcplfecg.h[91] s_lg=
s_lg M:135 MAN com/checksyn.b[2971] CASE s_lg:.. 
s_line M:206 DEF bcplfecg.h[130] s_line=
s_line M:206 MAN com/checksyn.b[2972] CASE s_line:.. 
s_ll M:138 DEF bcplfecg.h[93] s_ll=
s_ll M:138 MAN com/checksyn.b[2973] CASE s_ll:.. 
s_llg M:140 DEF bcplfecg.h[93] s_llg=
s_llg M:140 MAN com/checksyn.b[2974] CASE s_llg:.. 
s_lll M:141 DEF bcplfecg.h[93] s_lll=
s_lll M:141 MAN com/checksyn.b[2975] CASE s_lll:.. 
s_llp M:139 DEF bcplfecg.h[93] s_llp=
s_llp M:139 MAN com/checksyn.b[2976] CASE s_llp:.. 
s_ln M:136 DEF bcplfecg.h[92] s_ln=
s_ln M:136 MAN com/checksyn.b[2977] CASE s_ln:.. 
s_local M:78 DEF bcplfecg.h[64] s_local=
s_local M:78 MAN bcplfecg.h[141] s_flocal=s_local+s_fltbit
s_local M:78 MAN com/checksyn.b[2978] CASE s_local:.. 
s_logand M:32 DEF bcplfecg.h[48] s_logand=
s_logand M:32 MAN com/checksyn.b[2840] CASE s_logand:.. 
s_logand M:32 MAN com/checksyn.b[2979] CASE s_logand:.. 
s_logand M:32 MAN com/checksyn.b[3188] CASE s_logand:.. 
s_logand M:32 MAN com/checksyn.b[516] CASE s_logand:.. 
s_logand M:32 MAN com/checksyn.b[681] token:=s_logand
s_logand M:32 MAN com/checksyn.b[956] dsw("LOGAND",s_logand)
s_logor M:33 DEF bcplfecg.h[48] s_logor=
s_logor M:33 MAN com/checksyn.b[2360] CASE s_logor:.. 
s_logor M:33 MAN com/checksyn.b[2842] CASE s_logor:.. 
s_logor M:33 MAN com/checksyn.b[2980] CASE s_logor:.. 
s_logor M:33 MAN com/checksyn.b[3189] CASE s_logor:.. 
s_logor M:33 MAN com/checksyn.b[517] CASE s_logor:.. 
s_logor M:33 MAN com/checksyn.b[682] token:=s_logor
s_logor M:33 MAN com/checksyn.b[955] dsw("LOGOR",s_logor)
s_loop M:58 DEF bcplfecg.h[59] s_loop=
s_loop M:58 MAN com/checksyn.b[2303] CASE s_loop:.. 
s_loop M:58 MAN com/checksyn.b[2385] CASE s_loop:.. 
s_loop M:58 MAN com/checksyn.b[2572] CASE s_loop:.. 
s_loop M:58 MAN com/checksyn.b[2673] CASE s_loop:.. 
s_loop M:58 MAN com/checksyn.b[2981] CASE s_loop:.. 
s_loop M:58 MAN com/checksyn.b[3190] CASE s_loop:.. 
s_loop M:58 MAN com/checksyn.b[957] dsw("LOOP",s_loop)
s_lp M:134 DEF bcplfecg.h[91] s_lp=
s_lp M:134 MAN com/checksyn.b[2982] CASE s_lp:.. 
s_lparen M:124 DEF bcplfecg.h[83] s_lparen=
s_lparen M:124 MAN com/checksyn.b[1606]
    IF brackettokv!bracketdepth=s_lparen DO ..
s_lparen M:124 MAN com/checksyn.b[1716] CASE s_lparen:.. 
s_lparen M:124 MAN com/checksyn.b[1727]
    UNLESS bracketdepth&brackettokv!bracketdepth=s_lparen DO ..
s_lparen M:124 MAN com/checksyn.b[1742]
    UNLESS bracketdepth&bracketvalv!bracketdepth=s_lparen DO ..
s_lparen M:124 MAN com/checksyn.b[2084] CASE s_lparen:.. 
s_lparen M:124 MAN com/checksyn.b[2289] IF token=s_lparen DO ..
s_lparen M:124 MAN com/checksyn.b[2310] CASE s_lparen:.. 
s_lparen M:124 MAN com/checksyn.b[2464] UNLESS token=s_lparen DO ..
s_lparen M:124 MAN com/checksyn.b[2481] CASE s_lparen:.. 
s_lparen M:124 MAN com/checksyn.b[2594] CASE s_lparen:.. 
s_lparen M:124 MAN com/checksyn.b[2682] CASE s_lparen:.. 
s_lparen M:124 MAN com/checksyn.b[2721] UNLESS token=s_lparen DO ..
s_lparen M:124 MAN com/checksyn.b[2767] CASE s_lparen:.. 
s_lparen M:124 MAN com/checksyn.b[2786] UNLESS token=s_lparen DO ..
s_lparen M:124 MAN com/checksyn.b[2983] CASE s_lparen:.. 
s_lparen M:124 MAN com/checksyn.b[3191] CASE s_lparen:.. 
s_lparen M:124 MAN com/checksyn.b[3266] CASE s_lparen:.. 
s_lparen M:124 MAN com/checksyn.b[649] token:=s_lparen
s_ls M:21 DEF bcplfecg.h[45] s_ls=
s_ls M:21 MAN com/checksyn.b[2286] CASE s_ls:.. 
s_ls M:21 MAN com/checksyn.b[2829] CASE s_ls:.. 
s_ls M:21 MAN com/checksyn.b[2984] CASE s_ls:.. 
s_ls M:21 MAN com/checksyn.b[3192] CASE s_ls:.. 
s_ls M:21 MAN com/checksyn.b[637] CASE s_ls:.. 
s_ls M:21 MAN com/checksyn.b[743] token:=s_ls
s_ls M:21 MAN com/checksyn.b[954] dsw("LS",s_ls)
s_lsect M:114 DEF bcplfecg.h[81] s_lsect=
s_lsect M:114 MAN com/checksyn.b[1593] CASE s_lsect:.. 
s_lsect M:114 MAN com/checksyn.b[1672]
    IF brackettokv!i=s_lsect&bracketvalv!i=sectiontag DO ..
s_lsect M:114 MAN com/checksyn.b[1825] CASE s_lsect:.. 
s_lsect M:114 MAN com/checksyn.b[2039] UNLESS token=s_lsect DO ..
s_lsect M:114 MAN com/checksyn.b[2429] CASE s_lsect:.. 
s_lsect M:114 MAN com/checksyn.b[2450] UNLESS token=s_lsect DO ..
s_lsect M:114 MAN com/checksyn.b[2587] CASE s_lsect:.. 
s_lsect M:114 MAN com/checksyn.b[2985] CASE s_lsect:.. 
s_lsect M:114 MAN com/checksyn.b[3097] CASE s_lsect:.. 
s_lsect M:114 MAN com/checksyn.b[3268] CASE s_lsect:.. 
s_lsect M:114 MAN com/checksyn.b[570] token:=s_lsect
s_lsect M:114 MAN com/checksyn.b[584] token:=s_lsect
s_lshift M:30 DEF bcplfecg.h[48] s_lshift=
s_lshift M:30 MAN com/checksyn.b[2837] CASE s_lshift:.. 
s_lshift M:30 MAN com/checksyn.b[2986] CASE s_lshift:.. 
s_lshift M:30 MAN com/checksyn.b[3193] CASE s_lshift:.. 
s_lshift M:30 MAN com/checksyn.b[514] CASE s_lshift:.. 
s_lshift M:30 MAN com/checksyn.b[739] token:=s_lshift
s_lshift M:30 MAN com/checksyn.b[958] dsw("LSHIFT",s_lshift)
s_lstr M:137 DEF bcplfecg.h[93] s_lstr=
s_lstr M:137 MAN com/checksyn.b[2987] CASE s_lstr:.. 
s_lv M:7 DEF bcplfecg.h[40] s_lv=
s_lv M:7 MAN com/checksyn.b[2483] CASE s_lv:.. 
s_lv M:7 MAN com/checksyn.b[2595] CASE s_lv:.. 
s_lv M:7 MAN com/checksyn.b[2692] CASE s_lv:.. 
s_lv M:7 MAN com/checksyn.b[2988] CASE s_lv:.. 
s_lv M:7 MAN com/checksyn.b[3194] CASE s_lv:.. 
s_lv M:7 MAN com/checksyn.b[656] token:=s_lv
s_lv M:7 MAN com/checksyn.b[952] dsw("LV",s_lv)
s_manifest M:69 DEF bcplfecg.h[62] s_manifest=
s_manifest M:69 MAN bcplfecg.h[147] s_fmanifest=s_manifest+s_fltbit
s_manifest M:69 MAN com/checksyn.b[1749] CASE s_manifest:.. 
s_manifest M:69 MAN com/checksyn.b[1857] CASE s_manifest:.. 
s_manifest M:69 MAN com/checksyn.b[1984]
    IF tokval=0&(token=s_global|token=s_manifest|token=s_static|token=s_let|token=s_and) DO ..
s_manifest M:69 MAN com/checksyn.b[2010]
    .. REPEATWHILE token=s_global|token=s_manifest|token=s_static|token=s_let
s_manifest M:69 MAN com/checksyn.b[2034] CASE s_manifest:.. 
s_manifest M:69 MAN com/checksyn.b[2432]
    WHILE token=s_global|token=s_manifest|token=s_static|token=s_let DO ..
s_manifest M:69 MAN com/checksyn.b[2989] CASE s_manifest:.. 
s_manifest M:69 MAN com/checksyn.b[3195] CASE s_manifest:.. 
s_manifest M:69 MAN com/checksyn.b[959] dsw("MANIFEST",s_manifest)
s_match M:84 DEF bcplfecg.h[68] s_match=
s_match M:84 MAN com/checksyn.b[2461] CASE s_match:.. 
s_match M:84 MAN com/checksyn.b[2589] CASE s_match:.. 
s_match M:84 MAN com/checksyn.b[2718] CASE s_match:.. 
s_match M:84 MAN com/checksyn.b[2990] CASE s_match:.. 
s_match M:84 MAN com/checksyn.b[3196] CASE s_match:.. 
s_match M:84 MAN com/checksyn.b[960] dsw("MATCH",s_match)
s_matchc M:87 DEF bcplfecg.h[69] s_matchc=
s_matchc M:87 MAN com/checksyn.b[2991] CASE s_matchc:.. 
s_matche M:86 DEF bcplfecg.h[69] s_matche=
s_matche M:86 MAN com/checksyn.b[2992] CASE s_matche:.. 
s_matchitemc M:90 DEF bcplfecg.h[71] s_matchitemc=
s_matchitemc M:90 MAN com/checksyn.b[2993] CASE s_matchitemc:.. 
s_matchiteme M:91 DEF bcplfecg.h[71] s_matchiteme=
s_matchiteme M:91 MAN com/checksyn.b[2994] CASE s_matchiteme:.. 
s_mod M:16 DEF bcplfecg.h[43] s_mod=
s_mod M:16 MAN com/checksyn.b[2820] CASE s_mod:.. 
s_mod M:16 MAN com/checksyn.b[3037] CASE s_mod:.. 
s_mod M:16 MAN com/checksyn.b[3197] CASE s_mod:.. 
s_mod M:16 MAN com/checksyn.b[513] CASE s_mod:.. 
s_mod M:16 MAN com/checksyn.b[624] CASE s_mod:.. 
s_mod M:16 MAN com/checksyn.b[961] dsw("MOD",s_mod)
s_mod M:16 MAN com/checksyn.b[971] dsw("REM",s_mod)
s_mthap M:28 DEF bcplfecg.h[47] s_mthap=
s_mthap M:28 MAN com/checksyn.b[2783] CASE s_mthap:.. 
s_mthap M:28 MAN com/checksyn.b[2995] CASE s_mthap:.. 
s_mthap M:28 MAN com/checksyn.b[3198] CASE s_mthap:.. 
s_mthap M:28 MAN com/checksyn.b[610] token:=s_mthap
s_mul M:14 DEF bcplfecg.h[43] s_mul=
s_mul M:14 MAN com/checksyn.b[2818] CASE s_mul:.. 
s_mul M:14 MAN com/checksyn.b[2996] CASE s_mul:.. 
s_mul M:14 MAN com/checksyn.b[3199] CASE s_mul:.. 
s_mul M:14 MAN com/checksyn.b[622] CASE s_mul:.. 
s_mul M:14 MAN com/checksyn.b[679] token:=s_mul
s_name M:2 DEF bcplfecg.h[39] s_name=
s_name M:2 MAN com/checksyn.b[1572] CASE s_name:.. 
s_name M:2 MAN com/checksyn.b[1812] CASE s_name:.. 
s_name M:2 MAN com/checksyn.b[2043] WHILE token=s_name|token=s_flt DO ..
s_name M:2 MAN com/checksyn.b[2046] UNLESS token=s_name DO ..
s_name M:2 MAN com/checksyn.b[2076] IF token=s_name DO ..
s_name M:2 MAN com/checksyn.b[2089] UNLESS token=s_name DO ..
s_name M:2 MAN com/checksyn.b[2132] UNLESS token=s_name DO ..
s_name M:2 MAN com/checksyn.b[2151] UNLESS token=s_name DO ..
s_name M:2 MAN com/checksyn.b[2249] CASE s_name:.. 
s_name M:2 MAN com/checksyn.b[2330] UNLESS token=s_name DO ..
s_name M:2 MAN com/checksyn.b[2410] UNLESS token=s_name DO ..
s_name M:2 MAN com/checksyn.b[2480] CASE s_name:.. 
s_name M:2 MAN com/checksyn.b[2593] CASE s_name:.. 
s_name M:2 MAN com/checksyn.b[2650] CASE s_name:.. 
s_name M:2 MAN com/checksyn.b[2997] CASE s_name:.. 
s_name M:2 MAN com/checksyn.b[3093] CASE s_name:.. 
s_name M:2 MAN com/checksyn.b[912] h1!wordnode:=s_name
s_ne M:20 DEF bcplfecg.h[45] s_ne=
s_ne M:20 MAN com/checksyn.b[2283] CASE s_ne:.. 
s_ne M:20 MAN com/checksyn.b[2830] CASE s_ne:.. 
s_ne M:20 MAN com/checksyn.b[2998] CASE s_ne:.. 
s_ne M:20 MAN com/checksyn.b[3200] CASE s_ne:.. 
s_ne M:20 MAN com/checksyn.b[636] CASE s_ne:.. 
s_ne M:20 MAN com/checksyn.b[722] token:=s_ne
s_ne M:20 MAN com/checksyn.b[732] token:=s_ne
s_ne M:20 MAN com/checksyn.b[962] dsw("NE",s_ne)
s_needs M:39 DEF bcplfecg.h[50] s_needs=
s_needs M:39 MAN com/checksyn.b[1982]
    IF token=s_section|token=s_needs DO ..
s_needs M:39 MAN com/checksyn.b[2001] WHILE token=s_needs DO ..
s_needs M:39 MAN com/checksyn.b[2999] CASE s_needs:.. 
s_needs M:39 MAN com/checksyn.b[3201] CASE s_needs:.. 
s_needs M:39 MAN com/checksyn.b[963] dsw("NEEDS",s_needs)
s_neg M:12 DEF bcplfecg.h[42] s_neg=
s_neg M:12 MAN com/checksyn.b[3000] CASE s_neg:.. 
s_neg M:12 MAN com/checksyn.b[3202] CASE s_neg:.. 
s_next M:56 DEF bcplfecg.h[57] s_next=
s_next M:56 MAN com/checksyn.b[2305] CASE s_next:.. 
s_next M:56 MAN com/checksyn.b[2386] CASE s_next:.. 
s_next M:56 MAN com/checksyn.b[2573] CASE s_next:.. 
s_next M:56 MAN com/checksyn.b[2675] CASE s_next:.. 
s_next M:56 MAN com/checksyn.b[3001] CASE s_next:.. 
s_next M:56 MAN com/checksyn.b[3203] CASE s_next:.. 
s_next M:56 MAN com/checksyn.b[965] dsw("NEXT",s_next)
s_none M:132 DEF bcplfecg.h[88] s_none=
s_none M:132 MAN com/checksyn.b[3002] CASE s_none:.. 
s_not M:29 DEF bcplfecg.h[48] s_not=
s_not M:29 MAN com/checksyn.b[2487] CASE s_not:.. 
s_not M:29 MAN com/checksyn.b[2597] CASE s_not:.. 
s_not M:29 MAN com/checksyn.b[2708] CASE s_not:.. 
s_not M:29 MAN com/checksyn.b[3003] CASE s_not:.. 
s_not M:29 MAN com/checksyn.b[3204] CASE s_not:.. 
s_not M:29 MAN com/checksyn.b[723] token:=s_not
s_not M:29 MAN com/checksyn.b[733] token:=s_not
s_not M:29 MAN com/checksyn.b[966] dsw("NOT",s_not)
s_notflt M:204 DEF bcplfecg.h[127] s_notflt=
s_number M:1 DEF bcplfecg.h[38] s_number=1
s_number M:1 MAN com/checksyn.b[1124] token:=s_number
s_number M:1 MAN com/checksyn.b[1141] IF token=s_number DO ..
s_number M:1 MAN com/checksyn.b[1191] IF token=s_number DO ..
s_number M:1 MAN com/checksyn.b[1579] CASE s_number:.. 
s_number M:1 MAN com/checksyn.b[1817] CASE s_number:.. 
s_number M:1 MAN com/checksyn.b[2243] CASE s_number:.. 
s_number M:1 MAN com/checksyn.b[2257]
    UNLESS token=s_number|token=s_fnum DO ..
s_number M:1 MAN com/checksyn.b[2480] CASE s_number:.. 
s_number M:1 MAN com/checksyn.b[2593] CASE s_number:.. 
s_number M:1 MAN com/checksyn.b[2655] CASE s_number:.. 
s_number M:1 MAN com/checksyn.b[3004] CASE s_number:.. 
s_number M:1 MAN com/checksyn.b[3095] CASE s_number:.. 
s_number M:1 MAN com/checksyn.b[506] token:=s_number
s_number M:1 MAN com/checksyn.b[588] token:=s_number
s_number M:1 MAN com/checksyn.b[871] token:=s_number
s_of M:26 DEF bcplfecg.h[46] s_of=
s_of M:26 MAN com/checksyn.b[2811] CASE s_of:.. 
s_of M:26 MAN com/checksyn.b[3005] CASE s_of:.. 
s_of M:26 MAN com/checksyn.b[3205] CASE s_of:.. 
s_of M:26 MAN com/checksyn.b[762] token:=s_of
s_of M:26 MAN com/checksyn.b[967] dsw("OF",s_of)
s_opmax M:208 DEF bcplfecg.h[134] s_opmax=
s_opmax M:208 MAN com/checksyn.b[234] UNLESS s_opmax<256 DO ..
s_patand M:109 DEF bcplfecg.h[77] s_patand=
s_patand M:109 MAN com/checksyn.b[3030] CASE s_patand:.. 
s_pateq M:97 DEF bcplfecg.h[75] s_pateq=
s_pateq M:97 MAN com/checksyn.b[3011] CASE s_pateq:.. 
s_pateq M:97 MAN com/checksyn.b[3208] CASE s_pateq:.. 
s_patfeq M:103 DEF bcplfecg.h[76] s_patfeq=
s_patfeq M:103 MAN com/checksyn.b[3018] CASE s_patfeq:.. 
s_patfeq M:103 MAN com/checksyn.b[3215] CASE s_patfeq:.. 
s_patfge M:108 DEF bcplfecg.h[76] s_patfge=
s_patfge M:108 MAN com/checksyn.b[3023] CASE s_patfge:.. 
s_patfge M:108 MAN com/checksyn.b[3220] CASE s_patfge:.. 
s_patfgr M:106 DEF bcplfecg.h[76] s_patfgr=
s_patfgr M:106 MAN com/checksyn.b[3021] CASE s_patfgr:.. 
s_patfgr M:106 MAN com/checksyn.b[3218] CASE s_patfgr:.. 
s_patfle M:107 DEF bcplfecg.h[76] s_patfle=
s_patfle M:107 MAN com/checksyn.b[3022] CASE s_patfle:.. 
s_patfle M:107 MAN com/checksyn.b[3219] CASE s_patfle:.. 
s_patfls M:105 DEF bcplfecg.h[76] s_patfls=
s_patfls M:105 MAN com/checksyn.b[3020] CASE s_patfls:.. 
s_patfls M:105 MAN com/checksyn.b[3217] CASE s_patfls:.. 
s_patfndef M:92 DEF bcplfecg.h[72] s_patfndef=
s_patfndef M:92 MAN com/checksyn.b[3007] CASE s_patfndef:.. 
s_patfne M:104 DEF bcplfecg.h[76] s_patfne=
s_patfne M:104 MAN com/checksyn.b[3019] CASE s_patfne:.. 
s_patfne M:104 MAN com/checksyn.b[3216] CASE s_patfne:.. 
s_patge M:102 DEF bcplfecg.h[75] s_patge=
s_patge M:102 MAN com/checksyn.b[3016] CASE s_patge:.. 
s_patge M:102 MAN com/checksyn.b[3213] CASE s_patge:.. 
s_patgr M:100 DEF bcplfecg.h[75] s_patgr=
s_patgr M:100 MAN com/checksyn.b[3014] CASE s_patgr:.. 
s_patgr M:100 MAN com/checksyn.b[3211] CASE s_patgr:.. 
s_path1 M:80 DEF bcplfecg.h[65] s_path1=
s_path1 M:80 MAN bcplfecg.h[142] s_fpath1=s_path1+s_fltbit
s_path1 M:80 MAN com/checksyn.b[3025] CASE s_path1:.. 
s_path2 M:81 DEF bcplfecg.h[65] s_path2=
s_path2 M:81 MAN bcplfecg.h[143] s_fpath2=s_path2+s_fltbit
s_path2 M:81 MAN com/checksyn.b[3026] CASE s_path2:.. 
s_path3 M:82 DEF bcplfecg.h[65] s_path3=
s_path3 M:82 MAN bcplfecg.h[144] s_fpath3=s_path3+s_fltbit
s_path3 M:82 MAN com/checksyn.b[3027] CASE s_path3:.. 
s_path4 M:83 DEF bcplfecg.h[65] s_path4=
s_path4 M:83 MAN bcplfecg.h[145] s_fpath4=s_path4+s_fltbit
s_path4 M:83 MAN com/checksyn.b[3028] CASE s_path4:.. 
s_patle M:101 DEF bcplfecg.h[75] s_patle=
s_patle M:101 MAN com/checksyn.b[3015] CASE s_patle:.. 
s_patle M:101 MAN com/checksyn.b[3212] CASE s_patle:.. 
s_patls M:99 DEF bcplfecg.h[75] s_patls=
s_patls M:99 MAN com/checksyn.b[3013] CASE s_patls:.. 
s_patls M:99 MAN com/checksyn.b[3210] CASE s_patls:.. 
s_patne M:98 DEF bcplfecg.h[75] s_patne=
s_patne M:98 MAN com/checksyn.b[3012] CASE s_patne:.. 
s_patne M:98 MAN com/checksyn.b[3209] CASE s_patne:.. 
s_pator M:110 DEF bcplfecg.h[77] s_pator=
s_pator M:110 MAN com/checksyn.b[3031] CASE s_pator:.. 
s_pator M:110 MAN com/checksyn.b[3222] CASE s_pator:.. 
s_patptr M:95 DEF bcplfecg.h[74] s_patptr=
s_patptr M:95 MAN com/checksyn.b[3009] CASE s_patptr:.. 
s_patrtdef M:93 DEF bcplfecg.h[72] s_patrtdef=
s_patrtdef M:93 MAN com/checksyn.b[3008] CASE s_patrtdef:.. 
s_patseq M:96 DEF bcplfecg.h[74] s_patseq=
s_pos M:205 DEF bcplfecg.h[129] s_pos=
s_putbyte M:163 DEF bcplfecg.h[99] s_putbyte=
s_putbyte M:163 MAN com/checksyn.b[3035] CASE s_putbyte:.. 
s_putbyte M:163 MAN com/checksyn.b[3224] CASE s_putbyte:.. 
s_query M:11 DEF bcplfecg.h[41] s_query=
s_query M:11 MAN com/checksyn.b[2247] CASE s_query:.. 
s_query M:11 MAN com/checksyn.b[2489] CASE s_query:.. 
s_query M:11 MAN com/checksyn.b[2599] CASE s_query:.. 
s_query M:11 MAN com/checksyn.b[2659] CASE s_query:.. 
s_query M:11 MAN com/checksyn.b[3036] CASE s_query:.. 
s_query M:11 MAN com/checksyn.b[3225] CASE s_query:.. 
s_query M:11 MAN com/checksyn.b[653] token:=s_query
s_range M:111 DEF bcplfecg.h[77] s_range=
s_range M:111 MAN com/checksyn.b[2276]
    IF token=s_range|token=s_frange DO ..
s_range M:111 MAN com/checksyn.b[3038] CASE s_range:.. 
s_range M:111 MAN com/checksyn.b[3226] CASE s_range:.. 
s_range M:111 MAN com/checksyn.b[620] CASE s_range:.. 
s_range M:111 MAN com/checksyn.b[665] token:=s_range
s_repeat M:52 DEF bcplfecg.h[55] s_repeat=
s_repeat M:52 MAN com/checksyn.b[2617]
    WHILE token=s_repeat|token=s_repeatwhile|token=s_repeatuntil DO ..
s_repeat M:52 MAN com/checksyn.b[2618]
    TEST token=s_repeat THEN .. ELSE ..
s_repeat M:52 MAN com/checksyn.b[3039] CASE s_repeat:.. 
s_repeat M:52 MAN com/checksyn.b[3227] CASE s_repeat:.. 
s_repeat M:52 MAN com/checksyn.b[974] dsw("REPEAT",s_repeat)
s_repeatuntil M:54 DEF bcplfecg.h[55] s_repeatuntil=
s_repeatuntil M:54 MAN com/checksyn.b[2617]
    WHILE token=s_repeat|token=s_repeatwhile|token=s_repeatuntil DO ..
s_repeatuntil M:54 MAN com/checksyn.b[3040] CASE s_repeatuntil:.. 
s_repeatuntil M:54 MAN com/checksyn.b[3228] CASE s_repeatuntil:.. 
s_repeatuntil M:54 MAN com/checksyn.b[976]
    dsw("REPEATUNTIL",s_repeatuntil)
s_repeatwhile M:53 DEF bcplfecg.h[55] s_repeatwhile=
s_repeatwhile M:53 MAN com/checksyn.b[2617]
    WHILE token=s_repeat|token=s_repeatwhile|token=s_repeatuntil DO ..
s_repeatwhile M:53 MAN com/checksyn.b[3041] CASE s_repeatwhile:.. 
s_repeatwhile M:53 MAN com/checksyn.b[3229] CASE s_repeatwhile:.. 
s_repeatwhile M:53 MAN com/checksyn.b[975]
    dsw("REPEATWHILE",s_repeatwhile)
s_res M:158 DEF bcplfecg.h[98] s_res=
s_res M:158 MAN com/checksyn.b[3042] CASE s_res:.. 
s_resultis M:44 DEF bcplfecg.h[53] s_resultis=
s_resultis M:44 MAN com/checksyn.b[2395] CASE s_resultis:.. 
s_resultis M:44 MAN com/checksyn.b[2579] CASE s_resultis:.. 
s_resultis M:44 MAN com/checksyn.b[3043] CASE s_resultis:.. 
s_resultis M:44 MAN com/checksyn.b[3230] CASE s_resultis:.. 
s_resultis M:44 MAN com/checksyn.b[969] dsw("RESULTIS",s_resultis)
s_return M:60 DEF bcplfecg.h[59] s_return=
s_return M:60 MAN com/checksyn.b[2389] CASE s_return:.. 
s_return M:60 MAN com/checksyn.b[2576] CASE s_return:.. 
s_return M:60 MAN com/checksyn.b[2677] CASE s_return:.. 
s_return M:60 MAN com/checksyn.b[3044] CASE s_return:.. 
s_return M:60 MAN com/checksyn.b[3231] CASE s_return:.. 
s_return M:60 MAN com/checksyn.b[970] dsw("RETURN",s_return)
s_rparen M:125 DEF bcplfecg.h[83] s_rparen=
s_rparen M:125 MAN com/checksyn.b[1608] pushtok(s_rparen,0)
s_rparen M:125 MAN com/checksyn.b[1724] CASE s_rparen:.. 
s_rparen M:125 MAN com/checksyn.b[2087] UNLESS token=s_rparen DO ..
s_rparen M:125 MAN com/checksyn.b[2097] UNLESS token=s_rparen DO ..
s_rparen M:125 MAN com/checksyn.b[2291] UNLESS ok&token=s_rparen DO ..
s_rparen M:125 MAN com/checksyn.b[2312] UNLESS ok&token=s_rparen DO ..
s_rparen M:125 MAN com/checksyn.b[2467] UNLESS token=s_rparen DO ..
s_rparen M:125 MAN com/checksyn.b[2472] UNLESS token=s_rparen DO ..
s_rparen M:125 MAN com/checksyn.b[2684] UNLESS token=s_rparen DO ..
s_rparen M:125 MAN com/checksyn.b[2722] UNLESS token=s_rparen DO ..
s_rparen M:125 MAN com/checksyn.b[2725] UNLESS token=s_rparen DO ..
s_rparen M:125 MAN com/checksyn.b[2771] UNLESS token=s_rparen DO ..
s_rparen M:125 MAN com/checksyn.b[2777] UNLESS token=s_rparen DO ..
s_rparen M:125 MAN com/checksyn.b[2789] IF token=s_rparen DO ..
s_rparen M:125 MAN com/checksyn.b[2797] UNLESS token=s_rparen DO ..
s_rparen M:125 MAN com/checksyn.b[3045] CASE s_rparen:.. 
s_rparen M:125 MAN com/checksyn.b[3232] CASE s_rparen:.. 
s_rparen M:125 MAN com/checksyn.b[650] token:=s_rparen
s_rsect M:115 DEF bcplfecg.h[81] s_rsect=
s_rsect M:115 MAN com/checksyn.b[1601] CASE s_rsect:.. 
s_rsect M:115 MAN com/checksyn.b[1652] pushtok(s_rsect,0)
s_rsect M:115 MAN com/checksyn.b[1661] pushtok(s_rsect,opentag)
s_rsect M:115 MAN com/checksyn.b[1683] pushtok(s_rsect,opentag)
s_rsect M:115 MAN com/checksyn.b[1689] pushtok(s_rsect,opentag)
s_rsect M:115 MAN com/checksyn.b[1693] prtoken(s_rsect,opentag)
s_rsect M:115 MAN com/checksyn.b[1694] prtoken(s_rsect,sectiontag)
s_rsect M:115 MAN com/checksyn.b[1702] pushtok(s_rsect,opentag)
s_rsect M:115 MAN com/checksyn.b[1705] prtoken(s_rsect,sectiontag)
s_rsect M:115 MAN com/checksyn.b[1706] prtoken(s_rsect,opentag)
s_rsect M:115 MAN com/checksyn.b[1826] CASE s_rsect:.. 
s_rsect M:115 MAN com/checksyn.b[2062] UNLESS token=s_rsect DO ..
s_rsect M:115 MAN com/checksyn.b[2431] IF token=s_rsect DO ..
s_rsect M:115 MAN com/checksyn.b[2437] IF token=s_rsect DO ..
s_rsect M:115 MAN com/checksyn.b[2442] IF token=s_rsect DO ..
s_rsect M:115 MAN com/checksyn.b[2454] IF token=s_rsect DO ..
s_rsect M:115 MAN com/checksyn.b[2457] IF token=s_rsect DO ..
s_rsect M:115 MAN com/checksyn.b[3046] CASE s_rsect:.. 
s_rsect M:115 MAN com/checksyn.b[3105] CASE s_rsect:.. 
s_rsect M:115 MAN com/checksyn.b[576] token:=s_rsect
s_rsect M:115 MAN com/checksyn.b[585] token:=s_rsect
s_rshift M:31 DEF bcplfecg.h[48] s_rshift=
s_rshift M:31 MAN com/checksyn.b[2838] CASE s_rshift:.. 
s_rshift M:31 MAN com/checksyn.b[3047] CASE s_rshift:.. 
s_rshift M:31 MAN com/checksyn.b[3233] CASE s_rshift:.. 
s_rshift M:31 MAN com/checksyn.b[515] CASE s_rshift:.. 
s_rshift M:31 MAN com/checksyn.b[749] token:=s_rshift
s_rshift M:31 MAN com/checksyn.b[972] dsw("RSHIFT",s_rshift)
s_rstack M:153 DEF bcplfecg.h[97] s_rstack=
s_rstack M:153 MAN com/checksyn.b[3048] CASE s_rstack:.. 
s_rtap M:42 DEF bcplfecg.h[53] s_rtap=
s_rtap M:42 MAN com/checksyn.b[3049] CASE s_rtap:.. 
s_rtdef M:77 DEF bcplfecg.h[64] s_rtdef=
s_rtdef M:77 MAN com/checksyn.b[3050] CASE s_rtdef:.. 
s_rtrn M:157 DEF bcplfecg.h[98] s_rtrn=
s_rtrn M:157 MAN com/checksyn.b[3051] CASE s_rtrn:.. 
s_rv M:8 DEF bcplfecg.h[40] s_rv=
s_rv M:8 MAN com/checksyn.b[2484] CASE s_rv:.. 
s_rv M:8 MAN com/checksyn.b[2595] CASE s_rv:.. 
s_rv M:8 MAN com/checksyn.b[2693] CASE s_rv:.. 
s_rv M:8 MAN com/checksyn.b[3052] CASE s_rv:.. 
s_rv M:8 MAN com/checksyn.b[3234] CASE s_rv:.. 
s_rv M:8 MAN com/checksyn.b[973] dsw("RV",s_rv)
s_save M:155 DEF bcplfecg.h[98] s_save=
s_save M:155 MAN com/checksyn.b[3053] CASE s_save:.. 
s_sbra M:126 DEF bcplfecg.h[83] s_sbra=
s_sbra M:126 MAN com/checksyn.b[1612]
    IF brackettokv!bracketdepth=s_sbra DO ..
s_sbra M:126 MAN com/checksyn.b[1733] CASE s_sbra:.. 
s_sbra M:126 MAN com/checksyn.b[2319] CASE s_sbra:.. 
s_sbra M:126 MAN com/checksyn.b[2803] CASE s_sbra:.. 
s_sbra M:126 MAN com/checksyn.b[3054] CASE s_sbra:.. 
s_sbra M:126 MAN com/checksyn.b[3235] CASE s_sbra:.. 
s_sbra M:126 MAN com/checksyn.b[3267] CASE s_sbra:.. 
s_sbra M:126 MAN com/checksyn.b[651] token:=s_sbra
s_section M:40 DEF bcplfecg.h[50] s_section=
s_section M:40 MAN com/checksyn.b[1982]
    IF token=s_section|token=s_needs DO ..
s_section M:40 MAN com/checksyn.b[1994] IF token=s_section DO ..
s_section M:40 MAN com/checksyn.b[3055] CASE s_section:.. 
s_section M:40 MAN com/checksyn.b[3236] CASE s_section:.. 
s_section M:40 MAN com/checksyn.b[977] dsw("SECTION",s_section)
s_selld M:200 DEF bcplfecg.h[119] s_selld=
s_selld M:200 MAN com/checksyn.b[3063] CASE s_selld:.. 
s_selst M:201 DEF bcplfecg.h[119] s_selst=
s_selst M:201 MAN com/checksyn.b[3064] CASE s_selst:.. 
s_semicolon M:117 DEF bcplfecg.h[82] s_semicolon=
s_semicolon M:117 MAN com/checksyn.b[2009] IF token=s_semicolon DO ..
s_semicolon M:117 MAN com/checksyn.b[2059] IF token=s_semicolon DO ..
s_semicolon M:117 MAN com/checksyn.b[2438] IF token=s_semicolon DO ..
s_semicolon M:117 MAN com/checksyn.b[2443] IF token=s_semicolon DO ..
s_semicolon M:117 MAN com/checksyn.b[2458] IF token=s_semicolon DO ..
s_semicolon M:117 MAN com/checksyn.b[3056] CASE s_semicolon:.. 
s_semicolon M:117 MAN com/checksyn.b[3237] CASE s_semicolon:.. 
s_semicolon M:117 MAN com/checksyn.b[655] token:=s_semicolon
s_seq M:66 DEF bcplfecg.h[62] s_seq=
s_seq M:66 MAN com/checksyn.b[2615] WHILE token=s_seq DO ..
s_seq M:66 MAN com/checksyn.b[3057] CASE s_seq:.. 
s_seq M:66 MAN com/checksyn.b[3238] CASE s_seq:.. 
s_seq M:66 MAN com/checksyn.b[742] token:=s_seq
s_sg M:143 DEF bcplfecg.h[94] s_sg=
s_sg M:143 MAN com/checksyn.b[3058] CASE s_sg:.. 
s_sket M:127 DEF bcplfecg.h[83] s_sket=
s_sket M:127 MAN com/checksyn.b[1614] pushtok(s_sket,0)
s_sket M:127 MAN com/checksyn.b[1741] CASE s_sket:.. 
s_sket M:127 MAN com/checksyn.b[2321] UNLESS ok&token=s_sket DO ..
s_sket M:127 MAN com/checksyn.b[2806] UNLESS token=s_sket DO ..
s_sket M:127 MAN com/checksyn.b[3059] CASE s_sket:.. 
s_sket M:127 MAN com/checksyn.b[3239] CASE s_sket:.. 
s_sket M:127 MAN com/checksyn.b[652] token:=s_sket
s_skip M:55 DEF bcplfecg.h[56] s_skip=
s_skip M:55 MAN com/checksyn.b[2391] CASE s_skip:.. 
s_skip M:55 MAN com/checksyn.b[2578] CASE s_skip:.. 
s_skip M:55 MAN com/checksyn.b[3060] CASE s_skip:.. 
s_skip M:55 MAN com/checksyn.b[3240] CASE s_skip:.. 
s_skip M:55 MAN com/checksyn.b[978] dsw("SKIP",s_skip)
s_sl M:144 DEF bcplfecg.h[94] s_sl=
s_sl M:144 MAN com/checksyn.b[3061] CASE s_sl:.. 
s_slct M:25 DEF bcplfecg.h[46] s_slct=
s_slct M:25 MAN com/checksyn.b[2486] CASE s_slct:.. 
s_slct M:25 MAN com/checksyn.b[2596] CASE s_slct:.. 
s_slct M:25 MAN com/checksyn.b[2665] CASE s_slct:.. 
s_slct M:25 MAN com/checksyn.b[3062] CASE s_slct:.. 
s_slct M:25 MAN com/checksyn.b[3241] CASE s_slct:.. 
s_slct M:25 MAN com/checksyn.b[979] dsw("SLCT",s_slct)
s_sp M:142 DEF bcplfecg.h[94] s_sp=
s_sp M:142 MAN com/checksyn.b[3065] CASE s_sp:.. 
s_stack M:151 DEF bcplfecg.h[97] s_stack=
s_stack M:151 MAN com/checksyn.b[3066] CASE s_stack:.. 
s_static M:71 DEF bcplfecg.h[62] s_static=
s_static M:71 MAN bcplfecg.h[146] s_fstatic=s_static+s_fltbit
s_static M:71 MAN com/checksyn.b[1750] CASE s_static:.. 
s_static M:71 MAN com/checksyn.b[1858] CASE s_static:.. 
s_static M:71 MAN com/checksyn.b[1984]
    IF tokval=0&(token=s_global|token=s_manifest|token=s_static|token=s_let|token=s_and) DO ..
s_static M:71 MAN com/checksyn.b[2010]
    .. REPEATWHILE token=s_global|token=s_manifest|token=s_static|token=s_let
s_static M:71 MAN com/checksyn.b[2035] CASE s_static:.. 
s_static M:71 MAN com/checksyn.b[2432]
    WHILE token=s_global|token=s_manifest|token=s_static|token=s_let DO ..
s_static M:71 MAN com/checksyn.b[3067] CASE s_static:.. 
s_static M:71 MAN com/checksyn.b[3242] CASE s_static:.. 
s_static M:71 MAN com/checksyn.b[980] dsw("STATIC",s_static)
s_stind M:145 DEF bcplfecg.h[94] s_stind=
s_stind M:145 MAN com/checksyn.b[3068] CASE s_stind:.. 
s_store M:152 DEF bcplfecg.h[97] s_store=
s_store M:152 MAN com/checksyn.b[3069] CASE s_store:.. 
s_string M:3 DEF bcplfecg.h[39] s_string=
s_string M:3 MAN com/checksyn.b[1054] UNLESS token=s_string DO ..
s_string M:3 MAN com/checksyn.b[1757] CASE s_string:.. 
s_string M:3 MAN com/checksyn.b[1838] CASE s_string:.. 
s_string M:3 MAN com/checksyn.b[1996] UNLESS token=s_string DO ..
s_string M:3 MAN com/checksyn.b[2003] UNLESS token=s_string DO ..
s_string M:3 MAN com/checksyn.b[2481] CASE s_string:.. 
s_string M:3 MAN com/checksyn.b[2594] CASE s_string:.. 
s_string M:3 MAN com/checksyn.b[2660] CASE s_string:.. 
s_string M:3 MAN com/checksyn.b[3070] CASE s_string:.. 
s_string M:3 MAN com/checksyn.b[3094] CASE s_string:.. 
s_string M:3 MAN com/checksyn.b[861] h1!wordnode:=s_string
s_string M:3 MAN com/checksyn.b[863] token:=s_string
s_sub M:18 DEF bcplfecg.h[44] s_sub=
s_sub M:18 MAN com/checksyn.b[2254] CASE s_sub:.. 
s_sub M:18 MAN com/checksyn.b[2487] CASE s_sub:.. 
s_sub M:18 MAN com/checksyn.b[2597] CASE s_sub:.. 
s_sub M:18 MAN com/checksyn.b[2700] CASE s_sub:.. 
s_sub M:18 MAN com/checksyn.b[2825] CASE s_sub:.. 
s_sub M:18 MAN com/checksyn.b[3071] CASE s_sub:.. 
s_sub M:18 MAN com/checksyn.b[3243] CASE s_sub:.. 
s_sub M:18 MAN com/checksyn.b[626] CASE s_sub:.. 
s_sub M:18 MAN com/checksyn.b[757] token:=s_sub
s_switchon M:63 DEF bcplfecg.h[60] s_switchon=
s_switchon M:63 MAN com/checksyn.b[2446] CASE s_switchon:.. 
s_switchon M:63 MAN com/checksyn.b[2588] CASE s_switchon:.. 
s_switchon M:63 MAN com/checksyn.b[3072] CASE s_switchon:.. 
s_switchon M:63 MAN com/checksyn.b[3244] CASE s_switchon:.. 
s_switchon M:63 MAN com/checksyn.b[981] dsw("SWITCHON",s_switchon)
s_table M:38 DEF bcplfecg.h[49] s_table=
s_table M:38 MAN com/checksyn.b[2489] CASE s_table:.. 
s_table M:38 MAN com/checksyn.b[2599] CASE s_table:.. 
s_table M:38 MAN com/checksyn.b[2713] CASE s_table:.. 
s_table M:38 MAN com/checksyn.b[3073] CASE s_table:.. 
s_table M:38 MAN com/checksyn.b[3245] CASE s_table:.. 
s_table M:38 MAN com/checksyn.b[986] dsw("TABLE",s_table)
s_test M:46 DEF bcplfecg.h[54] s_test=
s_test M:46 MAN com/checksyn.b[2400] CASE s_test:.. 
s_test M:46 MAN com/checksyn.b[2581] CASE s_test:.. 
s_test M:46 MAN com/checksyn.b[3074] CASE s_test:.. 
s_test M:46 MAN com/checksyn.b[3246] CASE s_test:.. 
s_test M:46 MAN com/checksyn.b[983] dsw("TEST",s_test)
s_to M:119 DEF bcplfecg.h[82] s_to=
s_to M:119 MAN com/checksyn.b[2414] IF token=s_to DO ..
s_to M:119 MAN com/checksyn.b[3075] CASE s_to:.. 
s_to M:119 MAN com/checksyn.b[3247] CASE s_to:.. 
s_to M:119 MAN com/checksyn.b[982] dsw("TO",s_to)
s_true M:4 DEF bcplfecg.h[39] s_true=
s_true M:4 MAN com/checksyn.b[2245] CASE s_true:.. 
s_true M:4 MAN com/checksyn.b[2482] CASE s_true:.. 
s_true M:4 MAN com/checksyn.b[2595] CASE s_true:.. 
s_true M:4 MAN com/checksyn.b[2657] CASE s_true:.. 
s_true M:4 MAN com/checksyn.b[3076] CASE s_true:.. 
s_true M:4 MAN com/checksyn.b[3248] CASE s_true:.. 
s_true M:4 MAN com/checksyn.b[547]
    h1!wordnode:=token=s_true->s_false,s_true
s_true M:4 MAN com/checksyn.b[553] IF token=s_true DO ..
s_true M:4 MAN com/checksyn.b[558] UNLESS token=s_true DO ..
s_true M:4 MAN com/checksyn.b[984] dsw("TRUE",s_true)
s_unless M:49 DEF bcplfecg.h[54] s_unless=
s_unless M:49 MAN com/checksyn.b[2421] CASE s_unless:.. 
s_unless M:49 MAN com/checksyn.b[2584] CASE s_unless:.. 
s_unless M:49 MAN com/checksyn.b[3077] CASE s_unless:.. 
s_unless M:49 MAN com/checksyn.b[3249] CASE s_unless:.. 
s_unless M:49 MAN com/checksyn.b[987] dsw("UNLESS",s_unless)
s_until M:51 DEF bcplfecg.h[55] s_until=
s_until M:51 MAN com/checksyn.b[2423] CASE s_until:.. 
s_until M:51 MAN com/checksyn.b[2586] CASE s_until:.. 
s_until M:51 MAN com/checksyn.b[3078] CASE s_until:.. 
s_until M:51 MAN com/checksyn.b[3250] CASE s_until:.. 
s_until M:51 MAN com/checksyn.b[988] dsw("UNTIL",s_until)
s_valdef M:72 DEF bcplfecg.h[63] s_valdef=
s_valdef M:72 MAN com/checksyn.b[3079] CASE s_valdef:.. 
s_valdef M:72 MAN com/checksyn.b[3251] CASE s_valdef:.. 
s_valof M:6 DEF bcplfecg.h[40] s_valof=
s_valof M:6 MAN com/checksyn.b[2489] CASE s_valof:.. 
s_valof M:6 MAN com/checksyn.b[2599] CASE s_valof:.. 
s_valof M:6 MAN com/checksyn.b[2732] CASE s_valof:.. 
s_valof M:6 MAN com/checksyn.b[3080] CASE s_valof:.. 
s_valof M:6 MAN com/checksyn.b[3252] CASE s_valof:.. 
s_valof M:6 MAN com/checksyn.b[369] t_tab!p:=TABLE 6,s_add,0,...
s_valof M:6 MAN com/checksyn.b[990] dsw("VALOF",s_valof)
s_vec M:123 DEF bcplfecg.h[83] s_vec=
s_vec M:123 MAN com/checksyn.b[2115] IF token=s_vec DO ..
s_vec M:123 MAN com/checksyn.b[3081] CASE s_vec:.. 
s_vec M:123 MAN com/checksyn.b[3253] CASE s_vec:.. 
s_vec M:123 MAN com/checksyn.b[989] dsw("VEC",s_vec)
s_vecap M:9 DEF bcplfecg.h[40] s_vecap=
s_vecap M:9 MAN com/checksyn.b[2485] CASE s_vecap:.. 
s_vecap M:9 MAN com/checksyn.b[2595] CASE s_vecap:.. 
s_vecap M:9 MAN com/checksyn.b[2689] CASE s_vecap:.. 
s_vecap M:9 MAN com/checksyn.b[2812] CASE s_vecap:.. 
s_vecap M:9 MAN com/checksyn.b[3082] CASE s_vecap:.. 
s_vecap M:9 MAN com/checksyn.b[3254] CASE s_vecap:.. 
s_vecap M:9 MAN com/checksyn.b[678] token:=s_vecap
s_vecdef M:73 DEF bcplfecg.h[63] s_vecdef=
s_vecdef M:73 MAN com/checksyn.b[3083] CASE s_vecdef:.. 
s_while M:50 DEF bcplfecg.h[55] s_while=
s_while M:50 MAN com/checksyn.b[2422] CASE s_while:.. 
s_while M:50 MAN com/checksyn.b[2585] CASE s_while:.. 
s_while M:50 MAN com/checksyn.b[3084] CASE s_while:.. 
s_while M:50 MAN com/checksyn.b[3255] CASE s_while:.. 
s_while M:50 MAN com/checksyn.b[369] t_tab!p:=TABLE 6,s_add,0,...
s_while M:50 MAN com/checksyn.b[991] dsw("WHILE",s_while)
s_xor M:35 DEF bcplfecg.h[49] s_xor=
s_xor M:35 MAN com/checksyn.b[2845] CASE s_xor:.. 
s_xor M:35 MAN com/checksyn.b[3086] CASE s_xor:.. 
s_xor M:35 MAN com/checksyn.b[3257] CASE s_xor:.. 
s_xor M:35 MAN com/checksyn.b[519] CASE s_xor:.. 
s_xor M:35 MAN com/checksyn.b[964] dsw("NEQV",s_xor)
s_xor M:35 MAN com/checksyn.b[992] dsw("XOR",s_xor)
s_yields M:94 DEF bcplfecg.h[73] s_yields=
s_yields M:94 MAN com/checksyn.b[2199]
    UNLESS token=s_yields|token=s_be DO ..
s_yields M:94 MAN com/checksyn.b[2204]
    UNLESS token=s_yields|token=s_be DO ..
s_yields M:94 MAN com/checksyn.b[2211]
    TEST sort=s_yields THEN .. ELSE ..
s_yields M:94 MAN com/checksyn.b[2215]
    TEST sort=s_yields THEN .. ELSE ..
s_yields M:94 MAN com/checksyn.b[2728] rdmatchlist(s_yields)
s_yields M:94 MAN com/checksyn.b[3085] CASE s_yields:.. 
s_yields M:94 MAN com/checksyn.b[3256] CASE s_yields:.. 
s_yields M:94 MAN com/checksyn.b[660] token:=s_yields
sardch G:36 DEF libhdr.h[74] sardch=36
saveregs M:31 DEF libhdr.h[491] saveregs=31
savespacesize G:223 DEF bcplfecg.h[191] savespacesize=
sawrch G:37 DEF libhdr.h[75] sawrch=37
sawritef G:95 DEF libhdr.h[134] sawritef=95
scb_blength M:14 DEF libhdr.h[559] scb_blength=
scb_block M:9 DEF libhdr.h[554] scb_block=
scb_buf M:3 DEF libhdr.h[548] scb_buf=
scb_bufend M:11 DEF libhdr.h[556] scb_bufend=
scb_encoding M:20 DEF libhdr.h[570] scb_encoding=
scb_end M:5 DEF libhdr.h[550] scb_end=
scb_endfn M:8 DEF libhdr.h[553] scb_endfn=
scb_fd M:16 DEF libhdr.h[561] scb_fd=
scb_fd1 M:17 DEF libhdr.h[562] scb_fd1=
scb_id M:0 DEF libhdr.h[545] scb_id=0
scb_lblock M:12 DEF libhdr.h[557] scb_lblock=
scb_ldata M:13 DEF libhdr.h[558] scb_ldata=
scb_maxnamelen M:31 DEF libhdr.h[543] scb_maxnamelen=31
scb_maxnamelen M:31 MAN libhdr.h[574]
    scb_nameeend=scb_name+scb_maxnamelen/bytesperword
scb_name M:21 DEF libhdr.h[572] scb_name=
scb_name M:21 MAN libhdr.h[574]
    scb_nameeend=scb_name+scb_maxnamelen/bytesperword
scb_nameeend M:28 DEF libhdr.h[574]
    scb_nameeend=scb_name+scb_maxnamelen/bytesperword
scb_pos M:4 DEF libhdr.h[549] scb_pos=
scb_rdfn M:6 DEF libhdr.h[551] scb_rdfn=
scb_reclen M:15 DEF libhdr.h[560] scb_reclen=
scb_size M:29 DEF libhdr.h[577] scb_size=
scb_size M:29 MAN libhdr.h[578] scb_upb=scb_size-1
scb_task M:2 DEF libhdr.h[547] scb_task=
scb_timeout M:18 DEF libhdr.h[563] scb_timeout=
scb_timeoutact M:19 DEF libhdr.h[566] scb_timeoutact=
scb_type M:1 DEF libhdr.h[546] scb_type=
scb_upb M:28 DEF libhdr.h[578] scb_upb=scb_size-1
scb_wrfn M:7 DEF libhdr.h[552] scb_wrfn=
scb_write M:10 DEF libhdr.h[555] scb_write=
scbt_console M:-1 DEF libhdr.h[539] scbt_console=-1
scbt_file M:1 DEF libhdr.h[537] scbt_file=1
scbt_mbx M:-2 DEF libhdr.h[540] scbt_mbx=-2
scbt_net M:2 DEF libhdr.h[536] scbt_net=2
scbt_ram M:0 DEF libhdr.h[538] scbt_ram=0
scbt_tcp M:-3 DEF libhdr.h[541] scbt_tcp=-3
sectiontag G:277 DEF com/checksyn.b[65] sectiontag=
sectiontag G:277 LG com/checksyn.b[1594] pushtok(token,sectiontag)
sectiontag G:277 LG com/checksyn.b[1597]
    bracketvalv!bracketdepth:=sectiontag
sectiontag G:277 LG com/checksyn.b[1628] pushtok(token,sectiontag)
sectiontag G:277 LG com/checksyn.b[1647] IF sectiontag=0 DO ..
sectiontag G:277 LG com/checksyn.b[1667]
    IF sectiontag&sectiontag~=nulltag DO ..
sectiontag G:277 LG com/checksyn.b[1672]
    IF brackettokv!i=s_lsect&bracketvalv!i=sectiontag DO ..
sectiontag G:277 LG com/checksyn.b[1680] IF opentag=sectiontag DO ..
sectiontag G:277 LG com/checksyn.b[1694] prtoken(s_rsect,sectiontag)
sectiontag G:277 LG com/checksyn.b[1705] prtoken(s_rsect,sectiontag)
sectiontag G:277 SG com/checksyn.b[570] sectiontag:=wordnode
sectiontag G:277 SG com/checksyn.b[576] sectiontag:=wordnode
sectiontag G:277 SG com/checksyn.b[584] sectiontag:=0
sectiontag G:277 SG com/checksyn.b[585] sectiontag:=0
sectword M:64991 DEF libhdr.h[271] sectword=64991
selectinput G:56 DEF libhdr.h[94] selectinput=56
selectinput G:56 LG com/checksyn.b[1104] selectinput(sourcestream)
selectinput G:56 LG com/checksyn.b[303] selectinput(sourcestream)
selectinput G:56 LG com/checksyn.b[886] selectinput(sourcestream)
selectoutput G:57 DEF libhdr.h[95] selectoutput=57
selectoutput G:57 LG com/checksyn.b[258] selectoutput(sysprint)
selectoutput G:57 LG com/checksyn.b[305] selectoutput(sysprint)
selectoutput G:57 LG com/checksyn.b[442] selectoutput(stdout)
sendpkt G:165 DEF libhdr.h[217] sendpkt=165
set_process_name G:175 DEF libhdr.h[225] set_process_name=175
setbit G:112 DEF libhdr.h[151] setbit=112
setbulk G:122 DEF libhdr.h[161] setbulk=122
setflags G:156 DEF libhdr.h[209] setflags=156
setlogname G:117 DEF libhdr.h[156] setlogname=117
setrecordlength G:68 DEF libhdr.h[106] setrecordlength=68
setseed G:35 DEF libhdr.h[73] setseed=35
settimeout G:55 DEF libhdr.h[93] settimeout=55
settimeoutact G:124 DEF libhdr.h[163] settimeoutact=124
setvec G:181 DEF libhdr.h[232] setvec=181
sf_add M:10 DEF bcplfecg.h[159] sf_add=
sf_div M:8 DEF bcplfecg.h[157] sf_div=
sf_eqv M:16 DEF bcplfecg.h[165] sf_eqv=
sf_fadd M:5 DEF bcplfecg.h[154] sf_fadd=
sf_fdiv M:3 DEF bcplfecg.h[152] sf_fdiv=
sf_fmod M:4 DEF bcplfecg.h[153] sf_fmod=
sf_fmul M:2 DEF bcplfecg.h[151] sf_fmul=
sf_fsub M:6 DEF bcplfecg.h[155] sf_fsub=
sf_logand M:14 DEF bcplfecg.h[163] sf_logand=
sf_logor M:15 DEF bcplfecg.h[164] sf_logor=
sf_lshift M:12 DEF bcplfecg.h[161] sf_lshift=
sf_mod M:9 DEF bcplfecg.h[158] sf_mod=
sf_mul M:7 DEF bcplfecg.h[156] sf_mul=
sf_none M:0 DEF bcplfecg.h[149] sf_none=0
sf_rshift M:13 DEF bcplfecg.h[162] sf_rshift=
sf_sub M:11 DEF bcplfecg.h[160] sf_sub=
sf_vecap M:1 DEF bcplfecg.h[150] sf_vecap=
sf_xor M:17 DEF bcplfecg.h[166] sf_xor=
sfname G:212 DEF bcplfecg.h[182] sfname=
skiptag G:296 DEF com/checksyn.b[80] skiptag=
skiptag G:296 LG com/checksyn.b[536] IF skiptag=wordnode DO ..
skiptag G:296 LG com/checksyn.b[541] IF skiptag DO ..
skiptag G:296 LG com/checksyn.b[563]
    UNTIL skiptag=0|token=s_dot|token=s_eof DO ..
skiptag G:296 SG com/checksyn.b[1541] skiptag:=0
skiptag G:296 SG com/checksyn.b[537] skiptag:=0
skiptag G:296 SG com/checksyn.b[562] skiptag:=wordnode
skiptag G:296 SG com/checksyn.b[564] skiptag:=0
sourcefileno G:263 DEF com/checksyn.b[49] sourcefileno=
sourcefileno G:263 LG com/checksyn.b[1082]
    IF sourcefileno>=sourcenamevupb DO ..
sourcefileno G:263 LG com/checksyn.b[1097] sourcefileno:=sourcefileno+1
sourcefileno G:263 LG com/checksyn.b[1098] sourcenamev!sourcefileno:=str
sourcefileno G:263 LG com/checksyn.b[1105] lineno:=(sourcefileno<<20)+1
sourcefileno G:263 LG com/checksyn.b[331] lineno:=sourcefileno<<20|1
sourcefileno G:263 LG com/checksyn.b[425] FOR i=0 TO sourcefileno DO..
sourcefileno G:263 SG com/checksyn.b[1097] sourcefileno:=sourcefileno+1
sourcefileno G:263 SG com/checksyn.b[251] sourcefileno:=-1
sourcefileno G:263 SG com/checksyn.b[328] sourcefileno:=0
sourcenamev G:262 DEF com/checksyn.b[48] sourcenamev=
sourcenamev G:262 LG com/checksyn.b[1098] sourcenamev!sourcefileno:=str
sourcenamev G:262 LG com/checksyn.b[1522] sourcenamev!fno
sourcenamev G:262 LG com/checksyn.b[1789] sourcenamev!fno
sourcenamev G:262 LG com/checksyn.b[1870] sourcenamev!fno
sourcenamev G:262 LG com/checksyn.b[1946] sourcenamev!fno
sourcenamev G:262 LG com/checksyn.b[319] UNLESS sourcenamev DO ..
sourcenamev G:262 LG com/checksyn.b[327] sourcenamev!0:=fromfilename
sourcenamev G:262 LG com/checksyn.b[329] sourcenamev!i:=0
sourcenamev G:262 LG com/checksyn.b[426] sourcenamev!i
sourcenamev G:262 LG com/checksyn.b[433] IF sourcenamev DO ..
sourcenamev G:262 LG com/checksyn.b[433] freevec(sourcenamev)
sourcenamev G:262 SG com/checksyn.b[252] sourcenamev:=0
sourcenamev G:262 SG com/checksyn.b[318]
    sourcenamev:=getvec(sourcenamevupb)
sourcenamevupb G:264 DEF com/checksyn.b[49] sourcenamevupb=
sourcenamevupb G:264 LG com/checksyn.b[1082]
    IF sourcefileno>=sourcenamevupb DO ..
sourcenamevupb G:264 LG com/checksyn.b[318]
    sourcenamev:=getvec(sourcenamevupb)
sourcenamevupb G:264 LG com/checksyn.b[329]
    FOR i=1 TO sourcenamevupb DO..
sourcenamevupb G:264 SG com/checksyn.b[317] sourcenamevupb:=1000
sourcestream G:248 DEF bcplfecg.h[219] sourcestream=
sourcestream G:248 LG com/checksyn.b[1100] node!1:=sourcestream
sourcestream G:248 LG com/checksyn.b[1104] selectinput(sourcestream)
sourcestream G:248 LG com/checksyn.b[297] IF sourcestream=0 DO ..
sourcestream G:248 LG com/checksyn.b[303] selectinput(sourcestream)
sourcestream G:248 LG com/checksyn.b[439] IF sourcestream DO ..
sourcestream G:248 LG com/checksyn.b[439] endstream(sourcestream)
sourcestream G:248 LG com/checksyn.b[886] selectinput(sourcestream)
sourcestream G:248 SG com/checksyn.b[1103] sourcestream:=stream
sourcestream G:248 SG com/checksyn.b[249] sourcestream:=0
sourcestream G:248 SG com/checksyn.b[295]
    sourcestream:=findinput(fromfilename)
sourcestream G:248 SG com/checksyn.b[883] sourcestream:=h2!getstreams
spacep G:281 DEF com/checksyn.b[69] spacep=
spacep G:281 LG com/checksyn.b[1348] spacep:=spacep-n-1
spacep G:281 LG com/checksyn.b[1349] IF spacep<=spacev DO ..
spacep G:281 LG com/checksyn.b[1353] RESULTIS spacep
spacep G:281 SG com/checksyn.b[1348] spacep:=spacep-n-1
spacep G:281 SG com/checksyn.b[285] spacep:=spacev+spacevupb
spacev G:280 DEF com/checksyn.b[69] spacev=
spacev G:280 LG com/checksyn.b[1349] IF spacep<=spacev DO ..
spacev G:280 LG com/checksyn.b[279] IF spacev=0 DO ..
spacev G:280 LG com/checksyn.b[285] spacep:=spacev+spacevupb
spacev G:280 LG com/checksyn.b[435] IF spacev DO ..
spacev G:280 LG com/checksyn.b[435] freevec(spacev)
spacev G:280 SG com/checksyn.b[248] spacev:=0
spacev G:280 SG com/checksyn.b[277] spacev:=getvec(spacevupb)
spacevupb G:282 DEF com/checksyn.b[69] spacevupb=
splitname G:47 DEF libhdr.h[85] splitname=47
srchwk G:150 DEF libhdr.h[203] srchwk=150
stackfree G:123 DEF libhdr.h[162] stackfree=123
stackword M:#xABCD1234 DEF libhdr.h[269] stackword=-#x5432EDCC
start G:1 DEF libhdr.h[38] start=1
start G:1 FN com/checksyn.b[221] LET start()=..
startco G:23 DEF libhdr.h[61] startco=23
stdin G:260 DEF com/checksyn.b[46] stdin=feg
stdin G:260 SG com/checksyn.b[229] stdin:=input()
stdout G:261 DEF com/checksyn.b[47] stdout=
stdout G:261 LG com/checksyn.b[257] sysprint:=stdout
stdout G:261 LG com/checksyn.b[440] UNLESS sysprint=stdout DO ..
stdout G:261 LG com/checksyn.b[442] selectoutput(stdout)
stdout G:261 SG com/checksyn.b[230] stdout:=output()
stepstream G:67 DEF libhdr.h[105] stepstream=67
stop G:2 DEF libhdr.h[39] stop=2
str2numb G:101 DEF libhdr.h[140] str2numb=101
string_to_dat G:111 DEF libhdr.h[150] string_to_dat=111
string_to_number G:100 DEF libhdr.h[139] string_to_number=100
sxpushval G:183 DEF libhdr.h[234] sxpushval=183
sxpushval G:183 LG com/checksyn.b[1504] tokenp:=sxpushval(tokensxv,tok)
sxpushval G:183 LG com/checksyn.b[1505] sxpushval(tokensxv,val)
sxpushval G:183 LG com/checksyn.b[1506] sxpushval(tokensxv,lineno)
sxpushval G:183 LG com/checksyn.b[1507] sxpushval(tokensxv,0)
sxpushval G:183 LG com/checksyn.b[1508] sxpushval(tokensxv,-1)
synerr G:343 DEF com/checksyn.b[167] synerr=
synerr G:343 LG com/checksyn.b[1973] synerr("Incor'mination")
synerr G:343 LG com/checksyn.b[1997] synerr("Strin' SECTION")
synerr G:343 LG com/checksyn.b[2004] synerr("Strin'er NEEDS")
synerr G:343 LG com/checksyn.b[2019] synerr("*nGLOB'xpected*n")
synerr G:343 LG com/checksyn.b[2030] synerr("A dec'C or LET")
synerr G:343 LG com/checksyn.b[2040] synerr("{ mus'r STATIC")
synerr G:343 LG com/checksyn.b[2046] synerr("Name 'fter FLT")
synerr G:343 LG com/checksyn.b[2053] synerr("Colon'finition")
synerr G:343 LG com/checksyn.b[2055] synerr("Equal'finition",opname(op))
synerr G:343 LG com/checksyn.b[2063]
    synerr("*nSome'laration",opname(op))
synerr G:343 LG com/checksyn.b[2082] synerr("Error'laration")
synerr G:343 LG com/checksyn.b[2090] synerr("Name 'ter list")
synerr G:343 LG com/checksyn.b[2098] synerr("*nName'ter list")
synerr G:343 LG com/checksyn.b[2105] synerr("*n= or'finition")
synerr G:343 LG com/checksyn.b[2113] synerr("Bad o'laration")
synerr G:343 LG com/checksyn.b[2120] synerr("Bad o'laration")
synerr G:343 LG com/checksyn.b[2130] synerr("LET a'e or FLT")
synerr G:343 LG com/checksyn.b[2133] synerr("FLT m'y a name")
synerr G:343 LG com/checksyn.b[2141] synerr("*nUnex'laration")
synerr G:343 LG com/checksyn.b[2152] synerr("Bad l'laration")
synerr G:343 LG com/checksyn.b[2158] synerr("Bad l'laration")
synerr G:343 LG com/checksyn.b[2177] synerr("A mat' a colon")
synerr G:343 LG com/checksyn.b[2193] synerr("A mat'th a ':'")
synerr G:343 LG com/checksyn.b[2203] synerr("The i' a colon")
synerr G:343 LG com/checksyn.b[2205] synerr("The p'=> or BE")
synerr G:343 LG com/checksyn.b[2217] synerr("There'owing =>")
synerr G:343 LG com/checksyn.b[2219] synerr("There'owing =>")
synerr G:343 LG com/checksyn.b[2258] synerr("A num' pattern")
synerr G:343 LG com/checksyn.b[2278] synerr("Probl' a range")
synerr G:343 LG com/checksyn.b[2292] synerr("*n   T'perator.")
synerr G:343 LG com/checksyn.b[2313] synerr("*nTher'entheses")
synerr G:343 LG com/checksyn.b[2322] synerr("*nTher'brackets")
synerr G:343 LG com/checksyn.b[2331] synerr("FLT m'y a name")
synerr G:343 LG com/checksyn.b[2381] synerr("Token' command",opname(op))
synerr G:343 LG com/checksyn.b[2404] synerr("ELSE ' command")
synerr G:343 LG com/checksyn.b[2410] synerr("Name 'fter FOR")
synerr G:343 LG com/checksyn.b[2412] synerr("'=' m'FOR loop")
synerr G:343 LG com/checksyn.b[2448] synerr("INTO missing")
synerr G:343 LG com/checksyn.b[2451] synerr("{ mis' command")
synerr G:343 LG com/checksyn.b[2465] synerr("'(' e'or EVERY")
synerr G:343 LG com/checksyn.b[2473] synerr("Bad M'ent list")
synerr G:343 LG com/checksyn.b[2502] synerr("Bad s' command")
synerr G:343 LG com/checksyn.b[2522]
    synerr("*nA na' command",opname(token))
synerr G:343 LG com/checksyn.b[2530] synerr("*nA co'ch as L:")
synerr G:343 LG com/checksyn.b[2536] synerr("':' m'SE label")
synerr G:343 LG com/checksyn.b[2544] synerr("':' m' DEFAULT")
synerr G:343 LG com/checksyn.b[2684] synerr("')' missing")
synerr G:343 LG com/checksyn.b[2721] synerr("'(' e'or EVERY")
synerr G:343 LG com/checksyn.b[2726] synerr("')' m'ent list")
synerr G:343 LG com/checksyn.b[2778] synerr("')' m'ion call")
synerr G:343 LG com/checksyn.b[2787] synerr("'(' m' after #")
synerr G:343 LG com/checksyn.b[2790] synerr("*nA me'argument")
synerr G:343 LG com/checksyn.b[2798] synerr("Probl'ent list")
synerr G:343 LG com/checksyn.b[2806] synerr("']' missing")
synerr G:343 LG com/checksyn.b[2853] synerr("Bad c'pression")
synerr G:343 RT com/checksyn.b[1887] LET synerr(mess,a,b,c)BE..
sys G:3 DEF libhdr.h[40] sys=3
sys G:3 LG com/checksyn.b[1139] sys(Sys_flt,fl_mul,fltval,flt10)
sys G:3 LG com/checksyn.b[1145]
    IF sys(Sys_flt,fl_eq,x,sys(Sys_flt,...)) DO ..
sys G:3 LG com/checksyn.b[1150] fltval:=sys(Sys_flt,fl_add,x,...)
sys G:3 LG com/checksyn.b[1211] fltval:=sys(Sys_flt,fl_mul,fltval,flt10)
sys G:3 LG com/checksyn.b[1213] fltval:=sys(Sys_flt,fl_div,fltval,flt10)
sys G:3 LG com/checksyn.b[244] flt0:=sys(Sys_flt,fl_mk,0,0)
sys G:3 LG com/checksyn.b[245] flt1:=sys(Sys_flt,fl_mk,1,0)
sys G:3 LG com/checksyn.b[246] flt10:=sys(Sys_flt,fl_mk,10,0)
sysabort G:29 DEF libhdr.h[67] sysabort=29
sysprint G:249 DEF bcplfecg.h[219] sysprint=
sysprint G:249 LG com/checksyn.b[258] selectoutput(sysprint)
sysprint G:249 LG com/checksyn.b[305] selectoutput(sysprint)
sysprint G:249 LG com/checksyn.b[440] UNLESS sysprint=stdout DO ..
sysprint G:249 LG com/checksyn.b[440] endstream(sysprint)
sysprint G:249 SG com/checksyn.b[257] sysprint:=stdout
t16 G:239 DEF bcplfecg.h[210] t16=
t16 G:239 SG com/checksyn.b[268] t16:=FALSE
t32 G:240 DEF bcplfecg.h[211] t32=
t32 G:240 SG com/checksyn.b[268] t32:=TRUE
t64 G:241 DEF bcplfecg.h[212] t64=
t64 G:241 LG com/checksyn.b[216] TEST t64 THEN .. ELSE ..
t64 G:241 SG com/checksyn.b[268] t64:=FALSE
t_bhunk M:3000 DEF libhdr.h[265] t_bhunk=3000
t_bhunk64 M:4000 DEF libhdr.h[266] t_bhunk64=4000
t_end M:1002 DEF libhdr.h[261] t_end=1002
t_end64 M:2002 DEF libhdr.h[264] t_end64=2002
t_hunk M:1000 DEF libhdr.h[259] t_hunk=1000
t_hunk64 M:2000 DEF libhdr.h[262] t_hunk64=2000
t_index M:4 DEF com/checksyn.b[204] t_index=
t_index M:4 MAN com/checksyn.b[1453] index:=t_index!p
t_index M:4 MAN com/checksyn.b[1629] tokenv!(tokenp-t_size+t_index):=-2
t_lno M:2 DEF com/checksyn.b[202] t_lno=
t_lno M:2 MAN com/checksyn.b[1437] lineno:=t_lno!p
t_lno M:2 MAN com/checksyn.b[1451] lineno:=t_lno!p
t_lno M:2 MAN com/checksyn.b[1890] prlineno(t_lno!tokenp)
t_lno M:2 MAN com/checksyn.b[1916] (t_lno!q&#x0FFFFF)-3
t_lno M:2 MAN com/checksyn.b[1924] IF (t_lno!p&#x0FFFFF)<ln DO ..
t_lno M:2 MAN com/checksyn.b[1931] ln:=t_lno!p&#x0FFFFF
t_lno M:2 MAN com/checksyn.b[1934] t_lno!p&#x0FFFFF
t_lno M:2 MAN com/checksyn.b[1943] t_lno!p
t_reloc M:1001 DEF libhdr.h[260] t_reloc=1001
t_reloc64 M:2001 DEF libhdr.h[263] t_reloc64=2001
t_size M:5 DEF com/checksyn.b[206] t_size=
t_size M:5 MAN com/checksyn.b[1445] p:=p->p+t_size,1
t_size M:5 MAN com/checksyn.b[1598]
    bracketposv!bracketdepth:=tokenp-t_size
t_size M:5 MAN com/checksyn.b[1629] tokenv!(tokenp-t_size+t_index):=-2
t_size M:5 MAN com/checksyn.b[1919] p:=p-t_size
t_size M:5 MAN com/checksyn.b[1925] p:=p+t_size
t_size M:5 MAN com/checksyn.b[1937] p:=p+t_size
t_size M:5 MAN com/checksyn.b[207] t_upb=t_size-1
t_size M:5 MAN com/checksyn.b[368] tokenv+1+5*t_size
t_tab M:3 DEF com/checksyn.b[203] t_tab=
t_tab M:3 MAN com/checksyn.b[1452] tab:=t_tab!p
t_tab M:3 MAN com/checksyn.b[369] t_tab!p:=TABLE 6,s_add,0,...
t_tok M:0 DEF com/checksyn.b[200] t_tok=0
t_tok M:0 MAN com/checksyn.b[1435] token:=t_tok!p
t_tok M:0 MAN com/checksyn.b[1449] token:=t_tok!p
t_tok M:0 MAN com/checksyn.b[1936] prtoken(t_tok!p,t_val!p)
t_upb M:4 DEF com/checksyn.b[207] t_upb=t_size-1
t_val M:1 DEF com/checksyn.b[201] t_val=
t_val M:1 MAN com/checksyn.b[1436] tokval:=t_val!p
t_val M:1 MAN com/checksyn.b[1450] tokval:=t_val!p
t_val M:1 MAN com/checksyn.b[1936] prtoken(t_tok!p,t_val!p)
taskid G:152 DEF libhdr.h[205] taskid=152
taskwait G:160 DEF libhdr.h[213] taskwait=160
tcb G:151 DEF libhdr.h[204] tcb=151
tcb G:151 LG com/checksyn.b[217] RESULTIS tcb->"POS64HDRS","BCPL64HDRS"
tcb G:151 LG com/checksyn.b[218] RESULTIS tcb->"POSHDRS","BCPLHDRS"
tcb_a M:11 DEF libhdr.h[678] tcb_a=tcb_regs
tcb_active M:10 DEF libhdr.h[675] tcb_active=10
tcb_b M:12 DEF libhdr.h[679] tcb_b=12
tcb_c M:13 DEF libhdr.h[680] tcb_c=13
tcb_count M:18 DEF libhdr.h[685] tcb_count=18
tcb_flags M:5 DEF libhdr.h[670] tcb_flags=5
tcb_g M:15 DEF libhdr.h[682] tcb_g=15
tcb_gbase M:8 DEF libhdr.h[673] tcb_gbase=8
tcb_link M:0 DEF libhdr.h[665] tcb_link=0
tcb_namebase M:19 DEF libhdr.h[687] tcb_namebase=19
tcb_namebase M:19 MAN libhdr.h[689]
    tcb_upb=tcb_namebase+15/bytesperword+1
tcb_p M:14 DEF libhdr.h[681] tcb_p=14
tcb_pc M:17 DEF libhdr.h[684] tcb_pc=17
tcb_pri M:2 DEF libhdr.h[667] tcb_pri=2
tcb_regs M:11 DEF libhdr.h[677] tcb_regs=11
tcb_regs M:11 MAN libhdr.h[678] tcb_a=tcb_regs
tcb_sbase M:9 DEF libhdr.h[674] tcb_sbase=9
tcb_seglist M:7 DEF libhdr.h[672] tcb_seglist=7
tcb_st M:16 DEF libhdr.h[683] tcb_st=16
tcb_state M:4 DEF libhdr.h[669] tcb_state=4
tcb_stsiz M:6 DEF libhdr.h[671] tcb_stsiz=6
tcb_taskid M:1 DEF libhdr.h[666] tcb_taskid=1
tcb_upb M:23 DEF libhdr.h[689] tcb_upb=tcb_namebase+15/bytesperword+1
tcb_wkq M:3 DEF libhdr.h[668] tcb_wkq=3
tempval G:11 DEF libhdr.h[48] tempval=11
testbit G:113 DEF libhdr.h[152] testbit=113
testflags G:157 DEF libhdr.h[210] testflags=157
tg M:190 DEF libhdr.h[243] tg=190
timeoutch M:-2 DEF libhdr.h[254] timeoutch=-2
tofilename G:207 DEF bcplfecg.h[175] tofilename=
tofilename G:207 SG com/checksyn.b[272] tofilename:=argv!1
token G:269 DEF com/checksyn.b[54] token=
token G:269 LG com/checksyn.b[1054] UNLESS token=s_string DO ..
token G:269 LG com/checksyn.b[1141] IF token=s_number DO ..
token G:269 LG com/checksyn.b[1164] IF token=s_fnum DO ..
token G:269 LG com/checksyn.b[1191] IF token=s_number DO ..
token G:269 LG com/checksyn.b[1548] UNTIL token=s_eof DO ..
token G:269 LG com/checksyn.b[1564] SWITCHON token INTO..
token G:269 LG com/checksyn.b[1569] pushtok(token,0)
token G:269 LG com/checksyn.b[1576] pushtok(token,@h3!wordnode)
token G:269 LG com/checksyn.b[1583] pushtok(token,decval)
token G:269 LG com/checksyn.b[1590] pushtok(token,fltval)
token G:269 LG com/checksyn.b[1594] pushtok(token,sectiontag)
token G:269 LG com/checksyn.b[1596] brackettokv!bracketdepth:=token
token G:269 LG com/checksyn.b[1628] pushtok(token,sectiontag)
token G:269 LG com/checksyn.b[1717] pushtok(token,0)
token G:269 LG com/checksyn.b[1719] brackettokv!bracketdepth:=token
token G:269 LG com/checksyn.b[1729] pushtok(token,0)
token G:269 LG com/checksyn.b[1734] pushtok(token,0)
token G:269 LG com/checksyn.b[1736] brackettokv!bracketdepth:=token
token G:269 LG com/checksyn.b[1744] pushtok(token,0)
token G:269 LG com/checksyn.b[1753] pushtok(token,bracketdepth)
token G:269 LG com/checksyn.b[1774] pushtok(token,s)
token G:269 LG com/checksyn.b[1804] SWITCHON token INTO..
token G:269 LG com/checksyn.b[1806]
    writef("%i4: %12t*n",ln,opname(token))
token G:269 LG com/checksyn.b[1807] IF token=s_eof DO ..
token G:269 LG com/checksyn.b[1814]
    writef("%i4: %12t  %s*n",ln,opname(token),tokval)
token G:269 LG com/checksyn.b[1818]
    writef("%i4: %12t  %n*n",ln,opname(token),tokval)
token G:269 LG com/checksyn.b[1822]
    writef("%i4: '%13.9e *n",ln,opname(token),tokval)
token G:269 LG com/checksyn.b[1827]
    writef("%i4: %12t  ",ln,opname(token))
token G:269 LG com/checksyn.b[1840]
    writef("%i4: %12t *"",ln,opname(token))
token G:269 LG com/checksyn.b[1861]
    writef("%i4: %12t  %n*n",ln,opname(token),tokval)
token G:269 LG com/checksyn.b[1973] UNLESS token=s_eof DO ..
token G:269 LG com/checksyn.b[1981] IF token=s_eof DO ..
token G:269 LG com/checksyn.b[1982]
    IF token=s_section|token=s_needs DO ..
token G:269 LG com/checksyn.b[1983] IF token=s_and DO ..
token G:269 LG com/checksyn.b[1984]
    IF tokval=0&(token=s_global|token=s_manifest|token=s_static|token=s_let|token=s_and) DO ..
token G:269 LG com/checksyn.b[1994] IF token=s_section DO ..
token G:269 LG com/checksyn.b[1996] UNLESS token=s_string DO ..
token G:269 LG com/checksyn.b[2001] WHILE token=s_needs DO ..
token G:269 LG com/checksyn.b[2003] UNLESS token=s_string DO ..
token G:269 LG com/checksyn.b[2009] IF token=s_semicolon DO ..
token G:269 LG com/checksyn.b[2010]
    .. REPEATWHILE token=s_global|token=s_manifest|token=s_static|token=s_let
token G:269 LG com/checksyn.b[2015] IF token=s_eof DO ..
token G:269 LG com/checksyn.b[2017] TEST token=s_dot THEN .. ELSE ..
token G:269 LG com/checksyn.b[2025] token
token G:269 LG com/checksyn.b[2039] UNLESS token=s_lsect DO ..
token G:269 LG com/checksyn.b[2043] WHILE token=s_name|token=s_flt DO ..
token G:269 LG com/checksyn.b[2044] IF token=s_flt DO ..
token G:269 LG com/checksyn.b[2046] UNLESS token=s_name DO ..
token G:269 LG com/checksyn.b[2050] IF token=s_colon|token=s_eq DO ..
token G:269 LG com/checksyn.b[2052] UNLESS token=s_colon DO ..
token G:269 LG com/checksyn.b[2054] UNLESS token=s_eq DO ..
token G:269 LG com/checksyn.b[2059] IF token=s_semicolon DO ..
token G:269 LG com/checksyn.b[2062] UNLESS token=s_rsect DO ..
token G:269 LG com/checksyn.b[2076] IF token=s_name DO ..
token G:269 LG com/checksyn.b[2080] SWITCHON token INTO..
token G:269 LG com/checksyn.b[2087] UNLESS token=s_rparen DO ..
token G:269 LG com/checksyn.b[2088] IF token=s_flt DO ..
token G:269 LG com/checksyn.b[2089] UNLESS token=s_name DO ..
token G:269 LG com/checksyn.b[2092] UNLESS token=s_comma DO ..
token G:269 LG com/checksyn.b[2097] UNLESS token=s_rparen DO ..
token G:269 LG com/checksyn.b[2102] IF token=s_eq DO ..
token G:269 LG com/checksyn.b[2103] IF token=s_be DO ..
token G:269 LG com/checksyn.b[2115] IF token=s_vec DO ..
token G:269 LG com/checksyn.b[2129] UNLESS n=0&token=s_flt DO ..
token G:269 LG com/checksyn.b[2132] UNLESS token=s_name DO ..
token G:269 LG com/checksyn.b[2135] IF token=s_eq DO ..
token G:269 LG com/checksyn.b[2140] UNLESS token=s_comma DO ..
token G:269 LG com/checksyn.b[2150] IF token=s_flt DO ..
token G:269 LG com/checksyn.b[2151] UNLESS token=s_name DO ..
token G:269 LG com/checksyn.b[2154] .. REPEATWHILE token=s_comma
token G:269 LG com/checksyn.b[2157] UNLESS token=s_eq DO ..
token G:269 LG com/checksyn.b[2161] .. REPEATWHILE token=s_comma
token G:269 LG com/checksyn.b[2163] .. REPEATWHILE token=s_and
token G:269 LG com/checksyn.b[2176] UNLESS token=s_colon DO ..
token G:269 LG com/checksyn.b[2181] WHILE token=s_colon DO ..
token G:269 LG com/checksyn.b[2183] IF token=s_dot DO ..
token G:269 LG com/checksyn.b[2192] UNLESS token=s_colon DO ..
token G:269 LG com/checksyn.b[2199]
    UNLESS token=s_yields|token=s_be DO ..
token G:269 LG com/checksyn.b[2204]
    UNLESS token=s_yields|token=s_be DO ..
token G:269 LG com/checksyn.b[2207] sort:=token
token G:269 LG com/checksyn.b[2210] UNLESS sort=token DO ..
token G:269 LG com/checksyn.b[2239] SWITCHON token INTO..
token G:269 LG com/checksyn.b[2257]
    UNLESS token=s_number|token=s_fnum DO ..
token G:269 LG com/checksyn.b[2272] SWITCHON token INTO..
token G:269 LG com/checksyn.b[2276]
    IF token=s_range|token=s_frange DO ..
token G:269 LG com/checksyn.b[2289] IF token=s_lparen DO ..
token G:269 LG com/checksyn.b[2291] UNLESS ok&token=s_rparen DO ..
token G:269 LG com/checksyn.b[2312] UNLESS ok&token=s_rparen DO ..
token G:269 LG com/checksyn.b[2321] UNLESS ok&token=s_sket DO ..
token G:269 LG com/checksyn.b[2330] UNLESS token=s_name DO ..
token G:269 LG com/checksyn.b[2347] SWITCHON token INTO..
token G:269 LG com/checksyn.b[2377] token
token G:269 LG com/checksyn.b[2402] IF token=s_do DO ..
token G:269 LG com/checksyn.b[2404] UNLESS token=s_else DO ..
token G:269 LG com/checksyn.b[2410] UNLESS token=s_name DO ..
token G:269 LG com/checksyn.b[2412] UNLESS token=s_eq DO ..
token G:269 LG com/checksyn.b[2414] IF token=s_to DO ..
token G:269 LG com/checksyn.b[2415] IF token=s_by DO ..
token G:269 LG com/checksyn.b[2416] IF token=s_do DO ..
token G:269 LG com/checksyn.b[2425] IF token=s_do DO ..
token G:269 LG com/checksyn.b[2431] IF token=s_rsect DO ..
token G:269 LG com/checksyn.b[2432]
    WHILE token=s_global|token=s_manifest|token=s_static|token=s_let DO ..
token G:269 LG com/checksyn.b[2437] IF token=s_rsect DO ..
token G:269 LG com/checksyn.b[2438] IF token=s_semicolon DO ..
token G:269 LG com/checksyn.b[2442] IF token=s_rsect DO ..
token G:269 LG com/checksyn.b[2443] IF token=s_semicolon DO ..
token G:269 LG com/checksyn.b[2448] UNLESS token=s_into DO ..
token G:269 LG com/checksyn.b[2450] UNLESS token=s_lsect DO ..
token G:269 LG com/checksyn.b[2454] IF token=s_rsect DO ..
token G:269 LG com/checksyn.b[2457] IF token=s_rsect DO ..
token G:269 LG com/checksyn.b[2458] IF token=s_semicolon DO ..
token G:269 LG com/checksyn.b[2464] UNLESS token=s_lparen DO ..
token G:269 LG com/checksyn.b[2467] UNLESS token=s_rparen DO ..
token G:269 LG com/checksyn.b[2469] UNLESS token=s_comma DO ..
token G:269 LG com/checksyn.b[2472] UNLESS token=s_rparen DO ..
token G:269 LG com/checksyn.b[2498] IF token=s_comma DO ..
token G:269 LG com/checksyn.b[2500] .. REPEATWHILE token=s_comma
token G:269 LG com/checksyn.b[2501] UNLESS isassop(token) DO ..
token G:269 LG com/checksyn.b[2503] .. REPEATWHILE token=s_comma
token G:269 LG com/checksyn.b[2507] IF isassop(token) DO ..
token G:269 LG com/checksyn.b[2521] UNLESS token=s_colon DO ..
token G:269 LG com/checksyn.b[2522]
    synerr("*nA na' command",opname(token))
token G:269 LG com/checksyn.b[2525] IF iscomstart(token) DO ..
token G:269 LG com/checksyn.b[2535] UNLESS token=s_colon DO ..
token G:269 LG com/checksyn.b[2538] IF iscomstart(token) DO ..
token G:269 LG com/checksyn.b[2543] UNLESS token=s_colon DO ..
token G:269 LG com/checksyn.b[2546] IF iscomstart(token) DO ..
token G:269 LG com/checksyn.b[2615] WHILE token=s_seq DO ..
token G:269 LG com/checksyn.b[2617]
    WHILE token=s_repeat|token=s_repeatwhile|token=s_repeatuntil DO ..
token G:269 LG com/checksyn.b[2618] TEST token=s_repeat THEN .. ELSE ..
token G:269 LG com/checksyn.b[2633] token
token G:269 LG com/checksyn.b[2642] prtoken(token,tokval)
token G:269 LG com/checksyn.b[2667] IF token=s_colon DO ..
token G:269 LG com/checksyn.b[2668] IF token=s_colon DO ..
token G:269 LG com/checksyn.b[2684] UNLESS token=s_rparen DO ..
token G:269 LG com/checksyn.b[2714] .. REPEATWHILE token=s_comma
token G:269 LG com/checksyn.b[2721] UNLESS token=s_lparen DO ..
token G:269 LG com/checksyn.b[2722] UNLESS token=s_rparen DO ..
token G:269 LG com/checksyn.b[2723] .. REPEATWHILE token=s_comma
token G:269 LG com/checksyn.b[2725] UNLESS token=s_rparen DO ..
token G:269 LG com/checksyn.b[2761] token
token G:269 LG com/checksyn.b[2771] UNLESS token=s_rparen DO ..
token G:269 LG com/checksyn.b[2773] UNLESS token=s_comma DO ..
token G:269 LG com/checksyn.b[2777] UNLESS token=s_rparen DO ..
token G:269 LG com/checksyn.b[2786] UNLESS token=s_lparen DO ..
token G:269 LG com/checksyn.b[2789] IF token=s_rparen DO ..
token G:269 LG com/checksyn.b[2793] UNLESS token=s_comma DO ..
token G:269 LG com/checksyn.b[2797] UNLESS token=s_rparen DO ..
token G:269 LG com/checksyn.b[2806] UNLESS token=s_sket DO ..
token G:269 LG com/checksyn.b[2833]
    .. REPEATWHILE s_eq<=token&token<=s_ge|s_feq<=token&token<=s_fge
token G:269 LG com/checksyn.b[2852] UNLESS token=s_comma DO ..
token G:269 LG com/checksyn.b[397] prtoken(token,tokval)
token G:269 LG com/checksyn.b[398] IF token=s_eof DO ..
token G:269 LG com/checksyn.b[498] SWITCHON token INTO..
token G:269 LG com/checksyn.b[547]
    h1!wordnode:=token=s_true->s_false,s_true
token G:269 LG com/checksyn.b[553] IF token=s_true DO ..
token G:269 LG com/checksyn.b[558] UNLESS token=s_true DO ..
token G:269 LG com/checksyn.b[563]
    UNTIL skiptag=0|token=s_dot|token=s_eof DO ..
token G:269 LG com/checksyn.b[616] SWITCHON token INTO..
token G:269 SG com/checksyn.b[1124] token:=s_number
token G:269 SG com/checksyn.b[1165] token:=s_fnum
token G:269 SG com/checksyn.b[1181] token:=s_fnum
token G:269 SG com/checksyn.b[1435] token:=t_tok!p
token G:269 SG com/checksyn.b[1449] token:=t_tok!p
token G:269 SG com/checksyn.b[1467] token:=q!0
token G:269 SG com/checksyn.b[1544] token:=0
token G:269 SG com/checksyn.b[1983] token:=s_let
token G:269 SG com/checksyn.b[350] token:=0
token G:269 SG com/checksyn.b[497] token:=lookupword(rdtag(ch))
token G:269 SG com/checksyn.b[506] token:=s_number
token G:269 SG com/checksyn.b[528] token:=lookupword(rdtag(60))
token G:269 SG com/checksyn.b[570] token:=s_lsect
token G:269 SG com/checksyn.b[576] token:=s_rsect
token G:269 SG com/checksyn.b[584] token:=s_lsect
token G:269 SG com/checksyn.b[585] token:=s_rsect
token G:269 SG com/checksyn.b[588] token:=s_number
token G:269 SG com/checksyn.b[610] token:=s_mthap
token G:269 SG com/checksyn.b[619] token:=s_fabs
token G:269 SG com/checksyn.b[620] token:=s_frange
token G:269 SG com/checksyn.b[622] token:=s_fmul
token G:269 SG com/checksyn.b[623] token:=s_fdiv
token G:269 SG com/checksyn.b[624] token:=s_fmod
token G:269 SG com/checksyn.b[625] token:=s_fadd
token G:269 SG com/checksyn.b[626] token:=s_fsub
token G:269 SG com/checksyn.b[628] token:=s_fass
token G:269 SG com/checksyn.b[629] token:=s_assfmul
token G:269 SG com/checksyn.b[630] token:=s_assfdiv
token G:269 SG com/checksyn.b[631] token:=s_assfmod
token G:269 SG com/checksyn.b[632] token:=s_assfadd
token G:269 SG com/checksyn.b[633] token:=s_assfsub
token G:269 SG com/checksyn.b[635] token:=s_feq
token G:269 SG com/checksyn.b[636] token:=s_fne
token G:269 SG com/checksyn.b[637] token:=s_fls
token G:269 SG com/checksyn.b[638] token:=s_fle
token G:269 SG com/checksyn.b[639] token:=s_fgr
token G:269 SG com/checksyn.b[640] token:=s_fge
token G:269 SG com/checksyn.b[642] token:=s_fcond
token G:269 SG com/checksyn.b[649] token:=s_lparen
token G:269 SG com/checksyn.b[650] token:=s_rparen
token G:269 SG com/checksyn.b[651] token:=s_sbra
token G:269 SG com/checksyn.b[652] token:=s_sket
token G:269 SG com/checksyn.b[653] token:=s_query
token G:269 SG com/checksyn.b[654] token:=s_comma
token G:269 SG com/checksyn.b[655] token:=s_semicolon
token G:269 SG com/checksyn.b[656] token:=s_lv
token G:269 SG com/checksyn.b[657] token:=s_byteap
token G:269 SG com/checksyn.b[660] token:=s_yields
token G:269 SG com/checksyn.b[661] token:=s_eq
token G:269 SG com/checksyn.b[665] token:=s_range
token G:269 SG com/checksyn.b[666] token:=s_dot
token G:269 SG com/checksyn.b[675] token:=assop
token G:269 SG com/checksyn.b[678] token:=s_vecap
token G:269 SG com/checksyn.b[679] token:=s_mul
token G:269 SG com/checksyn.b[680] token:=s_add
token G:269 SG com/checksyn.b[681] token:=s_logand
token G:269 SG com/checksyn.b[682] token:=s_logor
token G:269 SG com/checksyn.b[717] token:=s_div
token G:269 SG com/checksyn.b[722] token:=s_ne
token G:269 SG com/checksyn.b[723] token:=s_not
token G:269 SG com/checksyn.b[732] token:=s_ne
token G:269 SG com/checksyn.b[733] token:=s_not
token G:269 SG com/checksyn.b[737] token:=s_le
token G:269 SG com/checksyn.b[739] token:=s_lshift
token G:269 SG com/checksyn.b[742] token:=s_seq
token G:269 SG com/checksyn.b[743] token:=s_ls
token G:269 SG com/checksyn.b[747] token:=s_ge
token G:269 SG com/checksyn.b[749] token:=s_rshift
token G:269 SG com/checksyn.b[752] token:=s_gr
token G:269 SG com/checksyn.b[756] token:=s_cond
token G:269 SG com/checksyn.b[757] token:=s_sub
token G:269 SG com/checksyn.b[761] token:=s_ass
token G:269 SG com/checksyn.b[762] token:=s_of
token G:269 SG com/checksyn.b[763] token:=s_colon
token G:269 SG com/checksyn.b[863] token:=s_string
token G:269 SG com/checksyn.b[871] token:=s_number
token G:269 SG com/checksyn.b[890] token:=s_eof
tokenp G:314 DEF com/checksyn.b[133] tokenp=
tokenp G:314 LG com/checksyn.b[1428] TEST tokenp<0 THEN .. ELSE ..
tokenp G:314 LG com/checksyn.b[1431] -tokenp
tokenp G:314 LG com/checksyn.b[1443] tokenp
tokenp G:314 LG com/checksyn.b[1470] tokenp:=-tokenp
tokenp G:314 LG com/checksyn.b[1512] tokenpmax:=tokenp
tokenp G:314 LG com/checksyn.b[1598]
    bracketposv!bracketdepth:=tokenp-t_size
tokenp G:314 LG com/checksyn.b[1629] tokenv!(tokenp-t_size+t_index):=-2
tokenp G:314 LG com/checksyn.b[1721] bracketposv!bracketdepth:=tokenp
tokenp G:314 LG com/checksyn.b[1738] bracketposv!bracketdepth:=tokenp
tokenp G:314 LG com/checksyn.b[1890] prlineno(t_lno!tokenp)
tokenp G:314 LG com/checksyn.b[1894] prlocation(tokenp)
tokenp G:314 LG com/checksyn.b[2644] prlocation(tokenp)
tokenp G:314 SG com/checksyn.b[1432] tokenp:=p
tokenp G:314 SG com/checksyn.b[1446] tokenp:=p
tokenp G:314 SG com/checksyn.b[1470] tokenp:=-tokenp
tokenp G:314 SG com/checksyn.b[1504] tokenp:=sxpushval(tokensxv,tok)
tokenp G:314 SG com/checksyn.b[1511] tokenp:=tokenv+tokenv!0
tokenp G:314 SG com/checksyn.b[254] tokenp:=0
tokenp G:314 SG com/checksyn.b[347] tokenp:=0
tokenp G:314 SG com/checksyn.b[390] tokenp:=0
tokenp G:314 SG com/checksyn.b[404] tokenp:=0
tokenphwm G:316 DEF com/checksyn.b[137] tokenphwm=
tokenplim G:317 DEF com/checksyn.b[138] tokenplim=
tokenpmax G:315 DEF com/checksyn.b[134] tokenpmax=
tokenpmax G:315 LG com/checksyn.b[1445] UNLESS p=tokenpmax DO ..
tokenpmax G:315 SG com/checksyn.b[1512] tokenpmax:=tokenp
tokenpmax G:315 SG com/checksyn.b[255] tokenpmax:=0
tokenpmax G:315 SG com/checksyn.b[348] tokenpmax:=0
tokenq G:318 DEF com/checksyn.b[139] tokenq=
tokensxv G:313 DEF com/checksyn.b[129] tokensxv=
tokensxv G:313 LG com/checksyn.b[1504] tokenp:=sxpushval(tokensxv,tok)
tokensxv G:313 LG com/checksyn.b[1505] sxpushval(tokensxv,val)
tokensxv G:313 LG com/checksyn.b[1506] sxpushval(tokensxv,lineno)
tokensxv G:313 LG com/checksyn.b[1507] sxpushval(tokensxv,0)
tokensxv G:313 LG com/checksyn.b[1508] sxpushval(tokensxv,-1)
tokensxv G:313 SG com/checksyn.b[346] tokensxv:=@tokenvupb
tokenv G:312 DEF com/checksyn.b[128] tokenv=
tokenv G:312 LG com/checksyn.b[1433] p:=tokenv+p
tokenv G:312 LG com/checksyn.b[1447] p:=tokenv+p
tokenv G:312 LG com/checksyn.b[1511] tokenp:=tokenv+tokenv!0
tokenv G:312 LG com/checksyn.b[1629] tokenv!(tokenp-t_size+t_index):=-2
tokenv G:312 LG com/checksyn.b[1914] tokenv+tokp
tokenv G:312 LG com/checksyn.b[1920] IF p<tokenv DO ..
tokenv G:312 LG com/checksyn.b[1921] p:=tokenv+1
tokenv G:312 LG com/checksyn.b[359] UNLESS tokenv DO ..
tokenv G:312 LG com/checksyn.b[368] tokenv+1+5*t_size
tokenv G:312 LG com/checksyn.b[438] IF tokenv DO ..
tokenv G:312 LG com/checksyn.b[438] freevec(tokenv)
tokenv G:312 SG com/checksyn.b[253] tokenv:=0
tokenv G:312 SG com/checksyn.b[342] tokenv:=0
tokenvupb G:311 DEF com/checksyn.b[128] tokenvupb=
tokenvupb G:311 LLG com/checksyn.b[346] tokensxv:=@tokenvupb
tokenvupb G:311 SG com/checksyn.b[342] tokenvupb:=0
tokindex G:273 DEF com/checksyn.b[62] tokindex=
tokindex G:273 SG com/checksyn.b[350] tokindex:=0
toktab G:272 DEF com/checksyn.b[61] toktab=
toktab G:272 SG com/checksyn.b[350] toktab:=0
tokval G:271 DEF com/checksyn.b[56] tokval=
tokval G:271 LG com/checksyn.b[1813] IF tokval=0 DO ..
tokval G:271 LG com/checksyn.b[1814]
    writef("%i4: %12t  %s*n",ln,opname(token),tokval)
tokval G:271 LG com/checksyn.b[1818]
    writef("%i4: %12t  %n*n",ln,opname(token),tokval)
tokval G:271 LG com/checksyn.b[1822]
    writef("%i4: '%13.9e *n",ln,opname(token),tokval)
tokval G:271 LG com/checksyn.b[1828] TEST tokval=0 THEN .. ELSE ..
tokval G:271 LG com/checksyn.b[1832] prtag(tokval)
tokval G:271 LG com/checksyn.b[1839] IF tokval=0 DO ..
tokval G:271 LG com/checksyn.b[1841] FOR i=1 TO tokval%0 DO..
tokval G:271 LG com/checksyn.b[1842] tokval%i
tokval G:271 LG com/checksyn.b[1861]
    writef("%i4: %12t  %n*n",ln,opname(token),tokval)
tokval G:271 LG com/checksyn.b[1984]
    IF tokval=0&(token=s_global|token=s_manifest|token=s_static|token=s_let|token=s_and) DO ..
tokval G:271 LG com/checksyn.b[2642] prtoken(token,tokval)
tokval G:271 LG com/checksyn.b[397] prtoken(token,tokval)
tokval G:271 SG com/checksyn.b[1436] tokval:=t_val!p
tokval G:271 SG com/checksyn.b[1450] tokval:=t_val!p
tokval G:271 SG com/checksyn.b[1468] tokval:=q!1
tokval G:271 SG com/checksyn.b[1813] tokval:="dummy"
tokval G:271 SG com/checksyn.b[1839] tokval:="dummy"
tokval G:271 SG com/checksyn.b[350] tokval:=0
translate G:222 DEF bcplfecg.h[190] translate=
treep G:205 DEF bcplfecg.h[173] treep=
treevec G:206 DEF bcplfecg.h[173] treevec=
trnerr G:221 DEF bcplfecg.h[189] trnerr=
trng M:330 DEF bcplfecg.h[30] trng=feg+70
trng M:330 MAN bcplfecg.h[31] cgg=trng+90
ug M:200 DEF libhdr.h[244] ug=200
ug M:200 MAN bcplfecg.h[27] intg=ug
unhold G:159 DEF libhdr.h[212] unhold=159
unloadseg G:106 DEF libhdr.h[145] unloadseg=106
unmk3 G:352 DEF com/checksyn.b[173] unmk3=
unmk3 G:352 RT com/checksyn.b[1379] LET unmk3(p)BE..
unmk4 G:353 DEF com/checksyn.b[174] unmk4=
unmk4 G:353 RT com/checksyn.b[1392] LET unmk4(p)BE..
unpackstring G:31 DEF libhdr.h[69] unpackstring=31
unrdch G:40 DEF libhdr.h[78] unrdch=40
unrdch G:40 LG com/checksyn.b[1022] unrdch()
unrdch G:40 LG com/checksyn.b[1158] unrdch()
value F:313 FN com/checksyn.b[1240] LET value(ch)=..
value F:313 LF com/checksyn.b[1228] value(ch)
wordbitlen G:243 DEF bcplfecg.h[214] wordbitlen=
wordbitlen G:243 LG com/checksyn.b[507] decval:=wordbitlen
wordbitlen G:243 SG com/checksyn.b[269] wordbitlen:=32
wordbytelen G:242 DEF bcplfecg.h[213] wordbytelen=
wordbytelen G:242 SG com/checksyn.b[269] wordbytelen:=4
wordnode G:270 DEF com/checksyn.b[54] wordnode=
wordnode G:270 LG com/checksyn.b[1576] pushtok(token,@h3!wordnode)
wordnode G:270 LG com/checksyn.b[1758] @h2!wordnode
wordnode G:270 LG com/checksyn.b[536] IF skiptag=wordnode DO ..
wordnode G:270 LG com/checksyn.b[547]
    h1!wordnode:=token=s_true->s_false,s_true
wordnode G:270 LG com/checksyn.b[562] skiptag:=wordnode
wordnode G:270 LG com/checksyn.b[570] sectiontag:=wordnode
wordnode G:270 LG com/checksyn.b[576] sectiontag:=wordnode
wordnode G:270 LG com/checksyn.b[861] h1!wordnode:=s_string
wordnode G:270 LG com/checksyn.b[862] @h2!wordnode%i:=charv%i
wordnode G:270 LG com/checksyn.b[906]
    TEST @h3!wordnode%i=word%i THEN .. ELSE ..
wordnode G:270 LG com/checksyn.b[906] UNTIL wordnode=0|i>len DO ..
wordnode G:270 LG com/checksyn.b[908] wordnode:=h2!wordnode
wordnode G:270 LG com/checksyn.b[910] UNLESS wordnode DO ..
wordnode G:270 LG com/checksyn.b[912] h1!wordnode:=s_name
wordnode G:270 LG com/checksyn.b[912] h2!wordnode:=nametable!hashval
wordnode G:270 LG com/checksyn.b[913] @h3!wordnode%i:=word%i
wordnode G:270 LG com/checksyn.b[914] nametable!hashval:=wordnode
wordnode G:270 LG com/checksyn.b[917] RESULTIS h1!wordnode
wordnode G:270 LG com/checksyn.b[920] h1!wordnode:=sym
wordnode G:270 LG com/checksyn.b[995] nulltag:=wordnode
wordnode G:270 SG com/checksyn.b[860]
    wordnode:=newvec(len/bytesperword+2)
wordnode G:270 SG com/checksyn.b[904] wordnode:=nametable!hashval
wordnode G:270 SG com/checksyn.b[908] wordnode:=h2!wordnode
wordnode G:270 SG com/checksyn.b[911]
    wordnode:=newvec(len/bytesperword+2)
wrch G:41 DEF libhdr.h[79] wrch=41
wrch G:41 LG com/checksyn.b[1008] wrch(k)
wrch G:41 LG com/checksyn.b[1844] wrch(ch)
wrch G:41 LG com/checksyn.b[3100] wrch(s%i)
wrch G:41 LG com/checksyn.b[3101] wrch(32)
wrch G:41 LG com/checksyn.b[3108] wrch(s%i)
wrch G:41 LG com/checksyn.b[3109] wrch(32)
wrch G:41 LG com/checksyn.b[3283] wrch(s%i)
wrchbuf G:297 DEF com/checksyn.b[80] wrchbuf=
wrchbuf G:297 LG com/checksyn.b[1880] wrchbuf()
wrchbuf G:297 RT com/checksyn.b[1004] LET wrchbuf()BE..
writed G:85 DEF libhdr.h[123] writed=85
writee G:180 DEF libhdr.h[231] writee=180
writef G:94 DEF libhdr.h[133] writef=94
writef G:94 LG com/checksyn.b[1462] writef("Syste'n rdtok*n")
writef G:94 LG com/checksyn.b[1657] writef("Error'ar line ")
writef G:94 LG com/checksyn.b[1658] writef(": Rep' with $)")
writef G:94 LG com/checksyn.b[1692] writef("Near line ")
writef G:94 LG com/checksyn.b[1693] writef(": Inserting ")
writef G:94 LG com/checksyn.b[1694] writef(" before ")
writef G:94 LG com/checksyn.b[1704] writef("Error'ar line ")
writef G:94 LG com/checksyn.b[1705] writef(": Replacing ")
writef G:94 LG com/checksyn.b[1706] writef(" with ")
writef G:94 LG com/checksyn.b[1806]
    writef("%i4: %12t*n",ln,opname(token))
writef G:94 LG com/checksyn.b[1814]
    writef("%i4: %12t  %s*n",ln,opname(token),tokval)
writef G:94 LG com/checksyn.b[1818]
    writef("%i4: %12t  %n*n",ln,opname(token),tokval)
writef G:94 LG com/checksyn.b[1822]
    writef("%i4: '%13.9e *n",ln,opname(token),tokval)
writef G:94 LG com/checksyn.b[1827]
    writef("%i4: %12t  ",ln,opname(token))
writef G:94 LG com/checksyn.b[1829] writef("0")
writef G:94 LG com/checksyn.b[1831] writef("*"")
writef G:94 LG com/checksyn.b[1833] writef("*"")
writef G:94 LG com/checksyn.b[1840]
    writef("%i4: %12t *"",ln,opname(token))
writef G:94 LG com/checksyn.b[1861]
    writef("%i4: %12t  %n*n",ln,opname(token),tokval)
writef G:94 LG com/checksyn.b[1872] writef("%s[%n]",filename,ln)
writef G:94 LG com/checksyn.b[1876] writef("*nError near ")
writef G:94 LG com/checksyn.b[1878] writef(":  ")
writef G:94 LG com/checksyn.b[1879] writef(mess,a,b,c)
writef G:94 LG com/checksyn.b[1889] writef("*nError near ")
writef G:94 LG com/checksyn.b[1891] writef(":  ")
writef G:94 LG com/checksyn.b[1892] writef(mess,a,b,c)
writef G:94 LG com/checksyn.b[1930] writef("Recen' error:*n")
writef G:94 LG com/checksyn.b[1948] writef("*nError near ")
writef G:94 LG com/checksyn.b[1949] writef("%s",filename)
writef G:94 LG com/checksyn.b[1950] writef("[%n]:  ",ln)
writef G:94 LG com/checksyn.b[1951] writef(mess,a,b,c)
writef G:94 LG com/checksyn.b[1979] writef("*nSkip'if any.*n")
writef G:94 LG com/checksyn.b[227] writef("*nchec'l 2022)*n")
writef G:94 LG com/checksyn.b[235] writef("SYSTE'o large*n")
writef G:94 LG com/checksyn.b[2529] writef("eclass=%n*n",eclass)
writef G:94 LG com/checksyn.b[261] writef("Bad a'mat:*n%s*n",argformat)
writef G:94 LG com/checksyn.b[2640] writef("*nError near ")
writef G:94 LG com/checksyn.b[2641] writef(":  Ex'ted but ")
writef G:94 LG com/checksyn.b[2643] writef("canno'ression*n")
writef G:94 LG com/checksyn.b[2867] writef("*nUnkn'op = %n*n",op)
writef G:94 LG com/checksyn.b[297]
    writef("Troub'file %s*n",fromfilename)
writef G:94 LG com/checksyn.b[3091] writef("Op%n ",tok)
writef G:94 LG com/checksyn.b[3093] writef("%s ",val)
writef G:94 LG com/checksyn.b[3094] writef("*"%s*" ",val)
writef G:94 LG com/checksyn.b[3095] writef("%n ",val)
writef G:94 LG com/checksyn.b[3096] writef("%6.3e ",val)
writef G:94 LG com/checksyn.b[3099] writef("$(")
writef G:94 LG com/checksyn.b[3104] writef("{ ")
writef G:94 LG com/checksyn.b[3107] writef("$)")
writef G:94 LG com/checksyn.b[3112] writef("} ")
writef G:94 LG com/checksyn.b[3114] writef("ABS ")
writef G:94 LG com/checksyn.b[3115] writef("AND ")
writef G:94 LG com/checksyn.b[3116] writef(":= ")
writef G:94 LG com/checksyn.b[3117] writef("/:= ")
writef G:94 LG com/checksyn.b[3118] writef("EQV:= ")
writef G:94 LG com/checksyn.b[3119] writef("#/:= ")
writef G:94 LG com/checksyn.b[3120] writef("#MOD:= ")
writef G:94 LG com/checksyn.b[3121] writef("#-:= ")
writef G:94 LG com/checksyn.b[3122] writef("#**:= ")
writef G:94 LG com/checksyn.b[3123] writef("#+:= ")
writef G:94 LG com/checksyn.b[3124] writef("&:= ")
writef G:94 LG com/checksyn.b[3125] writef("|:= ")
writef G:94 LG com/checksyn.b[3126] writef("<<:= ")
writef G:94 LG com/checksyn.b[3127] writef("-:= ")
writef G:94 LG com/checksyn.b[3128] writef("**:= ")
writef G:94 LG com/checksyn.b[3129] writef("XOR:= ")
writef G:94 LG com/checksyn.b[3130] writef("+:= ")
writef G:94 LG com/checksyn.b[3131] writef("MOD:= ")
writef G:94 LG com/checksyn.b[3132] writef(">>:= ")
writef G:94 LG com/checksyn.b[3133] writef("!:= ")
writef G:94 LG com/checksyn.b[3134] writef("BE ")
writef G:94 LG com/checksyn.b[3135] writef("BY ")
writef G:94 LG com/checksyn.b[3136] writef("BREAK ")
writef G:94 LG com/checksyn.b[3137] writef("%% ")
writef G:94 LG com/checksyn.b[3138] writef("CASE ")
writef G:94 LG com/checksyn.b[3139] writef(": ")
writef G:94 LG com/checksyn.b[3140] writef(", ")
writef G:94 LG com/checksyn.b[3141] writef("-> ")
writef G:94 LG com/checksyn.b[3142] writef("DEFAULT ")
writef G:94 LG com/checksyn.b[3143] writef("/ ")
writef G:94 LG com/checksyn.b[3144] writef("DO ")
writef G:94 LG com/checksyn.b[3145] writef(". ")
writef G:94 LG com/checksyn.b[3146] writef("ELSE ")
writef G:94 LG com/checksyn.b[3147] writef("ENDCASE ")
writef G:94 LG com/checksyn.b[3148] writef("<EOF> ")
writef G:94 LG com/checksyn.b[3149] writef("= ")
writef G:94 LG com/checksyn.b[3150] writef("EQV ")
writef G:94 LG com/checksyn.b[3151] writef("EVERY ")
writef G:94 LG com/checksyn.b[3152] writef("EXIT ")
writef G:94 LG com/checksyn.b[3153] writef("#ABS ")
writef G:94 LG com/checksyn.b[3154] writef("#+ ")
writef G:94 LG com/checksyn.b[3155] writef("FALSE ")
writef G:94 LG com/checksyn.b[3156] writef("#:= ")
writef G:94 LG com/checksyn.b[3157] writef("#-> ")
writef G:94 LG com/checksyn.b[3158] writef("#/ ")
writef G:94 LG com/checksyn.b[3159] writef("#= ")
writef G:94 LG com/checksyn.b[3160] writef("#>= ")
writef G:94 LG com/checksyn.b[3161] writef("#> ")
writef G:94 LG com/checksyn.b[3162] writef("FINISH ")
writef G:94 LG com/checksyn.b[3163] writef("FIX ")
writef G:94 LG com/checksyn.b[3164] writef("#<= ")
writef G:94 LG com/checksyn.b[3165] writef("FLOAT ")
writef G:94 LG com/checksyn.b[3166] writef("FLT ")
writef G:94 LG com/checksyn.b[3167] writef("#< ")
writef G:94 LG com/checksyn.b[3168] writef("#MOD ")
writef G:94 LG com/checksyn.b[3169] writef("#~= ")
writef G:94 LG com/checksyn.b[3170] writef("#- ")
writef G:94 LG com/checksyn.b[3171] writef("#** ")
writef G:94 LG com/checksyn.b[3172] writef("#+ ")
writef G:94 LG com/checksyn.b[3173] writef("#.. ")
writef G:94 LG com/checksyn.b[3175] writef("#- ")
writef G:94 LG com/checksyn.b[3177] writef("FOR ")
writef G:94 LG com/checksyn.b[3178] writef(">= ")
writef G:94 LG com/checksyn.b[3179] writef("GET ")
writef G:94 LG com/checksyn.b[3180] writef("%% ")
writef G:94 LG com/checksyn.b[3181] writef("GLOBAL ")
writef G:94 LG com/checksyn.b[3182] writef("GOTO ")
writef G:94 LG com/checksyn.b[3183] writef("> ")
writef G:94 LG com/checksyn.b[3184] writef("IF ")
writef G:94 LG com/checksyn.b[3185] writef("INTO ")
writef G:94 LG com/checksyn.b[3186] writef("<= ")
writef G:94 LG com/checksyn.b[3187] writef("LET ")
writef G:94 LG com/checksyn.b[3188] writef("& ")
writef G:94 LG com/checksyn.b[3189] writef("| ")
writef G:94 LG com/checksyn.b[3190] writef("LOOP ")
writef G:94 LG com/checksyn.b[3191] writef("( ")
writef G:94 LG com/checksyn.b[3192] writef("< ")
writef G:94 LG com/checksyn.b[3193] writef("<< ")
writef G:94 LG com/checksyn.b[3194] writef("@ ")
writef G:94 LG com/checksyn.b[3195] writef("MANIFEST ")
writef G:94 LG com/checksyn.b[3196] writef("MATCH ")
writef G:94 LG com/checksyn.b[3197] writef("MOD ")
writef G:94 LG com/checksyn.b[3198] writef("# ")
writef G:94 LG com/checksyn.b[3199] writef("** ")
writef G:94 LG com/checksyn.b[3200] writef("~= ")
writef G:94 LG com/checksyn.b[3201] writef("NEEDS ")
writef G:94 LG com/checksyn.b[3202] writef("- ")
writef G:94 LG com/checksyn.b[3203] writef("NEXT ")
writef G:94 LG com/checksyn.b[3204] writef("~ ")
writef G:94 LG com/checksyn.b[3205] writef("OF ")
writef G:94 LG com/checksyn.b[3206] writef("+ ")
writef G:94 LG com/checksyn.b[3208] writef("= ")
writef G:94 LG com/checksyn.b[3209] writef("~= ")
writef G:94 LG com/checksyn.b[320] writef("Insuf'ailable*n")
writef G:94 LG com/checksyn.b[3210] writef("< ")
writef G:94 LG com/checksyn.b[3211] writef("> ")
writef G:94 LG com/checksyn.b[3212] writef("<= ")
writef G:94 LG com/checksyn.b[3213] writef(">= ")
writef G:94 LG com/checksyn.b[3215] writef("#= ")
writef G:94 LG com/checksyn.b[3216] writef("#~= ")
writef G:94 LG com/checksyn.b[3217] writef("#< ")
writef G:94 LG com/checksyn.b[3218] writef("#> ")
writef G:94 LG com/checksyn.b[3219] writef("#<= ")
writef G:94 LG com/checksyn.b[3220] writef("#>= ")
writef G:94 LG com/checksyn.b[3222] writef("| ")
writef G:94 LG com/checksyn.b[3224] writef("%% ")
writef G:94 LG com/checksyn.b[3225] writef("? ")
writef G:94 LG com/checksyn.b[3226] writef(".. ")
writef G:94 LG com/checksyn.b[3227] writef("REPEAT ")
writef G:94 LG com/checksyn.b[3228] writef("REPEATUNTIL ")
writef G:94 LG com/checksyn.b[3229] writef("REPEATWHILE ")
writef G:94 LG com/checksyn.b[3230] writef("RESULTIS ")
writef G:94 LG com/checksyn.b[3231] writef("RETURN ")
writef G:94 LG com/checksyn.b[3232] writef(") ")
writef G:94 LG com/checksyn.b[3233] writef(">> ")
writef G:94 LG com/checksyn.b[3234] writef("! ")
writef G:94 LG com/checksyn.b[3235] writef("[ ")
writef G:94 LG com/checksyn.b[3236] writef("SECTION ")
writef G:94 LG com/checksyn.b[3237] writef("; ")
writef G:94 LG com/checksyn.b[3238] writef("<> ")
writef G:94 LG com/checksyn.b[3239] writef("] ")
writef G:94 LG com/checksyn.b[3240] writef("SKIP ")
writef G:94 LG com/checksyn.b[3241] writef("SLCT ")
writef G:94 LG com/checksyn.b[3242] writef("STATIC ")
writef G:94 LG com/checksyn.b[3243] writef("- ")
writef G:94 LG com/checksyn.b[3244] writef("SWITCHON ")
writef G:94 LG com/checksyn.b[3245] writef("TABLE ")
writef G:94 LG com/checksyn.b[3246] writef("TEST ")
writef G:94 LG com/checksyn.b[3247] writef("TO ")
writef G:94 LG com/checksyn.b[3248] writef("TRUE ")
writef G:94 LG com/checksyn.b[3249] writef("UNLESS ")
writef G:94 LG com/checksyn.b[3250] writef("UNTIL ")
writef G:94 LG com/checksyn.b[3251] writef("VALDEF ")
writef G:94 LG com/checksyn.b[3252] writef("VALOF ")
writef G:94 LG com/checksyn.b[3253] writef("VEC ")
writef G:94 LG com/checksyn.b[3254] writef("! ")
writef G:94 LG com/checksyn.b[3255] writef("WHILE ")
writef G:94 LG com/checksyn.b[3256] writef("=> ")
writef G:94 LG com/checksyn.b[3257] writef("XOR ")
writef G:94 LG com/checksyn.b[3261]
    writef("*nCurr'epth=%n ",bracketdepth)
writef G:94 LG com/checksyn.b[3263]
    writef("%n: tok=%n ",i,brackettokv!i)
writef G:94 LG com/checksyn.b[3265] writef(" ?")
writef G:94 LG com/checksyn.b[3266] writef(" (")
writef G:94 LG com/checksyn.b[3267] writef(" [")
writef G:94 LG com/checksyn.b[3270] writef(" {")
writef G:94 LG com/checksyn.b[3271] writef(" $(")
writef G:94 LG com/checksyn.b[360] writef("The p' tokens*n")
writef G:94 LG com/checksyn.b[384] writef("*nThe 'tokenv*n*n")
writef G:94 LG com/checksyn.b[396] writef("<NL>*n")
writef G:94 LG com/checksyn.b[417] writef("No er'e found*n")
writef G:94 LG com/checksyn.b[418] writef("%n er'\ found*n",errcount)
writeflt G:73 DEF libhdr.h[111] writeflt=73
writehex G:87 DEF libhdr.h[125] writehex=87
writen G:86 DEF libhdr.h[124] writen=86
writeoct G:88 DEF libhdr.h[126] writeoct=88
writes G:89 DEF libhdr.h[127] writes=89
writes G:89 LG com/checksyn.b[1005] writes("*n...")
writes G:89 LG com/checksyn.b[1846] writes("**n")
writes G:89 LG com/checksyn.b[1847] writes("**s")
writes G:89 LG com/checksyn.b[1848] writes("**p")
writes G:89 LG com/checksyn.b[1849] writes("**t")
writes G:89 LG com/checksyn.b[1852] writes("*"*n")
writes G:89 LG com/checksyn.b[1902] writes("*nComp'aborted*n")
writes G:89 LG com/checksyn.b[1955] writes("*nComp'aborted*n")
writes G:89 LG com/checksyn.b[280] writes("Insuf' memory*n")
writet G:90 DEF libhdr.h[128] writet=90
writeu G:91 DEF libhdr.h[129] writeu=91
writewords G:45 DEF libhdr.h[83] writewords=45
writez G:92 DEF libhdr.h[130] writez=92
wrn G:220 DEF bcplfecg.h[187] wrn=
xrefing G:232 DEF bcplfecg.h[201] xrefing=
